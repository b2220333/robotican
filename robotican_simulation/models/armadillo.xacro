<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="Armadillo" description="Armadillo robot">
	<xacro:include filename="$(find robotican_description)/armadillo/robots/armadillo.xacro" />
	
	
	<xacro:arg name="front_camera" default="false"/>
	<xacro:arg name="urf" default="false"/>
	<xacro:arg name="imu" default="false"/>
	<xacro:arg name="gps" default="false"/>	
	<xacro:arg name="lidar" default="false"/>

	
	<link name="dummy_link">
	</link>
	<joint name="dummy_joint" type="fixed">
		<origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
		<parent link="dummy_link" />
		<child link="base_link" />
		<axis xyz="0 0 0" />

	</joint>
	
	<gazebo> 
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
		</plugin> 
	</gazebo>
	
<xacro:property name="M_PI" value="3.1415926535897931" />
<xacro:property name="URF_FOV" value="${10.0*M_PI/180}" />

	<!-- Sonars -->
<xacro:if value="$(arg urf)">
<gazebo reference="left_urf_link">
    <sensor type="ray" name="range">
        <always_on>true</always_on>
        <update_rate>10</update_rate>
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <ray>
            <scan>
                <horizontal>
                    <samples>10</samples>
                    <resolution>1</resolution>
                    <min_angle>${-URF_FOV/2.0}</min_angle>
                    <max_angle>${URF_FOV/2.0}</max_angle>
                </horizontal>
		<vertical>
                    <samples>10</samples>
                    <resolution>1</resolution>
                    <min_angle>${-URF_FOV/2.0}</min_angle>
                    <max_angle>${URF_FOV/2.0}</max_angle>
                </vertical>
            </scan>
            <range>
                <min>0.01</min>
                <max>5.0</max>
                <resolution>0.001</resolution>
            </range>
        </ray>
        <plugin name="gazebo_ros_left_urf_controller" filename="libhector_gazebo_ros_sonar.so">
        <gaussianNoise>0.0001</gaussianNoise>
        <topicName>URF/left</topicName>
        <frameId>left_urf_link</frameId>
        </plugin>
    </sensor>
</gazebo>
<gazebo reference="right_urf_link">
    <sensor type="ray" name="range">
        <always_on>true</always_on>
        <update_rate>10</update_rate>
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <ray>
            <scan>
                <horizontal>
                    <samples>10</samples>
                    <resolution>1</resolution>
                    <min_angle>${-URF_FOV/2.0}</min_angle>
                    <max_angle>${URF_FOV/2.0}</max_angle>
                </horizontal>
		<vertical>
                    <samples>10</samples>
                    <resolution>1</resolution>
                    <min_angle>${-URF_FOV/2.0}</min_angle>
                    <max_angle>${URF_FOV/2.0}</max_angle>
                </vertical>
            </scan>
            <range>
                <min>0.01</min>
                <max>5.0</max>
                <resolution>0.01</resolution>
            </range>
        </ray>
        <plugin name="gazebo_ros_left_urf_controller" filename="libhector_gazebo_ros_sonar.so">
        <gaussianNoise>0.001</gaussianNoise>
        <topicName>URF/right</topicName>
        <frameId>right_urf_link</frameId>
        </plugin>
    </sensor>
</gazebo>
<gazebo reference="rear_urf_link">
    <sensor type="ray" name="range">
        <always_on>true</always_on>
        <update_rate>10</update_rate>
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <ray>
            <scan>
                <horizontal>
                    <samples>10</samples>
                    <resolution>1</resolution>
                    <min_angle>${-URF_FOV/2.0}</min_angle>
                    <max_angle>${URF_FOV/2.0}</max_angle>
                </horizontal>
		<vertical>
                    <samples>10</samples>
                    <resolution>1</resolution>
                    <min_angle>${-URF_FOV/2.0}</min_angle>
                    <max_angle>${URF_FOV/2.0}</max_angle>
                </vertical>
            </scan>
            <range>
                <min>0.01</min>
                <max>5.0</max>
                <resolution>0.01</resolution>
            </range>
        </ray>
        <plugin name="gazebo_ros_left_urf_controller" filename="libhector_gazebo_ros_sonar.so">
        <gaussianNoise>0.0001</gaussianNoise>
        <topicName>URF/rear</topicName>
        <frameId>rear_urf_link</frameId>
        </plugin>
    </sensor>
</gazebo>
</xacro:if>	
	
	
	  <!-- hokuyo URG-04LX-UG01   -->
<xacro:if value="$(arg lidar)">
  <gazebo reference="laser_link">
     <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>667</samples>
            <resolution>1</resolution>
            <min_angle>-1.81</min_angle>
            <max_angle>1.81</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.02</min>
          <max>5.6</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>laser_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
</xacro:if>


  <!-- GPS   -->
<xacro:if value="$(arg gps)">
   <gazebo>
    <plugin name="GazeboRosGps" filename="libhector_gazebo_ros_gps.so">
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <frameId>base_link</frameId>
      <topicName>GPS/fix</topicName>
      <serviceName>SERVICE_GPS</serviceName>
      <velocityTopicName>GPS/fix_velocity</velocityTopicName>
      <gaussianNoise>2.89e-08 2.89e-08 2.89e-08</gaussianNoise>
      <velocityGaussianNoise>2.89e-08 2.89e-08 2.89e-08</velocityGaussianNoise>
    </plugin>
   </gazebo>
  </xacro:if>
  
  <!-- IMU   -->
  <xacro:if value="$(arg imu)">
    <gazebo>
      <plugin name="GazeboRosImu" filename="libhector_gazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate> 
      <bodyName>base_link</bodyName>
      <frameId>base_link</frameId>
      <topicName>IMU/data</topicName>
      <gaussianNoise>2.89e-08</gaussianNoise>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
      <material>Gazebo/Red</material>
       </plugin>
  </gazebo>

  <!-- Magnetic   -->
    <gazebo>
      <plugin name="GazeboRosMagnetic" filename="libhector_gazebo_ros_magnetic.so">
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <frameId>base_link</frameId>
      <topicName>IMU/magnetic</topicName>
      <offset>0 0 0</offset>
      <drift>0.0 0.0 0.0</drift>
      <gaussianNoise>1.3e-2 1.3e-2 1.3e-2</gaussianNoise>
    </plugin>
   </gazebo>
</xacro:if>

  <!-- cameras  -->
<xacro:if value="$(arg front_camera)">
  <gazebo reference="front_cam_link">
    <sensor type="camera" name="front_camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>front_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>front_cam_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
 </xacro:if>
  <!-- joints -->
	<transmission name="left_wheel_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="left_wheel_joint">
			<hardwareInterface>VelocityJointInterface</hardwareInterface>
		</joint>
			<actuator name="left_wheel_joint_motor">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
	</transmission>
	
	<transmission name="right_wheel_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="right_wheel_joint">
			<hardwareInterface>VelocityJointInterface</hardwareInterface>
		</joint>
			<actuator name="right_wheel_joint_motor">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
	</transmission>

	<transmission name="base_elevator_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="base_elevator_joint">
			<hardwareInterface>PositionJointInterface</hardwareInterface>
		</joint>
			<actuator name="base_elevator_joint_motor">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
	</transmission>

	<transmission name="rotation1_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="rotation1_joint">
			<hardwareInterface>PositionJointInterface</hardwareInterface>
		</joint>
			<actuator name="rotation1_joint_motor">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
	</transmission>

	<transmission name="shoulder1_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="shoulder1_joint">
			<hardwareInterface>PositionJointInterface</hardwareInterface>
		</joint>
			<actuator name="shoulder1_joint_motor">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
	</transmission>

	<transmission name="shoulder2_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="shoulder2_joint">
			<hardwareInterface>PositionJointInterface</hardwareInterface>
		</joint>
			<actuator name="shoulder2_joint_motor">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
	</transmission>

	<transmission name="rotation2_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="rotation2_joint">
			<hardwareInterface>PositionJointInterface</hardwareInterface>
		</joint>
			<actuator name="rotation2_joint_motor">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
	</transmission>
	
	<transmission name="shoulder3_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="shoulder3_joint">
			<hardwareInterface>PositionJointInterface</hardwareInterface>
		</joint>
			<actuator name="shoulder3_joint_motor">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
	</transmission>
	
	<transmission name="wrist_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="wrist_joint">
			<hardwareInterface>PositionJointInterface</hardwareInterface>
		</joint>
			<actuator name="wrist_joint_motor">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
	</transmission>
	
	<transmission name="left_finger_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="left_finger_joint">
			<hardwareInterface>PositionJointInterface</hardwareInterface>
		</joint>
			<actuator name="left_finger_joint_motor">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
	</transmission>

	<transmission name="right_finger_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="right_finger_joint">
			<hardwareInterface>PositionJointInterface</hardwareInterface>
		</joint>
			<actuator name="right_finger_joint_motor">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
	</transmission>
	
	<transmission name="head_pan_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="head_pan_joint">
			<hardwareInterface>PositionJointInterface</hardwareInterface>
		</joint>
			<actuator name="head_pan_joint_motor">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
	</transmission>
	
	<transmission name="head_tilt_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="head_tilt_joint">
			<hardwareInterface>PositionJointInterface</hardwareInterface>
		</joint>
			<actuator name="head_tilt_joint_motor">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
	</transmission>
	

	<gazebo reference="base_elevator_link">
		<turnGravityOff>true</turnGravityOff>
	</gazebo>



</robot>

/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 62 generated on 2016-08-04 11:24:49.956530
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==62);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66;
x0=IKcos(j[0]);
x1=IKcos(j[2]);
x2=IKcos(j[1]);
x3=IKsin(j[1]);
x4=IKsin(j[2]);
x5=IKcos(j[4]);
x6=IKsin(j[4]);
x7=IKsin(j[3]);
x8=IKcos(j[3]);
x9=IKsin(j[0]);
x10=IKcos(j[5]);
x11=IKsin(j[5]);
x12=((IkReal(0.707109999985348))*(x0));
x13=((IkReal(1.00000000000000))*(x7));
x14=((IkReal(0.203650865777126))*(x9));
x15=((IkReal(0.00424262137423857))*(x9));
x16=((IkReal(1.00000000000000))*(x5));
x17=((IkReal(0.177000000000000))*(x7));
x18=((IkReal(0.125158469997407))*(x9));
x19=((IkReal(0.125157330540038))*(x9));
x20=((IkReal(0.707103562373095))*(x9));
x21=((IkReal(0.161221074999524))*(x9));
x22=((IkReal(0.00600000000000000))*(x0));
x23=((IkReal(0.00424265999991209))*(x9));
x24=((IkReal(0.00600000000000000))*(x9));
x25=((IkReal(0.125158469997407))*(x0));
x26=((IkReal(0.0300000000000000))*(x2));
x27=((IkReal(0.707103562373095))*(x0));
x28=((IkReal(1.00000000000000))*(x6));
x29=((IkReal(0.00424265999991209))*(x0));
x30=((IkReal(0.707109999985348))*(x9));
x31=((IkReal(0.161221074999524))*(x0));
x32=((IkReal(0.00424262137423857))*(x0));
x33=((IkReal(0.203650865777126))*(x0));
x34=((IkReal(0.264000000000000))*(x3));
x35=((IkReal(0.125157330540038))*(x0));
x36=((IkReal(0.177000000000000))*(x8));
x37=((x2)*(x4));
x38=((x1)*(x3));
x39=((x3)*(x4));
x40=((x1)*(x2));
x41=((x6)*(x8));
x42=((x0)*(x8));
x43=((IkReal(1.00000000000000))*(x8)*(x9));
x44=((IkReal(0.707109999985348))*(x39));
x45=((IkReal(0.707103562373095))*(x40));
x46=((x12)*(x39));
x47=((x27)*(x40));
x48=((x20)*(x40));
x49=((x30)*(x39));
x50=((((IkReal(0.707109999985348))*(x40)))+(((IkReal(0.707103562373095))*(x37)))+(((IkReal(0.707103562373095))*(x38))));
x51=((((IkReal(0.707109999985348))*(x38)))+(((IkReal(0.707109999985348))*(x37)))+(((IkReal(0.707103562373095))*(x39))));
x52=((x44)+(((IkReal(-1.00000000000000))*(x50))));
x53=((((x27)*(((x38)+(x37)))))+(((x12)*(x40))));
x54=((((x27)*(x39)))+(((x12)*(((x38)+(x37))))));
x55=((((x20)*(x39)))+(((x30)*(((x38)+(x37))))));
x56=((((x20)*(((x38)+(x37)))))+(((x30)*(x40))));
x57=((x52)*(x8));
x58=((((IkReal(-1.00000000000000))*(x47)))+(x54));
x59=((x47)+(((IkReal(-1.00000000000000))*(x54))));
x60=((((IkReal(-1.00000000000000))*(x48)))+(x55));
x61=((x48)+(((IkReal(-1.00000000000000))*(x55))));
x62=((((x59)*(x8)))+(((IkReal(-1.00000000000000))*(x13)*(x9))));
x63=((((x0)*(x7)))+(((x61)*(x8))));
x64=((((x28)*(((x45)+(((IkReal(-1.00000000000000))*(x51)))))))+(((IkReal(-1.00000000000000))*(x16)*(x57))));
x65=((((IkReal(-1.00000000000000))*(x16)*(x62)))+(((x28)*(((((IkReal(-1.00000000000000))*(x46)))+(x53))))));
x66=((((x28)*(((((IkReal(-1.00000000000000))*(x49)))+(x56)))))+(((IkReal(-1.00000000000000))*(x16)*(x63))));
eerot[0]=((((x6)*(x62)))+(((x5)*(((((IkReal(-1.00000000000000))*(x46)))+(x53))))));
eerot[1]=((((x11)*(x65)))+(((x10)*(((((IkReal(-1.00000000000000))*(x43)))+(((x58)*(x7))))))));
eerot[2]=((((x11)*(((x43)+(((IkReal(-1.00000000000000))*(x13)*(x58)))))))+(((x10)*(x65))));
IkReal x67=((IkReal(1.00000000000000))*(x24));
IkReal x68=((IkReal(1.00000000000000))*(x39));
eetrans[0]=((((x0)*(x26)))+(((x5)*(((((x35)*(x38)))+(((x35)*(x37)))+(((IkReal(-1.00000000000000))*(x25)*(x68)))+(((x25)*(x40)))))))+(((IkReal(-1.00000000000000))*(x31)*(x68)))+(((IkReal(-1.00000000000000))*(x67)*(x8)))+(((x7)*(((((x29)*(x37)))+(((x29)*(x38)))+(((x32)*(x39)))+(((IkReal(-1.00000000000000))*(x32)*(x40)))))))+(((x31)*(x40)))+(((IkReal(-1.00000000000000))*(x67)))+(((x0)*(x34)))+(((x6)*(((((x36)*(x59)))+(((IkReal(-1.00000000000000))*(x17)*(x9)))))))+(((x33)*(x37)))+(((x33)*(x38))));
eerot[3]=((((x6)*(x63)))+(((x5)*(((((IkReal(-1.00000000000000))*(x49)))+(x56))))));
eerot[4]=((((x11)*(x66)))+(((x10)*(((((x60)*(x7)))+(x42))))));
eerot[5]=((((x11)*(((((IkReal(-1.00000000000000))*(x42)))+(((IkReal(-1.00000000000000))*(x13)*(x60)))))))+(((x10)*(x66))));
IkReal x69=((IkReal(1.00000000000000))*(x39));
eetrans[1]=((((x22)*(x8)))+(((x34)*(x9)))+(((x7)*(((((IkReal(-1.00000000000000))*(x15)*(x40)))+(((x23)*(x37)))+(((x23)*(x38)))+(((x15)*(x39)))))))+(((x21)*(x40)))+(((x14)*(x37)))+(((x14)*(x38)))+(((IkReal(-1.00000000000000))*(x21)*(x69)))+(x22)+(((x26)*(x9)))+(((x6)*(((((x0)*(x17)))+(((x36)*(x61)))))))+(((x5)*(((((x19)*(x38)))+(((x19)*(x37)))+(((x18)*(x40)))+(((IkReal(-1.00000000000000))*(x18)*(x69))))))));
eerot[6]=((((x41)*(x52)))+(((x5)*(((x45)+(((IkReal(-1.00000000000000))*(x51))))))));
eerot[7]=((((x10)*(x7)*(((((IkReal(-1.00000000000000))*(x44)))+(x50)))))+(((x11)*(x64))));
eerot[8]=((((x11)*(x52)*(x7)))+(((x10)*(x64))));
eetrans[2]=((IkReal(0.0690000000000000))+(((x41)*(((((IkReal(0.125158469997407))*(x39)))+(((IkReal(-0.125158469997407))*(x40)))+(((IkReal(-0.125157330540038))*(x38)))+(((IkReal(-0.125157330540038))*(x37)))))))+(((IkReal(0.264000000000000))*(x2)))+(((IkReal(0.203650865777126))*(x40)))+(((IkReal(-0.0300000000000000))*(x3)))+(((IkReal(-0.203650865777126))*(x39)))+(((x7)*(((((IkReal(0.00424265999991209))*(x40)))+(((IkReal(0.00424262137423857))*(x38)))+(((IkReal(0.00424262137423857))*(x37)))+(((IkReal(-0.00424265999991209))*(x39)))))))+(((x5)*(((((IkReal(0.125157330540038))*(x40)))+(((IkReal(-0.125158469997407))*(x37)))+(((IkReal(-0.125158469997407))*(x38)))+(((IkReal(-0.125157330540038))*(x39)))))))+(((IkReal(-0.161221074999524))*(x37)))+(((IkReal(-0.161221074999524))*(x38))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j1,cj1,sj1,htj1,j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((IkReal(-1.00000000000000))*(r02));
new_r01=r01;
new_r02=r00;
new_px=((((IkReal(-0.177000000000000))*(r00)))+(px));
new_r10=((IkReal(-1.00000000000000))*(r12));
new_r11=r11;
new_r12=r10;
new_py=((((IkReal(-0.177000000000000))*(r10)))+(py));
new_r20=((IkReal(-1.00000000000000))*(r22));
new_r21=r21;
new_r22=r20;
new_pz=((IkReal(-0.0690000000000000))+(((IkReal(-0.177000000000000))*(r20)))+(pz));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
IkReal op[72], zeror[48];
int numroots;
IkReal x70=((IkReal(0.516006574023843))*(npz));
IkReal x71=((IkReal(0.0600071344697922))*(npx));
IkReal x72=((IkReal(0.0120000000000000))*(npy));
IkReal x73=((IkReal(1.00000000000000))*(pp));
IkReal x74=((IkReal(0.0600071344697922))*(npy));
IkReal x75=((IkReal(0.120014268939584))*(npx));
IkReal x76=((IkReal(0.0240000000000000))*(npx));
IkReal x77=((IkReal(0.120014268939584))*(npy));
IkReal x78=((IkReal(0.0120000000000000))*(r20));
IkReal x79=((IkReal(0.00600000000000000))*(r21));
IkReal x80=((IkReal(1.03201314804769))*(npx));
IkReal x81=((IkReal(0.120014268939584))*(npz));
IkReal x82=((IkReal(2.06402629609537))*(npy));
IkReal x83=((IkReal(2.00000000000000))*(rxp0_2));
IkReal x84=((IkReal(0.0240000000000000))*(r22));
IkReal x85=((IkReal(4.00000000000000))*(rxp1_2));
IkReal x86=((IkReal(-0.000720085613637506))+(((IkReal(-1.00000000000000))*(x74))));
IkReal x87=((IkReal(1.00000000000000))*(rxp2_2));
IkReal x88=((IkReal(-0.00600000000000000))*(r21));
IkReal x89=((IkReal(-0.0120000000000000))*(r20));
IkReal x90=((((IkReal(-1.00000000000000))*(x77)))+(x76));
IkReal x91=((IkReal(-0.0600071344697922))*(npy));
IkReal x92=((IkReal(-0.000720085613637506))+(x74));
IkReal x93=((IkReal(-1.00000000000000))*(rxp2_2));
IkReal x94=((IkReal(0.00313008984422510))+(x70));
IkReal x95=((x80)+(x81));
IkReal x96=((x77)+(x76));
IkReal x97=((x73)+(x71));
IkReal x98=((x72)+(x71));
IkReal x99=((x73)+(x72));
op[0]=((x72)+(x94)+(((IkReal(-1.00000000000000))*(x97))));
op[1]=x74;
op[2]=x96;
op[3]=x75;
op[4]=((x71)+(x94)+(((IkReal(-1.00000000000000))*(x99))));
op[5]=x91;
op[6]=x92;
op[7]=((((IkReal(-1.00000000000000))*(x73)))+(x98)+(x94));
op[8]=x75;
op[9]=x90;
op[10]=x86;
op[11]=((((IkReal(-1.00000000000000))*(x72)))+(x94)+(((IkReal(-1.00000000000000))*(x97))));
op[12]=((rxp2_2)+(x78));
op[13]=x88;
op[14]=((IkReal(-0.0240000000000000))*(r21));
op[15]=x89;
op[16]=((((IkReal(-1.00000000000000))*(x78)))+(rxp2_2));
op[17]=x79;
op[18]=x88;
op[19]=rxp2_2;
op[20]=x89;
op[21]=IkReal(0);
op[22]=x79;
op[23]=rxp2_2;
op[24]=((IkReal(-1.00000000000000))*(x95));
op[25]=IkReal(0);
op[26]=x82;
op[27]=IkReal(0);
op[28]=((x80)+(((IkReal(-1.00000000000000))*(x81))));
op[29]=IkReal(0);
op[30]=IkReal(0);
op[31]=((x81)+(((IkReal(-1.00000000000000))*(x80))));
op[32]=IkReal(0);
op[33]=x82;
op[34]=IkReal(0);
op[35]=x95;
op[36]=((x84)+(((IkReal(-1.00000000000000))*(x83))));
op[37]=IkReal(0);
op[38]=x85;
op[39]=IkReal(0);
op[40]=((x83)+(x84));
op[41]=IkReal(0);
op[42]=IkReal(0);
op[43]=((IkReal(-2.00000000000000))*(rxp0_2));
op[44]=IkReal(0);
op[45]=x85;
op[46]=IkReal(0);
op[47]=x83;
op[48]=((IkReal(0.00313008984422510))+(((IkReal(-1.00000000000000))*(x73)))+(((IkReal(-1.00000000000000))*(x70)))+(x98));
op[49]=x74;
op[50]=x90;
op[51]=x75;
op[52]=((IkReal(0.00313008984422510))+(((IkReal(-1.00000000000000))*(x72)))+(((IkReal(-1.00000000000000))*(x70)))+(((IkReal(-1.00000000000000))*(x97))));
op[53]=x91;
op[54]=x92;
op[55]=((IkReal(0.00313008984422510))+(((IkReal(-1.00000000000000))*(x70)))+(x72)+(((IkReal(-1.00000000000000))*(x97))));
op[56]=x75;
op[57]=x96;
op[58]=x86;
op[59]=((IkReal(0.00313008984422510))+(((IkReal(-1.00000000000000))*(x70)))+(x71)+(((IkReal(-1.00000000000000))*(x99))));
op[60]=((((IkReal(-1.00000000000000))*(x78)))+(((IkReal(-1.00000000000000))*(x87))));
op[61]=x88;
op[62]=((IkReal(0.0240000000000000))*(r21));
op[63]=x89;
op[64]=((x78)+(((IkReal(-1.00000000000000))*(x87))));
op[65]=x79;
op[66]=x88;
op[67]=x93;
op[68]=x89;
op[69]=IkReal(0);
op[70]=x79;
op[71]=x93;
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j4array[16], cj4array[16], sj4array[16], j5array[16], cj5array[16], sj5array[16], j3array[16], cj3array[16], sj3array[16];
int numsolutions = 0;
for(int ij4 = 0; ij4 < numroots; ij4 += 3)
{
IkReal htj4 = zeror[ij4+0], htj5 = zeror[ij4+1], htj3 = zeror[ij4+2];
j4array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj4)));
j5array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj5)));
j3array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj3)));
IkReal x100=(htj4)*(htj4);
IkReal x101=(htj5)*(htj5);
IkReal x102=(htj3)*(htj3);
cj4array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x100))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x100)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x100))))));
cj5array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x101))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x101)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x101))))));
cj3array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x102))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x102)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x102))))));
sj4array[numsolutions]=((IkReal(2.00000000000000))*(htj4)*(((IKabs(((IkReal(1.00000000000000))+((htj4)*(htj4)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj4)*(htj4))))):(IkReal)1.0e30)));
sj5array[numsolutions]=((IkReal(2.00000000000000))*(htj5)*(((IKabs(((IkReal(1.00000000000000))+((htj5)*(htj5)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj5)*(htj5))))):(IkReal)1.0e30)));
sj3array[numsolutions]=((IkReal(2.00000000000000))*(htj3)*(((IKabs(((IkReal(1.00000000000000))+((htj3)*(htj3)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj3)*(htj3))))):(IkReal)1.0e30)));
if( j4array[numsolutions] > IKPI )
{
    j4array[numsolutions]-=IK2PI;
}
else if( j4array[numsolutions] < -IKPI )
{
    j4array[numsolutions]+=IK2PI;
}
if( j5array[numsolutions] > IKPI )
{
    j5array[numsolutions]-=IK2PI;
}
else if( j5array[numsolutions] < -IKPI )
{
    j5array[numsolutions]+=IK2PI;
}
if( j3array[numsolutions] > IKPI )
{
    j3array[numsolutions]-=IK2PI;
}
else if( j3array[numsolutions] < -IKPI )
{
    j3array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j4valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj4 = 16;
_nj5 = 1;
_nj3 = 1;
for(int ij4 = 0; ij4 < numsolutions; ++ij4)
    {
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
_ij5[0] = 0; _ij5[1] = -1;
_ij3[0] = 0; _ij3[1] = -1;
for(int iij4 = ij4+1; iij4 < numsolutions; ++iij4)
{
if( !j4valid[iij4] ) { continue; }
if( IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(cj5array[ij4]-cj5array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij4]-sj5array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(cj3array[ij4]-cj3array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij4]-sj3array[iij4]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j4valid[iij4]=false; _ij4[1] = iij4; _ij5[1] = 0; _ij3[1] = 0;  break; 
}
}
    j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];

    j5 = j5array[ij4]; cj5 = cj5array[ij4]; sj5 = sj5array[ij4];

    j3 = j3array[ij4]; cj3 = cj3array[ij4]; sj3 = sj3array[ij4];

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x103=(cj5)*(cj5);
IkReal x104=(sj5)*(sj5);
IkReal x105=((IkReal(1.00000000000000))*(r10));
IkReal x106=((cj4)*(sj5));
IkReal x107=((r00)*(r11));
IkReal x108=((cj4)*(cj5));
IkReal x109=((sj4)*(x103));
IkReal x110=((sj4)*(x104));
gconst0=IKsign(((((x107)*(x109)))+(((r00)*(r12)*(x106)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x108)))+(((IkReal(-1.00000000000000))*(r02)*(x105)*(x106)))+(((IkReal(-1.00000000000000))*(r01)*(x105)*(x109)))+(((IkReal(-1.00000000000000))*(r01)*(x105)*(x110)))+(((r01)*(r12)*(x108)))+(((x107)*(x110)))));
IkReal x111=(cj5)*(cj5);
IkReal x112=(sj5)*(sj5);
IkReal x113=((IkReal(1.00000000000000))*(r10));
IkReal x114=((cj4)*(sj5));
IkReal x115=((r00)*(r11));
IkReal x116=((cj4)*(cj5));
IkReal x117=((sj4)*(x111));
IkReal x118=((sj4)*(x112));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(x113)*(x114)))+(((r00)*(r12)*(x114)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x116)))+(((r01)*(r12)*(x116)))+(((IkReal(-1.00000000000000))*(r01)*(x113)*(x117)))+(((IkReal(-1.00000000000000))*(r01)*(x113)*(x118)))+(((x115)*(x118)))+(((x115)*(x117))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x119=(cj5)*(cj5);
IkReal x120=(sj5)*(sj5);
IkReal x121=((IkReal(1.00000000000000))*(r11));
IkReal x122=((cj4)*(r00));
IkReal x123=((r02)*(sj4));
IkReal x124=((r12)*(sj4));
IkReal x125=((cj4)*(r01)*(r10));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(x120)*(x121)*(x122)))+(((x120)*(x125)))+(((IkReal(-1.00000000000000))*(cj5)*(x121)*(x123)))+(((IkReal(-1.00000000000000))*(x119)*(x121)*(x122)))+(((r00)*(sj5)*(x124)))+(((x119)*(x125)))+(((cj5)*(r01)*(x124)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x123)))));
IkReal x126=(cj5)*(cj5);
IkReal x127=(sj5)*(sj5);
IkReal x128=((IkReal(1.00000000000000))*(r11));
IkReal x129=((cj4)*(r00));
IkReal x130=((r02)*(sj4));
IkReal x131=((r12)*(sj4));
IkReal x132=((cj4)*(r01)*(r10));
dummyeval[0]=((((x127)*(x132)))+(((cj5)*(r01)*(x131)))+(((IkReal(-1.00000000000000))*(x126)*(x128)*(x129)))+(((IkReal(-1.00000000000000))*(cj5)*(x128)*(x130)))+(((x126)*(x132)))+(((IkReal(-1.00000000000000))*(x127)*(x128)*(x129)))+(((r00)*(sj5)*(x131)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x130))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[3];
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0120000000000000))+(((npx)*(sj5)))+(((cj5)*(npy))));
evalcond[2]=((((cj5)*(r21)))+(((r20)*(sj5))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x133=((IkReal(2.34381456633434))*(cj4));
IkReal x134=((npy)*(sj5));
IkReal x135=((IkReal(2.94476514910275))*(cj4));
IkReal x136=((IkReal(2.34381456633434))*(sj4));
IkReal x137=((cj5)*(npx));
IkReal x138=((IkReal(2.94476514910275))*(sj4));
if( IKabs(((IkReal(0.516358403118598))+(((IkReal(-1.00000000000000))*(x135)*(x137)))+(((IkReal(-1.00000000000000))*(x134)*(x136)))+(((IkReal(-1.00000000000000))*(npz)*(x138)))+(((IkReal(-1.00000000000000))*(npz)*(x133)))+(((x136)*(x137)))+(((x134)*(x135))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.830081885873801))+(((IkReal(-1.00000000000000))*(x137)*(x138)))+(((IkReal(-1.00000000000000))*(npz)*(x136)))+(((IkReal(-1.00000000000000))*(x133)*(x137)))+(((x134)*(x138)))+(((x133)*(x134)))+(((npz)*(x135))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.516358403118598))+(((IkReal(-1.00000000000000))*(x135)*(x137)))+(((IkReal(-1.00000000000000))*(x134)*(x136)))+(((IkReal(-1.00000000000000))*(npz)*(x138)))+(((IkReal(-1.00000000000000))*(npz)*(x133)))+(((x136)*(x137)))+(((x134)*(x135)))))+IKsqr(((IkReal(-0.830081885873801))+(((IkReal(-1.00000000000000))*(x137)*(x138)))+(((IkReal(-1.00000000000000))*(npz)*(x136)))+(((IkReal(-1.00000000000000))*(x133)*(x137)))+(((x134)*(x138)))+(((x133)*(x134)))+(((npz)*(x135)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((IkReal(0.516358403118598))+(((IkReal(-1.00000000000000))*(x135)*(x137)))+(((IkReal(-1.00000000000000))*(x134)*(x136)))+(((IkReal(-1.00000000000000))*(npz)*(x138)))+(((IkReal(-1.00000000000000))*(npz)*(x133)))+(((x136)*(x137)))+(((x134)*(x135)))), ((IkReal(-0.830081885873801))+(((IkReal(-1.00000000000000))*(x137)*(x138)))+(((IkReal(-1.00000000000000))*(npz)*(x136)))+(((IkReal(-1.00000000000000))*(x133)*(x137)))+(((x134)*(x138)))+(((x133)*(x134)))+(((npz)*(x135)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x139=IKcos(j2);
IkReal x140=IKsin(j2);
IkReal x141=((npy)*(sj5));
IkReal x142=((cj5)*(npx));
evalcond[0]=((IkReal(-0.258003287011922))+(((IkReal(0.165463933124939))*(x140)))+(((sj4)*(x141)))+(((cj4)*(npz)))+(((IkReal(-1.00000000000000))*(sj4)*(x142)))+(((IkReal(-0.207888640466058))*(x139))));
evalcond[1]=((IkReal(0.0300035672348961))+(((IkReal(0.165463933124939))*(x139)))+(((IkReal(-1.00000000000000))*(cj4)*(x141)))+(((npz)*(sj4)))+(((IkReal(0.207888640466058))*(x140)))+(((cj4)*(x142))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst56;
IkReal x143=(cj5)*(cj5);
IkReal x144=(sj5)*(sj5);
IkReal x145=((IkReal(2.00000000000000))*(cj5)*(sj5));
gconst56=IKsign(((((r00)*(r01)*(x145)))+(((x143)*((r11)*(r11))))+(((x144)*((r00)*(r00))))+(((r10)*(r11)*(x145)))+(((x143)*((r01)*(r01))))+(((x144)*((r10)*(r10))))));
IkReal x146=(cj5)*(cj5);
IkReal x147=(sj5)*(sj5);
IkReal x148=((IkReal(2.00000000000000))*(cj5)*(sj5));
dummyeval[0]=((((r00)*(r01)*(x148)))+(((x147)*((r10)*(r10))))+(((x147)*((r00)*(r00))))+(((x146)*((r01)*(r01))))+(((r10)*(r11)*(x148)))+(((x146)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst57;
IkReal x149=(cj5)*(cj5);
IkReal x150=(sj5)*(sj5);
IkReal x151=((IkReal(1.00000000000000))*(r10));
IkReal x152=((cj4)*(sj5));
IkReal x153=((r00)*(r11));
IkReal x154=((cj4)*(cj5));
IkReal x155=((sj4)*(x149));
IkReal x156=((sj4)*(x150));
gconst57=IKsign(((((x153)*(x156)))+(((x153)*(x155)))+(((IkReal(-1.00000000000000))*(r01)*(x151)*(x155)))+(((IkReal(-1.00000000000000))*(r01)*(x151)*(x156)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x154)))+(((IkReal(-1.00000000000000))*(r02)*(x151)*(x152)))+(((r00)*(r12)*(x152)))+(((r01)*(r12)*(x154)))));
IkReal x157=(cj5)*(cj5);
IkReal x158=(sj5)*(sj5);
IkReal x159=((IkReal(1.00000000000000))*(r10));
IkReal x160=((cj4)*(sj5));
IkReal x161=((r00)*(r11));
IkReal x162=((cj4)*(cj5));
IkReal x163=((sj4)*(x157));
IkReal x164=((sj4)*(x158));
dummyeval[0]=((((x161)*(x163)))+(((x161)*(x164)))+(((IkReal(-1.00000000000000))*(r02)*(x159)*(x160)))+(((r01)*(r12)*(x162)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x162)))+(((IkReal(-1.00000000000000))*(r01)*(x159)*(x163)))+(((IkReal(-1.00000000000000))*(r01)*(x159)*(x164)))+(((r00)*(r12)*(x160))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst58;
gconst58=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x165=((IkReal(0.707109999985348))*(sj4));
IkReal x166=((r22)*(sj2));
IkReal x167=((cj5)*(r20));
IkReal x168=((r21)*(sj5));
IkReal x169=((IkReal(0.707109999985348))*(cj4));
IkReal x170=((cj2)*(r22));
IkReal x171=((IkReal(0.707103562373095))*(sj4));
IkReal x172=((IkReal(0.707103562373095))*(cj4));
IkReal x173=((sj2)*(x172));
IkReal x174=((cj2)*(x172));
if( IKabs(((gconst58)*(((((IkReal(-1.00000000000000))*(cj2)*(x165)*(x167)))+(((x169)*(x170)))+(((IkReal(-1.00000000000000))*(sj2)*(x167)*(x171)))+(((IkReal(-1.00000000000000))*(sj2)*(x167)*(x169)))+(((x166)*(x172)))+(((x167)*(x174)))+(((x170)*(x171)))+(((IkReal(-1.00000000000000))*(x168)*(x174)))+(((sj2)*(x168)*(x171)))+(((cj2)*(x165)*(x168)))+(((IkReal(-1.00000000000000))*(x165)*(x166)))+(((sj2)*(x168)*(x169))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst58)*(((((IkReal(-1.00000000000000))*(sj2)*(x165)*(x167)))+(((IkReal(-1.00000000000000))*(cj2)*(x168)*(x171)))+(((IkReal(-1.00000000000000))*(cj2)*(x168)*(x169)))+(((x166)*(x171)))+(((x167)*(x173)))+(((IkReal(-1.00000000000000))*(x170)*(x172)))+(((x166)*(x169)))+(((x165)*(x170)))+(((IkReal(-1.00000000000000))*(x168)*(x173)))+(((cj2)*(x167)*(x169)))+(((cj2)*(x167)*(x171)))+(((sj2)*(x165)*(x168))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst58)*(((((IkReal(-1.00000000000000))*(cj2)*(x165)*(x167)))+(((x169)*(x170)))+(((IkReal(-1.00000000000000))*(sj2)*(x167)*(x171)))+(((IkReal(-1.00000000000000))*(sj2)*(x167)*(x169)))+(((x166)*(x172)))+(((x167)*(x174)))+(((x170)*(x171)))+(((IkReal(-1.00000000000000))*(x168)*(x174)))+(((sj2)*(x168)*(x171)))+(((cj2)*(x165)*(x168)))+(((IkReal(-1.00000000000000))*(x165)*(x166)))+(((sj2)*(x168)*(x169)))))), ((gconst58)*(((((IkReal(-1.00000000000000))*(sj2)*(x165)*(x167)))+(((IkReal(-1.00000000000000))*(cj2)*(x168)*(x171)))+(((IkReal(-1.00000000000000))*(cj2)*(x168)*(x169)))+(((x166)*(x171)))+(((x167)*(x173)))+(((IkReal(-1.00000000000000))*(x170)*(x172)))+(((x166)*(x169)))+(((x165)*(x170)))+(((IkReal(-1.00000000000000))*(x168)*(x173)))+(((cj2)*(x167)*(x169)))+(((cj2)*(x167)*(x171)))+(((sj2)*(x165)*(x168)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[2];
IkReal x175=IKsin(j1);
IkReal x176=IKcos(j1);
IkReal x177=((cj5)*(r20));
IkReal x178=((r21)*(sj5));
IkReal x179=((IkReal(0.707103562373095))*(x175));
IkReal x180=((IkReal(0.707109999985348))*(x175));
IkReal x181=((IkReal(0.707103562373095))*(x176));
IkReal x182=((IkReal(0.707109999985348))*(x176));
evalcond[0]=((((sj2)*(x179)))+(((sj2)*(x182)))+(((cj4)*(r22)))+(((sj4)*(x178)))+(((cj2)*(x180)))+(((IkReal(-1.00000000000000))*(sj4)*(x177)))+(((IkReal(-1.00000000000000))*(cj2)*(x181))));
evalcond[1]=((((sj2)*(x181)))+(((cj4)*(x177)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(x178)))+(((cj2)*(x182)))+(((cj2)*(x179)))+(((IkReal(-1.00000000000000))*(sj2)*(x180))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst59;
IkReal x183=(cj5)*(cj5);
IkReal x184=(sj5)*(sj5);
IkReal x185=((IkReal(2.00000000000000))*(cj5)*(sj5));
gconst59=IKsign(((((x184)*((r00)*(r00))))+(((r10)*(r11)*(x185)))+(((x184)*((r10)*(r10))))+(((r00)*(r01)*(x185)))+(((x183)*((r11)*(r11))))+(((x183)*((r01)*(r01))))));
IkReal x186=(cj5)*(cj5);
IkReal x187=(sj5)*(sj5);
IkReal x188=((IkReal(2.00000000000000))*(cj5)*(sj5));
dummyeval[0]=((((r10)*(r11)*(x188)))+(((r00)*(r01)*(x188)))+(((x186)*((r11)*(r11))))+(((x186)*((r01)*(r01))))+(((x187)*((r00)*(r00))))+(((x187)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst60;
IkReal x189=(cj5)*(cj5);
IkReal x190=(sj5)*(sj5);
IkReal x191=((IkReal(1.00000000000000))*(r10));
IkReal x192=((cj4)*(sj5));
IkReal x193=((r00)*(r11));
IkReal x194=((cj4)*(cj5));
IkReal x195=((sj4)*(x189));
IkReal x196=((sj4)*(x190));
gconst60=IKsign(((((x193)*(x195)))+(((x193)*(x196)))+(((r00)*(r12)*(x192)))+(((r01)*(r12)*(x194)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x194)))+(((IkReal(-1.00000000000000))*(r01)*(x191)*(x195)))+(((IkReal(-1.00000000000000))*(r01)*(x191)*(x196)))+(((IkReal(-1.00000000000000))*(r02)*(x191)*(x192)))));
IkReal x197=(cj5)*(cj5);
IkReal x198=(sj5)*(sj5);
IkReal x199=((IkReal(1.00000000000000))*(r10));
IkReal x200=((cj4)*(sj5));
IkReal x201=((r00)*(r11));
IkReal x202=((cj4)*(cj5));
IkReal x203=((sj4)*(x197));
IkReal x204=((sj4)*(x198));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r01)*(x199)*(x203)))+(((IkReal(-1.00000000000000))*(r01)*(x199)*(x204)))+(((x201)*(x204)))+(((x201)*(x203)))+(((r01)*(r12)*(x202)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x202)))+(((r00)*(r12)*(x200)))+(((IkReal(-1.00000000000000))*(r02)*(x199)*(x200))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x205=((cj5)*(sj4));
IkReal x206=((IkReal(1.00000000000000))*(cj4));
IkReal x207=((IkReal(1.00000000000000))*(sj4)*(sj5));
if( IKabs(((gconst60)*(((((IkReal(-1.00000000000000))*(r11)*(x207)))+(((IkReal(-1.00000000000000))*(r12)*(x206)))+(((r10)*(x205))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst60)*(((((IkReal(-1.00000000000000))*(r02)*(x206)))+(((r00)*(x205)))+(((IkReal(-1.00000000000000))*(r01)*(x207))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst60)*(((((IkReal(-1.00000000000000))*(r11)*(x207)))+(((IkReal(-1.00000000000000))*(r12)*(x206)))+(((r10)*(x205)))))), ((gconst60)*(((((IkReal(-1.00000000000000))*(r02)*(x206)))+(((r00)*(x205)))+(((IkReal(-1.00000000000000))*(r01)*(x207)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[6];
IkReal x208=IKsin(j0);
IkReal x209=IKcos(j0);
IkReal x210=((IkReal(0.707103562373095))*(cj2));
IkReal x211=((cj5)*(sj4));
IkReal x212=((IkReal(1.00000000000000))*(sj4));
IkReal x213=((IkReal(1.00000000000000))*(r10));
IkReal x214=((IkReal(1.00000000000000))*(cj5));
IkReal x215=((IkReal(1.00000000000000))*(cj4));
IkReal x216=((sj1)*(sj2));
IkReal x217=((IkReal(0.707109999985348))*(cj1));
IkReal x218=((cj4)*(r11));
IkReal x219=((sj5)*(x208));
IkReal x220=((r10)*(x208));
IkReal x221=((r01)*(x209));
IkReal x222=((r00)*(x209));
IkReal x223=((r02)*(x209));
IkReal x224=((r12)*(x209));
IkReal x225=((cj5)*(x208));
IkReal x226=((r12)*(x208));
IkReal x227=((sj5)*(x209));
IkReal x228=((r02)*(x208));
evalcond[0]=((IkReal(1.00000000000000))+(((r01)*(x225)))+(((IkReal(-1.00000000000000))*(x213)*(x227)))+(((r00)*(x219)))+(((IkReal(-1.00000000000000))*(r11)*(x209)*(x214))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x212)*(x227)))+(((r01)*(sj4)*(x219)))+(((IkReal(-1.00000000000000))*(x215)*(x224)))+(((cj4)*(x228)))+(((IkReal(-1.00000000000000))*(r00)*(x208)*(x211)))+(((r10)*(x209)*(x211))));
evalcond[2]=((((sj4)*(x228)))+(((cj4)*(r00)*(x225)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x209)*(x213)))+(((x218)*(x227)))+(((IkReal(-1.00000000000000))*(x212)*(x224)))+(((IkReal(-1.00000000000000))*(r01)*(x215)*(x219))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x214)*(x221)))+(((IkReal(-1.00000000000000))*(r11)*(x208)*(x214)))+(((IkReal(-1.00000000000000))*(x213)*(x219)))+(((IkReal(-1.00000000000000))*(sj5)*(x222))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x215)*(x223)))+(((IkReal(-1.00000000000000))*(x215)*(x226)))+(((IkReal(-0.707109999985348))*(x216)))+(((IkReal(0.707103562373095))*(cj1)*(sj2)))+(((cj2)*(x217)))+(((IkReal(-1.00000000000000))*(sj5)*(x212)*(x221)))+(((sj1)*(x210)))+(((IkReal(-1.00000000000000))*(r11)*(x212)*(x219)))+(((x211)*(x220)))+(((x211)*(x222))));
evalcond[5]=((((x218)*(x219)))+(((IkReal(-1.00000000000000))*(cj4)*(x213)*(x225)))+(((IkReal(-1.00000000000000))*(cj4)*(x214)*(x222)))+(((IkReal(-0.707109999985348))*(cj2)*(sj1)))+(((IkReal(-1.00000000000000))*(sj2)*(x217)))+(((IkReal(-1.00000000000000))*(x212)*(x223)))+(((IkReal(-1.00000000000000))*(x212)*(x226)))+(((cj1)*(x210)))+(((cj4)*(sj5)*(x221)))+(((IkReal(-0.707103562373095))*(x216))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst59)*(((((IkReal(-1.00000000000000))*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst59)*(((((cj5)*(r11)))+(((r10)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst59)*(((((IkReal(-1.00000000000000))*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)))))), ((gconst59)*(((((cj5)*(r11)))+(((r10)*(sj5)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[6];
IkReal x229=IKsin(j0);
IkReal x230=IKcos(j0);
IkReal x231=((IkReal(0.707103562373095))*(cj2));
IkReal x232=((cj5)*(sj4));
IkReal x233=((IkReal(1.00000000000000))*(sj4));
IkReal x234=((IkReal(1.00000000000000))*(r10));
IkReal x235=((IkReal(1.00000000000000))*(cj5));
IkReal x236=((IkReal(1.00000000000000))*(cj4));
IkReal x237=((sj1)*(sj2));
IkReal x238=((IkReal(0.707109999985348))*(cj1));
IkReal x239=((cj4)*(r11));
IkReal x240=((sj5)*(x229));
IkReal x241=((r10)*(x229));
IkReal x242=((r01)*(x230));
IkReal x243=((r00)*(x230));
IkReal x244=((r02)*(x230));
IkReal x245=((r12)*(x230));
IkReal x246=((cj5)*(x229));
IkReal x247=((r12)*(x229));
IkReal x248=((sj5)*(x230));
IkReal x249=((r02)*(x229));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x234)*(x248)))+(((IkReal(-1.00000000000000))*(r11)*(x230)*(x235)))+(((r01)*(x246)))+(((r00)*(x240))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x229)*(x232)))+(((cj4)*(x249)))+(((r01)*(sj4)*(x240)))+(((r10)*(x230)*(x232)))+(((IkReal(-1.00000000000000))*(x236)*(x245)))+(((IkReal(-1.00000000000000))*(r11)*(x233)*(x248))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x236)*(x240)))+(((cj4)*(r00)*(x246)))+(((IkReal(-1.00000000000000))*(x233)*(x245)))+(((x239)*(x248)))+(((sj4)*(x249)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x230)*(x234))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj5)*(x243)))+(((IkReal(-1.00000000000000))*(x234)*(x240)))+(((IkReal(-1.00000000000000))*(x235)*(x242)))+(((IkReal(-1.00000000000000))*(r11)*(x229)*(x235))));
evalcond[4]=((((sj1)*(x231)))+(((cj2)*(x238)))+(((IkReal(0.707103562373095))*(cj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x236)*(x247)))+(((IkReal(-1.00000000000000))*(x236)*(x244)))+(((IkReal(-1.00000000000000))*(r11)*(x233)*(x240)))+(((x232)*(x243)))+(((x232)*(x241)))+(((IkReal(-0.707109999985348))*(x237)))+(((IkReal(-1.00000000000000))*(sj5)*(x233)*(x242))));
evalcond[5]=((((cj1)*(x231)))+(((IkReal(-0.707109999985348))*(cj2)*(sj1)))+(((IkReal(-0.707103562373095))*(x237)))+(((IkReal(-1.00000000000000))*(cj4)*(x234)*(x246)))+(((IkReal(-1.00000000000000))*(x233)*(x244)))+(((IkReal(-1.00000000000000))*(x233)*(x247)))+(((x239)*(x240)))+(((cj4)*(sj5)*(x242)))+(((IkReal(-1.00000000000000))*(sj2)*(x238)))+(((IkReal(-1.00000000000000))*(cj4)*(x235)*(x243))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x250=((cj5)*(sj4));
IkReal x251=((IkReal(1.00000000000000))*(cj4));
IkReal x252=((IkReal(1.00000000000000))*(sj4)*(sj5));
if( IKabs(((gconst57)*(((((r10)*(x250)))+(((IkReal(-1.00000000000000))*(r12)*(x251)))+(((IkReal(-1.00000000000000))*(r11)*(x252))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst57)*(((((r00)*(x250)))+(((IkReal(-1.00000000000000))*(r02)*(x251)))+(((IkReal(-1.00000000000000))*(r01)*(x252))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst57)*(((((r10)*(x250)))+(((IkReal(-1.00000000000000))*(r12)*(x251)))+(((IkReal(-1.00000000000000))*(r11)*(x252)))))), ((gconst57)*(((((r00)*(x250)))+(((IkReal(-1.00000000000000))*(r02)*(x251)))+(((IkReal(-1.00000000000000))*(r01)*(x252)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x253=IKsin(j0);
IkReal x254=IKcos(j0);
IkReal x255=((IkReal(1.00000000000000))*(cj5));
IkReal x256=((r01)*(sj5));
IkReal x257=((IkReal(1.00000000000000))*(r12));
IkReal x258=((r11)*(sj5));
IkReal x259=((IkReal(1.00000000000000))*(r10));
IkReal x260=((cj4)*(x253));
IkReal x261=((sj4)*(x253));
IkReal x262=((sj4)*(x254));
IkReal x263=((sj5)*(x253));
IkReal x264=((cj4)*(x254));
IkReal x265=((sj5)*(x254));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x259)*(x265)))+(((cj5)*(r01)*(x253)))+(((r00)*(x263)))+(((IkReal(-1.00000000000000))*(r11)*(x254)*(x255))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x255)*(x261)))+(((IkReal(-1.00000000000000))*(x258)*(x262)))+(((r02)*(x260)))+(((cj5)*(r10)*(x262)))+(((x256)*(x261)))+(((IkReal(-1.00000000000000))*(x257)*(x264))));
evalcond[2]=((((x258)*(x264)))+(((IkReal(-1.00000000000000))*(r10)*(x255)*(x264)))+(((r02)*(x261)))+(((cj5)*(r00)*(x260)))+(((IkReal(-1.00000000000000))*(x256)*(x260)))+(((IkReal(-1.00000000000000))*(x257)*(x262))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x253)*(x255)))+(((IkReal(-1.00000000000000))*(x259)*(x263)))+(((IkReal(-1.00000000000000))*(r01)*(x254)*(x255)))+(((IkReal(-1.00000000000000))*(r00)*(x265))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst61;
gconst61=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst62;
gconst62=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x266=((sj4)*(sj5));
IkReal x267=((IkReal(0.707103562373095))*(sj0));
IkReal x268=((r11)*(sj2));
IkReal x269=((cj2)*(cj4));
IkReal x270=((IkReal(0.707103562373095))*(r22));
IkReal x271=((IkReal(0.707109999985348))*(cj0));
IkReal x272=((cj2)*(r01));
IkReal x273=((IkReal(0.707109999985348))*(cj2));
IkReal x274=((IkReal(0.707109999985348))*(sj0));
IkReal x275=((r21)*(sj2));
IkReal x276=((IkReal(0.707103562373095))*(cj2));
IkReal x277=((IkReal(0.707103562373095))*(sj2));
IkReal x278=((cj5)*(sj4));
IkReal x279=((r10)*(sj2));
IkReal x280=((cj0)*(r00));
IkReal x281=((IkReal(0.707103562373095))*(cj0));
IkReal x282=((cj4)*(sj2));
IkReal x283=((IkReal(0.707109999985348))*(r22));
IkReal x284=((r02)*(x282));
IkReal x285=((r20)*(x278));
if( IKabs(((gconst62)*(((((IkReal(-1.00000000000000))*(x266)*(x272)*(x281)))+(((IkReal(-1.00000000000000))*(x277)*(x285)))+(((cj2)*(r10)*(x267)*(x278)))+(((x269)*(x283)))+(((r01)*(sj2)*(x266)*(x271)))+(((IkReal(-1.00000000000000))*(cj2)*(r11)*(x266)*(x267)))+(((x271)*(x284)))+(((x266)*(x268)*(x274)))+(((r21)*(x266)*(x273)))+(((IkReal(-1.00000000000000))*(r12)*(x267)*(x269)))+(((r12)*(x274)*(x282)))+(((IkReal(-1.00000000000000))*(x273)*(x285)))+(((IkReal(-1.00000000000000))*(x274)*(x278)*(x279)))+(((IkReal(0.707103562373095))*(x266)*(x275)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x271)*(x278)))+(((x270)*(x282)))+(((x276)*(x278)*(x280)))+(((IkReal(-1.00000000000000))*(r02)*(x269)*(x281))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst62)*(((((IkReal(-1.00000000000000))*(r21)*(x266)*(x276)))+(((IkReal(-0.707109999985348))*(sj2)*(x285)))+(((IkReal(-1.00000000000000))*(r02)*(x269)*(x271)))+(((x277)*(x278)*(x280)))+(((IkReal(-1.00000000000000))*(x266)*(x271)*(x272)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x266)*(x273)))+(((IkReal(-1.00000000000000))*(x266)*(x267)*(x268)))+(((x267)*(x278)*(x279)))+(((IkReal(-1.00000000000000))*(x269)*(x270)))+(((IkReal(-1.00000000000000))*(r12)*(x269)*(x274)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x266)*(x277)))+(((r10)*(sj0)*(x273)*(x278)))+(((cj2)*(r00)*(x271)*(x278)))+(((IkReal(-1.00000000000000))*(cj0)*(cj4)*(r02)*(x277)))+(((IkReal(0.707109999985348))*(x266)*(x275)))+(((x276)*(x285)))+(((x282)*(x283)))+(((IkReal(-1.00000000000000))*(r12)*(x267)*(x282))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst62)*(((((IkReal(-1.00000000000000))*(x266)*(x272)*(x281)))+(((IkReal(-1.00000000000000))*(x277)*(x285)))+(((cj2)*(r10)*(x267)*(x278)))+(((x269)*(x283)))+(((r01)*(sj2)*(x266)*(x271)))+(((IkReal(-1.00000000000000))*(cj2)*(r11)*(x266)*(x267)))+(((x271)*(x284)))+(((x266)*(x268)*(x274)))+(((r21)*(x266)*(x273)))+(((IkReal(-1.00000000000000))*(r12)*(x267)*(x269)))+(((r12)*(x274)*(x282)))+(((IkReal(-1.00000000000000))*(x273)*(x285)))+(((IkReal(-1.00000000000000))*(x274)*(x278)*(x279)))+(((IkReal(0.707103562373095))*(x266)*(x275)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x271)*(x278)))+(((x270)*(x282)))+(((x276)*(x278)*(x280)))+(((IkReal(-1.00000000000000))*(r02)*(x269)*(x281)))))), ((gconst62)*(((((IkReal(-1.00000000000000))*(r21)*(x266)*(x276)))+(((IkReal(-0.707109999985348))*(sj2)*(x285)))+(((IkReal(-1.00000000000000))*(r02)*(x269)*(x271)))+(((x277)*(x278)*(x280)))+(((IkReal(-1.00000000000000))*(x266)*(x271)*(x272)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x266)*(x273)))+(((IkReal(-1.00000000000000))*(x266)*(x267)*(x268)))+(((x267)*(x278)*(x279)))+(((IkReal(-1.00000000000000))*(x269)*(x270)))+(((IkReal(-1.00000000000000))*(r12)*(x269)*(x274)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x266)*(x277)))+(((r10)*(sj0)*(x273)*(x278)))+(((cj2)*(r00)*(x271)*(x278)))+(((IkReal(-1.00000000000000))*(cj0)*(cj4)*(r02)*(x277)))+(((IkReal(0.707109999985348))*(x266)*(x275)))+(((x276)*(x285)))+(((x282)*(x283)))+(((IkReal(-1.00000000000000))*(r12)*(x267)*(x282)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x286=IKsin(j1);
IkReal x287=IKcos(j1);
IkReal x288=((IkReal(0.707109999985348))*(cj2));
IkReal x289=((IkReal(1.00000000000000))*(sj4));
IkReal x290=((cj5)*(r00));
IkReal x291=((IkReal(0.707109999985348))*(sj2));
IkReal x292=((cj5)*(r20));
IkReal x293=((r12)*(sj0));
IkReal x294=((r21)*(sj5));
IkReal x295=((IkReal(1.00000000000000))*(cj4));
IkReal x296=((IkReal(0.707103562373095))*(x287));
IkReal x297=((r11)*(sj0)*(sj5));
IkReal x298=((cj0)*(x295));
IkReal x299=((IkReal(0.707103562373095))*(x286));
IkReal x300=((cj0)*(r01)*(sj5));
IkReal x301=((cj5)*(r10)*(sj0));
IkReal x302=((sj2)*(x296));
IkReal x303=((cj2)*(x299));
IkReal x304=((x287)*(x288));
IkReal x305=((x286)*(x291));
IkReal x306=((cj2)*(x296));
IkReal x307=((x286)*(x288));
IkReal x308=((sj2)*(x299));
IkReal x309=((x287)*(x291));
IkReal x310=((x304)+(x302)+(x303));
IkReal x311=((x308)+(x309)+(x307));
evalcond[0]=((((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x289)*(x292)))+(((sj4)*(x294)))+(x311)+(((IkReal(-1.00000000000000))*(x306))));
evalcond[1]=((((r22)*(sj4)))+(((cj4)*(x292)))+(x310)+(((IkReal(-1.00000000000000))*(x305)))+(((IkReal(-1.00000000000000))*(x294)*(x295))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x289)*(x297)))+(((IkReal(-1.00000000000000))*(x293)*(x295)))+(((IkReal(-1.00000000000000))*(r02)*(x298)))+(x310)+(((cj0)*(sj4)*(x290)))+(((sj4)*(x301)))+(((IkReal(-1.00000000000000))*(x289)*(x300)))+(((IkReal(-1.00000000000000))*(x305))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj0)*(r02)*(x289)))+(((IkReal(-1.00000000000000))*(x290)*(x298)))+(((IkReal(-1.00000000000000))*(x289)*(x293)))+(((cj4)*(x297)))+(((IkReal(-1.00000000000000))*(x295)*(x301)))+(x306)+(((IkReal(-1.00000000000000))*(x311)))+(((cj4)*(x300))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x312=((IkReal(0.707109999985348))*(sj4));
IkReal x313=((r22)*(sj2));
IkReal x314=((cj5)*(r20));
IkReal x315=((r21)*(sj5));
IkReal x316=((IkReal(0.707109999985348))*(cj4));
IkReal x317=((cj2)*(r22));
IkReal x318=((IkReal(0.707103562373095))*(sj4));
IkReal x319=((IkReal(0.707103562373095))*(cj4));
IkReal x320=((sj2)*(x319));
IkReal x321=((cj2)*(x319));
if( IKabs(((gconst61)*(((((x317)*(x318)))+(((IkReal(-1.00000000000000))*(x312)*(x313)))+(((IkReal(-1.00000000000000))*(cj2)*(x312)*(x314)))+(((IkReal(-1.00000000000000))*(x315)*(x321)))+(((x314)*(x321)))+(((IkReal(-1.00000000000000))*(sj2)*(x314)*(x318)))+(((IkReal(-1.00000000000000))*(sj2)*(x314)*(x316)))+(((cj2)*(x312)*(x315)))+(((sj2)*(x315)*(x318)))+(((sj2)*(x315)*(x316)))+(((x316)*(x317)))+(((x313)*(x319))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst61)*(((((IkReal(-1.00000000000000))*(sj2)*(x312)*(x314)))+(((cj2)*(x314)*(x316)))+(((cj2)*(x314)*(x318)))+(((x312)*(x317)))+(((IkReal(-1.00000000000000))*(x315)*(x320)))+(((sj2)*(x312)*(x315)))+(((x314)*(x320)))+(((IkReal(-1.00000000000000))*(cj2)*(x315)*(x318)))+(((IkReal(-1.00000000000000))*(cj2)*(x315)*(x316)))+(((IkReal(-1.00000000000000))*(x317)*(x319)))+(((x313)*(x318)))+(((x313)*(x316))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst61)*(((((x317)*(x318)))+(((IkReal(-1.00000000000000))*(x312)*(x313)))+(((IkReal(-1.00000000000000))*(cj2)*(x312)*(x314)))+(((IkReal(-1.00000000000000))*(x315)*(x321)))+(((x314)*(x321)))+(((IkReal(-1.00000000000000))*(sj2)*(x314)*(x318)))+(((IkReal(-1.00000000000000))*(sj2)*(x314)*(x316)))+(((cj2)*(x312)*(x315)))+(((sj2)*(x315)*(x318)))+(((sj2)*(x315)*(x316)))+(((x316)*(x317)))+(((x313)*(x319)))))), ((gconst61)*(((((IkReal(-1.00000000000000))*(sj2)*(x312)*(x314)))+(((cj2)*(x314)*(x316)))+(((cj2)*(x314)*(x318)))+(((x312)*(x317)))+(((IkReal(-1.00000000000000))*(x315)*(x320)))+(((sj2)*(x312)*(x315)))+(((x314)*(x320)))+(((IkReal(-1.00000000000000))*(cj2)*(x315)*(x318)))+(((IkReal(-1.00000000000000))*(cj2)*(x315)*(x316)))+(((IkReal(-1.00000000000000))*(x317)*(x319)))+(((x313)*(x318)))+(((x313)*(x316)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x322=IKsin(j1);
IkReal x323=IKcos(j1);
IkReal x324=((IkReal(0.707109999985348))*(cj2));
IkReal x325=((IkReal(1.00000000000000))*(sj4));
IkReal x326=((cj5)*(r00));
IkReal x327=((IkReal(0.707109999985348))*(sj2));
IkReal x328=((cj5)*(r20));
IkReal x329=((r12)*(sj0));
IkReal x330=((r21)*(sj5));
IkReal x331=((IkReal(1.00000000000000))*(cj4));
IkReal x332=((IkReal(0.707103562373095))*(x323));
IkReal x333=((r11)*(sj0)*(sj5));
IkReal x334=((cj0)*(x331));
IkReal x335=((IkReal(0.707103562373095))*(x322));
IkReal x336=((cj0)*(r01)*(sj5));
IkReal x337=((cj5)*(r10)*(sj0));
IkReal x338=((sj2)*(x332));
IkReal x339=((cj2)*(x335));
IkReal x340=((x323)*(x324));
IkReal x341=((x322)*(x327));
IkReal x342=((cj2)*(x332));
IkReal x343=((x322)*(x324));
IkReal x344=((sj2)*(x335));
IkReal x345=((x323)*(x327));
IkReal x346=((x339)+(x338)+(x340));
IkReal x347=((x343)+(x344)+(x345));
evalcond[0]=((((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x325)*(x328)))+(x347)+(((sj4)*(x330)))+(((IkReal(-1.00000000000000))*(x342))));
evalcond[1]=((((r22)*(sj4)))+(x346)+(((IkReal(-1.00000000000000))*(x330)*(x331)))+(((cj4)*(x328)))+(((IkReal(-1.00000000000000))*(x341))));
evalcond[2]=((((cj0)*(sj4)*(x326)))+(((IkReal(-1.00000000000000))*(x329)*(x331)))+(x346)+(((IkReal(-1.00000000000000))*(r02)*(x334)))+(((sj4)*(x337)))+(((IkReal(-1.00000000000000))*(x341)))+(((IkReal(-1.00000000000000))*(x325)*(x336)))+(((IkReal(-1.00000000000000))*(x325)*(x333))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj0)*(r02)*(x325)))+(((IkReal(-1.00000000000000))*(x325)*(x329)))+(x342)+(((IkReal(-1.00000000000000))*(x331)*(x337)))+(((cj4)*(x336)))+(((cj4)*(x333)))+(((IkReal(-1.00000000000000))*(x347)))+(((IkReal(-1.00000000000000))*(x326)*(x334))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst56)*(((((IkReal(-1.00000000000000))*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst56)*(((((cj5)*(r11)))+(((r10)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst56)*(((((IkReal(-1.00000000000000))*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)))))), ((gconst56)*(((((cj5)*(r11)))+(((r10)*(sj5)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x348=IKsin(j0);
IkReal x349=IKcos(j0);
IkReal x350=((IkReal(1.00000000000000))*(cj5));
IkReal x351=((r01)*(sj5));
IkReal x352=((IkReal(1.00000000000000))*(r12));
IkReal x353=((r11)*(sj5));
IkReal x354=((IkReal(1.00000000000000))*(r10));
IkReal x355=((cj4)*(x348));
IkReal x356=((sj4)*(x348));
IkReal x357=((sj4)*(x349));
IkReal x358=((sj5)*(x348));
IkReal x359=((cj4)*(x349));
IkReal x360=((sj5)*(x349));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x354)*(x360)))+(((r00)*(x358)))+(((cj5)*(r01)*(x348)))+(((IkReal(-1.00000000000000))*(r11)*(x349)*(x350))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x353)*(x357)))+(((x351)*(x356)))+(((IkReal(-1.00000000000000))*(r00)*(x350)*(x356)))+(((IkReal(-1.00000000000000))*(x352)*(x359)))+(((r02)*(x355)))+(((cj5)*(r10)*(x357))));
evalcond[2]=((((x353)*(x359)))+(((IkReal(-1.00000000000000))*(x351)*(x355)))+(((IkReal(-1.00000000000000))*(r10)*(x350)*(x359)))+(((IkReal(-1.00000000000000))*(x352)*(x357)))+(((cj5)*(r00)*(x355)))+(((r02)*(x356))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x349)*(x350)))+(((IkReal(-1.00000000000000))*(r00)*(x360)))+(((IkReal(-1.00000000000000))*(r11)*(x348)*(x350)))+(((IkReal(-1.00000000000000))*(x354)*(x358))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst61;
gconst61=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst62;
gconst62=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x361=((sj4)*(sj5));
IkReal x362=((IkReal(0.707103562373095))*(sj0));
IkReal x363=((r11)*(sj2));
IkReal x364=((cj2)*(cj4));
IkReal x365=((IkReal(0.707103562373095))*(r22));
IkReal x366=((IkReal(0.707109999985348))*(cj0));
IkReal x367=((cj2)*(r01));
IkReal x368=((IkReal(0.707109999985348))*(cj2));
IkReal x369=((IkReal(0.707109999985348))*(sj0));
IkReal x370=((r21)*(sj2));
IkReal x371=((IkReal(0.707103562373095))*(cj2));
IkReal x372=((IkReal(0.707103562373095))*(sj2));
IkReal x373=((cj5)*(sj4));
IkReal x374=((r10)*(sj2));
IkReal x375=((cj0)*(r00));
IkReal x376=((IkReal(0.707103562373095))*(cj0));
IkReal x377=((cj4)*(sj2));
IkReal x378=((IkReal(0.707109999985348))*(r22));
IkReal x379=((r02)*(x377));
IkReal x380=((r20)*(x373));
if( IKabs(((gconst62)*(((((IkReal(0.707103562373095))*(x361)*(x370)))+(((IkReal(-1.00000000000000))*(r12)*(x362)*(x364)))+(((r12)*(x369)*(x377)))+(((x364)*(x378)))+(((IkReal(-1.00000000000000))*(cj2)*(r11)*(x361)*(x362)))+(((IkReal(-1.00000000000000))*(r02)*(x364)*(x376)))+(((x365)*(x377)))+(((IkReal(-1.00000000000000))*(x369)*(x373)*(x374)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x366)*(x373)))+(((x366)*(x379)))+(((r21)*(x361)*(x368)))+(((x361)*(x363)*(x369)))+(((IkReal(-1.00000000000000))*(x368)*(x380)))+(((cj2)*(r10)*(x362)*(x373)))+(((x371)*(x373)*(x375)))+(((r01)*(sj2)*(x361)*(x366)))+(((IkReal(-1.00000000000000))*(x372)*(x380)))+(((IkReal(-1.00000000000000))*(x361)*(x367)*(x376))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst62)*(((((IkReal(-0.707109999985348))*(sj2)*(x380)))+(((IkReal(0.707109999985348))*(x361)*(x370)))+(((IkReal(-1.00000000000000))*(cj0)*(cj4)*(r02)*(x372)))+(((x372)*(x373)*(x375)))+(((IkReal(-1.00000000000000))*(r12)*(x362)*(x377)))+(((IkReal(-1.00000000000000))*(x361)*(x366)*(x367)))+(((IkReal(-1.00000000000000))*(r12)*(x364)*(x369)))+(((cj2)*(r00)*(x366)*(x373)))+(((IkReal(-1.00000000000000))*(r21)*(x361)*(x371)))+(((IkReal(-1.00000000000000))*(r02)*(x364)*(x366)))+(((x371)*(x380)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x361)*(x372)))+(((IkReal(-1.00000000000000))*(x361)*(x362)*(x363)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x361)*(x368)))+(((x377)*(x378)))+(((IkReal(-1.00000000000000))*(x364)*(x365)))+(((r10)*(sj0)*(x368)*(x373)))+(((x362)*(x373)*(x374))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst62)*(((((IkReal(0.707103562373095))*(x361)*(x370)))+(((IkReal(-1.00000000000000))*(r12)*(x362)*(x364)))+(((r12)*(x369)*(x377)))+(((x364)*(x378)))+(((IkReal(-1.00000000000000))*(cj2)*(r11)*(x361)*(x362)))+(((IkReal(-1.00000000000000))*(r02)*(x364)*(x376)))+(((x365)*(x377)))+(((IkReal(-1.00000000000000))*(x369)*(x373)*(x374)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x366)*(x373)))+(((x366)*(x379)))+(((r21)*(x361)*(x368)))+(((x361)*(x363)*(x369)))+(((IkReal(-1.00000000000000))*(x368)*(x380)))+(((cj2)*(r10)*(x362)*(x373)))+(((x371)*(x373)*(x375)))+(((r01)*(sj2)*(x361)*(x366)))+(((IkReal(-1.00000000000000))*(x372)*(x380)))+(((IkReal(-1.00000000000000))*(x361)*(x367)*(x376)))))), ((gconst62)*(((((IkReal(-0.707109999985348))*(sj2)*(x380)))+(((IkReal(0.707109999985348))*(x361)*(x370)))+(((IkReal(-1.00000000000000))*(cj0)*(cj4)*(r02)*(x372)))+(((x372)*(x373)*(x375)))+(((IkReal(-1.00000000000000))*(r12)*(x362)*(x377)))+(((IkReal(-1.00000000000000))*(x361)*(x366)*(x367)))+(((IkReal(-1.00000000000000))*(r12)*(x364)*(x369)))+(((cj2)*(r00)*(x366)*(x373)))+(((IkReal(-1.00000000000000))*(r21)*(x361)*(x371)))+(((IkReal(-1.00000000000000))*(r02)*(x364)*(x366)))+(((x371)*(x380)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x361)*(x372)))+(((IkReal(-1.00000000000000))*(x361)*(x362)*(x363)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x361)*(x368)))+(((x377)*(x378)))+(((IkReal(-1.00000000000000))*(x364)*(x365)))+(((r10)*(sj0)*(x368)*(x373)))+(((x362)*(x373)*(x374)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x381=IKsin(j1);
IkReal x382=IKcos(j1);
IkReal x383=((IkReal(0.707109999985348))*(cj2));
IkReal x384=((IkReal(1.00000000000000))*(sj4));
IkReal x385=((cj5)*(r00));
IkReal x386=((IkReal(0.707109999985348))*(sj2));
IkReal x387=((cj5)*(r20));
IkReal x388=((r12)*(sj0));
IkReal x389=((r21)*(sj5));
IkReal x390=((IkReal(1.00000000000000))*(cj4));
IkReal x391=((IkReal(0.707103562373095))*(x382));
IkReal x392=((r11)*(sj0)*(sj5));
IkReal x393=((cj0)*(x390));
IkReal x394=((IkReal(0.707103562373095))*(x381));
IkReal x395=((cj0)*(r01)*(sj5));
IkReal x396=((cj5)*(r10)*(sj0));
IkReal x397=((sj2)*(x391));
IkReal x398=((cj2)*(x394));
IkReal x399=((x382)*(x383));
IkReal x400=((x381)*(x386));
IkReal x401=((cj2)*(x391));
IkReal x402=((x381)*(x383));
IkReal x403=((sj2)*(x394));
IkReal x404=((x382)*(x386));
IkReal x405=((x397)+(x399)+(x398));
IkReal x406=((x403)+(x402)+(x404));
evalcond[0]=((((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x384)*(x387)))+(((sj4)*(x389)))+(x406)+(((IkReal(-1.00000000000000))*(x401))));
evalcond[1]=((((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(x389)*(x390)))+(x405)+(((cj4)*(x387)))+(((IkReal(-1.00000000000000))*(x400))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x384)*(x395)))+(((IkReal(-1.00000000000000))*(x384)*(x392)))+(((IkReal(-1.00000000000000))*(r02)*(x393)))+(((cj0)*(sj4)*(x385)))+(((IkReal(-1.00000000000000))*(x388)*(x390)))+(x405)+(((IkReal(-1.00000000000000))*(x400)))+(((sj4)*(x396))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x385)*(x393)))+(((cj4)*(x392)))+(((cj4)*(x395)))+(((IkReal(-1.00000000000000))*(x384)*(x388)))+(((IkReal(-1.00000000000000))*(cj0)*(r02)*(x384)))+(x401)+(((IkReal(-1.00000000000000))*(x390)*(x396)))+(((IkReal(-1.00000000000000))*(x406))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x407=((IkReal(0.707109999985348))*(sj4));
IkReal x408=((r22)*(sj2));
IkReal x409=((cj5)*(r20));
IkReal x410=((r21)*(sj5));
IkReal x411=((IkReal(0.707109999985348))*(cj4));
IkReal x412=((cj2)*(r22));
IkReal x413=((IkReal(0.707103562373095))*(sj4));
IkReal x414=((IkReal(0.707103562373095))*(cj4));
IkReal x415=((sj2)*(x414));
IkReal x416=((cj2)*(x414));
if( IKabs(((gconst61)*(((((x411)*(x412)))+(((IkReal(-1.00000000000000))*(cj2)*(x407)*(x409)))+(((sj2)*(x410)*(x413)))+(((sj2)*(x410)*(x411)))+(((x408)*(x414)))+(((x409)*(x416)))+(((cj2)*(x407)*(x410)))+(((IkReal(-1.00000000000000))*(x407)*(x408)))+(((x412)*(x413)))+(((IkReal(-1.00000000000000))*(x410)*(x416)))+(((IkReal(-1.00000000000000))*(sj2)*(x409)*(x413)))+(((IkReal(-1.00000000000000))*(sj2)*(x409)*(x411))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst61)*(((((x407)*(x412)))+(((IkReal(-1.00000000000000))*(x412)*(x414)))+(((IkReal(-1.00000000000000))*(cj2)*(x410)*(x413)))+(((IkReal(-1.00000000000000))*(cj2)*(x410)*(x411)))+(((IkReal(-1.00000000000000))*(sj2)*(x407)*(x409)))+(((x408)*(x411)))+(((x408)*(x413)))+(((x409)*(x415)))+(((cj2)*(x409)*(x411)))+(((cj2)*(x409)*(x413)))+(((IkReal(-1.00000000000000))*(x410)*(x415)))+(((sj2)*(x407)*(x410))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst61)*(((((x411)*(x412)))+(((IkReal(-1.00000000000000))*(cj2)*(x407)*(x409)))+(((sj2)*(x410)*(x413)))+(((sj2)*(x410)*(x411)))+(((x408)*(x414)))+(((x409)*(x416)))+(((cj2)*(x407)*(x410)))+(((IkReal(-1.00000000000000))*(x407)*(x408)))+(((x412)*(x413)))+(((IkReal(-1.00000000000000))*(x410)*(x416)))+(((IkReal(-1.00000000000000))*(sj2)*(x409)*(x413)))+(((IkReal(-1.00000000000000))*(sj2)*(x409)*(x411)))))), ((gconst61)*(((((x407)*(x412)))+(((IkReal(-1.00000000000000))*(x412)*(x414)))+(((IkReal(-1.00000000000000))*(cj2)*(x410)*(x413)))+(((IkReal(-1.00000000000000))*(cj2)*(x410)*(x411)))+(((IkReal(-1.00000000000000))*(sj2)*(x407)*(x409)))+(((x408)*(x411)))+(((x408)*(x413)))+(((x409)*(x415)))+(((cj2)*(x409)*(x411)))+(((cj2)*(x409)*(x413)))+(((IkReal(-1.00000000000000))*(x410)*(x415)))+(((sj2)*(x407)*(x410)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x417=IKsin(j1);
IkReal x418=IKcos(j1);
IkReal x419=((IkReal(0.707109999985348))*(cj2));
IkReal x420=((IkReal(1.00000000000000))*(sj4));
IkReal x421=((cj5)*(r00));
IkReal x422=((IkReal(0.707109999985348))*(sj2));
IkReal x423=((cj5)*(r20));
IkReal x424=((r12)*(sj0));
IkReal x425=((r21)*(sj5));
IkReal x426=((IkReal(1.00000000000000))*(cj4));
IkReal x427=((IkReal(0.707103562373095))*(x418));
IkReal x428=((r11)*(sj0)*(sj5));
IkReal x429=((cj0)*(x426));
IkReal x430=((IkReal(0.707103562373095))*(x417));
IkReal x431=((cj0)*(r01)*(sj5));
IkReal x432=((cj5)*(r10)*(sj0));
IkReal x433=((sj2)*(x427));
IkReal x434=((cj2)*(x430));
IkReal x435=((x418)*(x419));
IkReal x436=((x417)*(x422));
IkReal x437=((cj2)*(x427));
IkReal x438=((x417)*(x419));
IkReal x439=((sj2)*(x430));
IkReal x440=((x418)*(x422));
IkReal x441=((x433)+(x434)+(x435));
IkReal x442=((x438)+(x439)+(x440));
evalcond[0]=((((IkReal(-1.00000000000000))*(x437)))+(((IkReal(-1.00000000000000))*(x420)*(x423)))+(((cj4)*(r22)))+(((sj4)*(x425)))+(x442));
evalcond[1]=((((IkReal(-1.00000000000000))*(x436)))+(((r22)*(sj4)))+(((cj4)*(x423)))+(x441)+(((IkReal(-1.00000000000000))*(x425)*(x426))));
evalcond[2]=((((sj4)*(x432)))+(((IkReal(-1.00000000000000))*(x436)))+(((IkReal(-1.00000000000000))*(x420)*(x428)))+(((IkReal(-1.00000000000000))*(x420)*(x431)))+(((IkReal(-1.00000000000000))*(r02)*(x429)))+(x441)+(((IkReal(-1.00000000000000))*(x424)*(x426)))+(((cj0)*(sj4)*(x421))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x442)))+(((IkReal(-1.00000000000000))*(x421)*(x429)))+(((IkReal(-1.00000000000000))*(x420)*(x424)))+(((IkReal(-1.00000000000000))*(cj0)*(r02)*(x420)))+(((cj4)*(x431)))+(((cj4)*(x428)))+(x437)+(((IkReal(-1.00000000000000))*(x426)*(x432))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((npx)*(sj5)))+(((cj5)*(npy))));
evalcond[2]=((((cj5)*(r21)))+(((r20)*(sj5))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x443=((IkReal(2.34381456633434))*(cj4));
IkReal x444=((npy)*(sj5));
IkReal x445=((IkReal(2.94476514910275))*(cj4));
IkReal x446=((IkReal(2.34381456633434))*(sj4));
IkReal x447=((cj5)*(npx));
IkReal x448=((IkReal(2.94476514910275))*(sj4));
if( IKabs(((IkReal(0.516358403118598))+(((x446)*(x447)))+(((IkReal(-1.00000000000000))*(x444)*(x446)))+(((IkReal(-1.00000000000000))*(x444)*(x445)))+(((IkReal(-1.00000000000000))*(npz)*(x443)))+(((npz)*(x448)))+(((x445)*(x447))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.830081885873801))+(((npz)*(x446)))+(((npz)*(x445)))+(((IkReal(-1.00000000000000))*(x443)*(x444)))+(((x444)*(x448)))+(((IkReal(-1.00000000000000))*(x447)*(x448)))+(((x443)*(x447))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.516358403118598))+(((x446)*(x447)))+(((IkReal(-1.00000000000000))*(x444)*(x446)))+(((IkReal(-1.00000000000000))*(x444)*(x445)))+(((IkReal(-1.00000000000000))*(npz)*(x443)))+(((npz)*(x448)))+(((x445)*(x447)))))+IKsqr(((IkReal(-0.830081885873801))+(((npz)*(x446)))+(((npz)*(x445)))+(((IkReal(-1.00000000000000))*(x443)*(x444)))+(((x444)*(x448)))+(((IkReal(-1.00000000000000))*(x447)*(x448)))+(((x443)*(x447)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((IkReal(0.516358403118598))+(((x446)*(x447)))+(((IkReal(-1.00000000000000))*(x444)*(x446)))+(((IkReal(-1.00000000000000))*(x444)*(x445)))+(((IkReal(-1.00000000000000))*(npz)*(x443)))+(((npz)*(x448)))+(((x445)*(x447)))), ((IkReal(-0.830081885873801))+(((npz)*(x446)))+(((npz)*(x445)))+(((IkReal(-1.00000000000000))*(x443)*(x444)))+(((x444)*(x448)))+(((IkReal(-1.00000000000000))*(x447)*(x448)))+(((x443)*(x447)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x449=IKcos(j2);
IkReal x450=IKsin(j2);
IkReal x451=((npy)*(sj5));
IkReal x452=((cj5)*(npx));
evalcond[0]=((IkReal(-0.258003287011922))+(((IkReal(-0.207888640466058))*(x449)))+(((sj4)*(x451)))+(((IkReal(0.165463933124939))*(x450)))+(((cj4)*(npz)))+(((IkReal(-1.00000000000000))*(sj4)*(x452))));
evalcond[1]=((IkReal(-0.0300035672348961))+(((IkReal(-0.207888640466058))*(x450)))+(((cj4)*(x452)))+(((npz)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(x451)))+(((IkReal(-0.165463933124939))*(x449))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst65;
IkReal x453=(cj5)*(cj5);
IkReal x454=(sj5)*(sj5);
IkReal x455=((IkReal(1.00000000000000))*(x454));
IkReal x456=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x457=((IkReal(1.00000000000000))*(x453));
gconst65=IKsign(((((IkReal(-1.00000000000000))*(r10)*(r11)*(x456)))+(((IkReal(-1.00000000000000))*(x457)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x456)))+(((IkReal(-1.00000000000000))*(x455)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x455)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x457)*((r01)*(r01))))));
IkReal x458=(cj5)*(cj5);
IkReal x459=(sj5)*(sj5);
IkReal x460=((IkReal(1.00000000000000))*(x459));
IkReal x461=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x462=((IkReal(1.00000000000000))*(x458));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(r11)*(x461)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x461)))+(((IkReal(-1.00000000000000))*(x460)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x460)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x462)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x462)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst66;
IkReal x463=(sj5)*(sj5);
IkReal x464=(cj5)*(cj5);
IkReal x465=((cj4)*(cj5));
IkReal x466=((IkReal(1.00000000000000))*(r12));
IkReal x467=((cj4)*(sj5));
IkReal x468=((r01)*(r10));
IkReal x469=((sj4)*(x464));
IkReal x470=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x471=((sj4)*(x463));
gconst66=IKsign(((((x468)*(x469)))+(((IkReal(-1.00000000000000))*(r00)*(x466)*(x467)))+(((IkReal(-1.00000000000000))*(x469)*(x470)))+(((r02)*(r11)*(x465)))+(((r02)*(r10)*(x467)))+(((IkReal(-1.00000000000000))*(r01)*(x465)*(x466)))+(((IkReal(-1.00000000000000))*(x470)*(x471)))+(((x468)*(x471)))));
IkReal x472=(sj5)*(sj5);
IkReal x473=(cj5)*(cj5);
IkReal x474=((cj4)*(cj5));
IkReal x475=((IkReal(1.00000000000000))*(r12));
IkReal x476=((cj4)*(sj5));
IkReal x477=((r01)*(r10));
IkReal x478=((sj4)*(x473));
IkReal x479=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x480=((sj4)*(x472));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x478)*(x479)))+(((r02)*(r10)*(x476)))+(((r02)*(r11)*(x474)))+(((IkReal(-1.00000000000000))*(x479)*(x480)))+(((x477)*(x478)))+(((IkReal(-1.00000000000000))*(r01)*(x474)*(x475)))+(((IkReal(-1.00000000000000))*(r00)*(x475)*(x476)))+(((x477)*(x480))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst67;
gconst67=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x481=((IkReal(0.707109999985348))*(sj4));
IkReal x482=((r22)*(sj2));
IkReal x483=((cj5)*(r20));
IkReal x484=((r21)*(sj5));
IkReal x485=((IkReal(0.707109999985348))*(cj4));
IkReal x486=((IkReal(0.707103562373095))*(sj4));
IkReal x487=((cj2)*(r22));
IkReal x488=((IkReal(0.707103562373095))*(cj4));
IkReal x489=((sj2)*(x488));
IkReal x490=((cj2)*(x488));
if( IKabs(((gconst67)*(((((cj2)*(x481)*(x483)))+(((IkReal(-1.00000000000000))*(sj2)*(x484)*(x486)))+(((x483)*(x490)))+(((IkReal(-1.00000000000000))*(cj2)*(x481)*(x484)))+(((IkReal(-1.00000000000000))*(x481)*(x482)))+(((sj2)*(x483)*(x486)))+(((x486)*(x487)))+(((IkReal(-1.00000000000000))*(sj2)*(x483)*(x485)))+(((IkReal(-1.00000000000000))*(x484)*(x490)))+(((IkReal(-1.00000000000000))*(x482)*(x488)))+(((sj2)*(x484)*(x485)))+(((IkReal(-1.00000000000000))*(x485)*(x487))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst67)*(((((IkReal(-1.00000000000000))*(x484)*(x489)))+(((IkReal(-1.00000000000000))*(cj2)*(x483)*(x486)))+(((cj2)*(x484)*(x486)))+(((IkReal(-1.00000000000000))*(sj2)*(x481)*(x484)))+(((x483)*(x489)))+(((x481)*(x487)))+(((sj2)*(x481)*(x483)))+(((x482)*(x486)))+(((IkReal(-1.00000000000000))*(x482)*(x485)))+(((IkReal(-1.00000000000000))*(cj2)*(x484)*(x485)))+(((x487)*(x488)))+(((cj2)*(x483)*(x485))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst67)*(((((cj2)*(x481)*(x483)))+(((IkReal(-1.00000000000000))*(sj2)*(x484)*(x486)))+(((x483)*(x490)))+(((IkReal(-1.00000000000000))*(cj2)*(x481)*(x484)))+(((IkReal(-1.00000000000000))*(x481)*(x482)))+(((sj2)*(x483)*(x486)))+(((x486)*(x487)))+(((IkReal(-1.00000000000000))*(sj2)*(x483)*(x485)))+(((IkReal(-1.00000000000000))*(x484)*(x490)))+(((IkReal(-1.00000000000000))*(x482)*(x488)))+(((sj2)*(x484)*(x485)))+(((IkReal(-1.00000000000000))*(x485)*(x487)))))), ((gconst67)*(((((IkReal(-1.00000000000000))*(x484)*(x489)))+(((IkReal(-1.00000000000000))*(cj2)*(x483)*(x486)))+(((cj2)*(x484)*(x486)))+(((IkReal(-1.00000000000000))*(sj2)*(x481)*(x484)))+(((x483)*(x489)))+(((x481)*(x487)))+(((sj2)*(x481)*(x483)))+(((x482)*(x486)))+(((IkReal(-1.00000000000000))*(x482)*(x485)))+(((IkReal(-1.00000000000000))*(cj2)*(x484)*(x485)))+(((x487)*(x488)))+(((cj2)*(x483)*(x485)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[2];
IkReal x491=IKsin(j1);
IkReal x492=IKcos(j1);
IkReal x493=((cj5)*(r20));
IkReal x494=((r21)*(sj5));
IkReal x495=((IkReal(0.707103562373095))*(x491));
IkReal x496=((IkReal(0.707109999985348))*(x491));
IkReal x497=((IkReal(0.707103562373095))*(x492));
IkReal x498=((IkReal(0.707109999985348))*(x492));
evalcond[0]=((((sj4)*(x494)))+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(cj2)*(x497)))+(((IkReal(-1.00000000000000))*(sj4)*(x493)))+(((sj2)*(x498)))+(((sj2)*(x495)))+(((cj2)*(x496))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj4)*(x494)))+(((IkReal(-1.00000000000000))*(sj2)*(x497)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(cj2)*(x495)))+(((IkReal(-1.00000000000000))*(cj2)*(x498)))+(((cj4)*(x493)))+(((sj2)*(x496))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst68;
IkReal x499=(cj5)*(cj5);
IkReal x500=(sj5)*(sj5);
IkReal x501=((IkReal(1.00000000000000))*(x500));
IkReal x502=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x503=((IkReal(1.00000000000000))*(x499));
gconst68=IKsign(((((IkReal(-1.00000000000000))*(r00)*(r01)*(x502)))+(((IkReal(-1.00000000000000))*(x503)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x501)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x503)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x502)))+(((IkReal(-1.00000000000000))*(x501)*((r00)*(r00))))));
IkReal x504=(cj5)*(cj5);
IkReal x505=(sj5)*(sj5);
IkReal x506=((IkReal(1.00000000000000))*(x505));
IkReal x507=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x508=((IkReal(1.00000000000000))*(x504));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x508)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x508)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x507)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x507)))+(((IkReal(-1.00000000000000))*(x506)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x506)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst69;
IkReal x509=(sj5)*(sj5);
IkReal x510=(cj5)*(cj5);
IkReal x511=((cj4)*(cj5));
IkReal x512=((IkReal(1.00000000000000))*(r12));
IkReal x513=((cj4)*(sj5));
IkReal x514=((r01)*(r10));
IkReal x515=((sj4)*(x510));
IkReal x516=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x517=((sj4)*(x509));
gconst69=IKsign(((((IkReal(-1.00000000000000))*(r01)*(x511)*(x512)))+(((r02)*(r11)*(x511)))+(((x514)*(x515)))+(((x514)*(x517)))+(((IkReal(-1.00000000000000))*(x516)*(x517)))+(((IkReal(-1.00000000000000))*(r00)*(x512)*(x513)))+(((IkReal(-1.00000000000000))*(x515)*(x516)))+(((r02)*(r10)*(x513)))));
IkReal x518=(sj5)*(sj5);
IkReal x519=(cj5)*(cj5);
IkReal x520=((cj4)*(cj5));
IkReal x521=((IkReal(1.00000000000000))*(r12));
IkReal x522=((cj4)*(sj5));
IkReal x523=((r01)*(r10));
IkReal x524=((sj4)*(x519));
IkReal x525=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x526=((sj4)*(x518));
dummyeval[0]=((((r02)*(r10)*(x522)))+(((IkReal(-1.00000000000000))*(x524)*(x525)))+(((IkReal(-1.00000000000000))*(r01)*(x520)*(x521)))+(((IkReal(-1.00000000000000))*(x525)*(x526)))+(((IkReal(-1.00000000000000))*(r00)*(x521)*(x522)))+(((x523)*(x524)))+(((x523)*(x526)))+(((r02)*(r11)*(x520))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x527=((cj5)*(sj4));
IkReal x528=((IkReal(1.00000000000000))*(cj4));
IkReal x529=((IkReal(1.00000000000000))*(sj4)*(sj5));
if( IKabs(((gconst69)*(((((r10)*(x527)))+(((IkReal(-1.00000000000000))*(r11)*(x529)))+(((IkReal(-1.00000000000000))*(r12)*(x528))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst69)*(((((IkReal(-1.00000000000000))*(r01)*(x529)))+(((IkReal(-1.00000000000000))*(r02)*(x528)))+(((r00)*(x527))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst69)*(((((r10)*(x527)))+(((IkReal(-1.00000000000000))*(r11)*(x529)))+(((IkReal(-1.00000000000000))*(r12)*(x528)))))), ((gconst69)*(((((IkReal(-1.00000000000000))*(r01)*(x529)))+(((IkReal(-1.00000000000000))*(r02)*(x528)))+(((r00)*(x527)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[6];
IkReal x530=IKsin(j0);
IkReal x531=IKcos(j0);
IkReal x532=((IkReal(0.707103562373095))*(cj2));
IkReal x533=((cj5)*(sj4));
IkReal x534=((IkReal(1.00000000000000))*(sj4));
IkReal x535=((IkReal(1.00000000000000))*(r10));
IkReal x536=((IkReal(1.00000000000000))*(cj5));
IkReal x537=((IkReal(1.00000000000000))*(cj4));
IkReal x538=((sj1)*(sj2));
IkReal x539=((IkReal(0.707109999985348))*(cj1));
IkReal x540=((cj4)*(r11));
IkReal x541=((sj5)*(x530));
IkReal x542=((r10)*(x530));
IkReal x543=((r01)*(x531));
IkReal x544=((r00)*(x531));
IkReal x545=((r02)*(x531));
IkReal x546=((r12)*(x531));
IkReal x547=((cj5)*(x530));
IkReal x548=((r12)*(x530));
IkReal x549=((sj5)*(x531));
IkReal x550=((r02)*(x530));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x531)*(x536)))+(((IkReal(-1.00000000000000))*(x535)*(x549)))+(((r00)*(x541)))+(((r01)*(x547))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x537)*(x546)))+(((cj4)*(x550)))+(((r10)*(x531)*(x533)))+(((IkReal(-1.00000000000000))*(r11)*(x534)*(x549)))+(((IkReal(-1.00000000000000))*(r00)*(x530)*(x533)))+(((r01)*(sj4)*(x541))));
evalcond[2]=((((sj4)*(x550)))+(((IkReal(-1.00000000000000))*(x534)*(x546)))+(((x540)*(x549)))+(((cj4)*(r00)*(x547)))+(((IkReal(-1.00000000000000))*(r01)*(x537)*(x541)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x531)*(x535))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj5)*(x544)))+(((IkReal(-1.00000000000000))*(x535)*(x541)))+(((IkReal(-1.00000000000000))*(r11)*(x530)*(x536)))+(((IkReal(-1.00000000000000))*(x536)*(x543))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x537)*(x545)))+(((IkReal(-1.00000000000000))*(x537)*(x548)))+(((sj1)*(x532)))+(((IkReal(0.707103562373095))*(cj1)*(sj2)))+(((IkReal(-1.00000000000000))*(sj5)*(x534)*(x543)))+(((IkReal(-0.707109999985348))*(x538)))+(((cj2)*(x539)))+(((x533)*(x544)))+(((x533)*(x542)))+(((IkReal(-1.00000000000000))*(r11)*(x534)*(x541))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x534)*(x545)))+(((IkReal(-1.00000000000000))*(x534)*(x548)))+(((sj2)*(x539)))+(((IkReal(-1.00000000000000))*(cj1)*(x532)))+(((x540)*(x541)))+(((IkReal(-1.00000000000000))*(cj4)*(x535)*(x547)))+(((IkReal(0.707103562373095))*(x538)))+(((IkReal(-1.00000000000000))*(cj4)*(x536)*(x544)))+(((IkReal(0.707109999985348))*(cj2)*(sj1)))+(((cj4)*(sj5)*(x543))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst68)*(((((IkReal(-1.00000000000000))*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst68)*(((((cj5)*(r11)))+(((r10)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst68)*(((((IkReal(-1.00000000000000))*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)))))), ((gconst68)*(((((cj5)*(r11)))+(((r10)*(sj5)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[6];
IkReal x551=IKsin(j0);
IkReal x552=IKcos(j0);
IkReal x553=((IkReal(0.707103562373095))*(cj2));
IkReal x554=((cj5)*(sj4));
IkReal x555=((IkReal(1.00000000000000))*(sj4));
IkReal x556=((IkReal(1.00000000000000))*(r10));
IkReal x557=((IkReal(1.00000000000000))*(cj5));
IkReal x558=((IkReal(1.00000000000000))*(cj4));
IkReal x559=((sj1)*(sj2));
IkReal x560=((IkReal(0.707109999985348))*(cj1));
IkReal x561=((cj4)*(r11));
IkReal x562=((sj5)*(x551));
IkReal x563=((r10)*(x551));
IkReal x564=((r01)*(x552));
IkReal x565=((r00)*(x552));
IkReal x566=((r02)*(x552));
IkReal x567=((r12)*(x552));
IkReal x568=((cj5)*(x551));
IkReal x569=((r12)*(x551));
IkReal x570=((sj5)*(x552));
IkReal x571=((r02)*(x551));
evalcond[0]=((IkReal(-1.00000000000000))+(((r01)*(x568)))+(((r00)*(x562)))+(((IkReal(-1.00000000000000))*(r11)*(x552)*(x557)))+(((IkReal(-1.00000000000000))*(x556)*(x570))));
evalcond[1]=((((r01)*(sj4)*(x562)))+(((IkReal(-1.00000000000000))*(x558)*(x567)))+(((IkReal(-1.00000000000000))*(r11)*(x555)*(x570)))+(((IkReal(-1.00000000000000))*(r00)*(x551)*(x554)))+(((r10)*(x552)*(x554)))+(((cj4)*(x571))));
evalcond[2]=((((x561)*(x570)))+(((sj4)*(x571)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x552)*(x556)))+(((IkReal(-1.00000000000000))*(x555)*(x567)))+(((IkReal(-1.00000000000000))*(r01)*(x558)*(x562)))+(((cj4)*(r00)*(x568))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj5)*(x565)))+(((IkReal(-1.00000000000000))*(x556)*(x562)))+(((IkReal(-1.00000000000000))*(x557)*(x564)))+(((IkReal(-1.00000000000000))*(r11)*(x551)*(x557))));
evalcond[4]=((((sj1)*(x553)))+(((IkReal(-1.00000000000000))*(r11)*(x555)*(x562)))+(((IkReal(-1.00000000000000))*(x558)*(x569)))+(((IkReal(-1.00000000000000))*(x558)*(x566)))+(((IkReal(0.707103562373095))*(cj1)*(sj2)))+(((cj2)*(x560)))+(((IkReal(-0.707109999985348))*(x559)))+(((IkReal(-1.00000000000000))*(sj5)*(x555)*(x564)))+(((x554)*(x563)))+(((x554)*(x565))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj4)*(x557)*(x565)))+(((IkReal(-1.00000000000000))*(cj1)*(x553)))+(((IkReal(0.707103562373095))*(x559)))+(((IkReal(-1.00000000000000))*(x555)*(x566)))+(((IkReal(-1.00000000000000))*(x555)*(x569)))+(((x561)*(x562)))+(((cj4)*(sj5)*(x564)))+(((IkReal(0.707109999985348))*(cj2)*(sj1)))+(((IkReal(-1.00000000000000))*(cj4)*(x556)*(x568)))+(((sj2)*(x560))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x572=((cj5)*(sj4));
IkReal x573=((IkReal(1.00000000000000))*(cj4));
IkReal x574=((IkReal(1.00000000000000))*(sj4)*(sj5));
if( IKabs(((gconst66)*(((((IkReal(-1.00000000000000))*(r11)*(x574)))+(((IkReal(-1.00000000000000))*(r12)*(x573)))+(((r10)*(x572))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst66)*(((((r00)*(x572)))+(((IkReal(-1.00000000000000))*(r01)*(x574)))+(((IkReal(-1.00000000000000))*(r02)*(x573))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst66)*(((((IkReal(-1.00000000000000))*(r11)*(x574)))+(((IkReal(-1.00000000000000))*(r12)*(x573)))+(((r10)*(x572)))))), ((gconst66)*(((((r00)*(x572)))+(((IkReal(-1.00000000000000))*(r01)*(x574)))+(((IkReal(-1.00000000000000))*(r02)*(x573)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x575=IKsin(j0);
IkReal x576=IKcos(j0);
IkReal x577=((IkReal(1.00000000000000))*(cj5));
IkReal x578=((r01)*(sj5));
IkReal x579=((IkReal(1.00000000000000))*(r12));
IkReal x580=((r11)*(sj5));
IkReal x581=((IkReal(1.00000000000000))*(r10));
IkReal x582=((cj4)*(x575));
IkReal x583=((sj4)*(x575));
IkReal x584=((sj4)*(x576));
IkReal x585=((sj5)*(x575));
IkReal x586=((cj4)*(x576));
IkReal x587=((sj5)*(x576));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x576)*(x577)))+(((r00)*(x585)))+(((cj5)*(r01)*(x575)))+(((IkReal(-1.00000000000000))*(x581)*(x587))));
evalcond[1]=((((x578)*(x583)))+(((IkReal(-1.00000000000000))*(x580)*(x584)))+(((IkReal(-1.00000000000000))*(r00)*(x577)*(x583)))+(((r02)*(x582)))+(((IkReal(-1.00000000000000))*(x579)*(x586)))+(((cj5)*(r10)*(x584))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x577)*(x586)))+(((x580)*(x586)))+(((r02)*(x583)))+(((IkReal(-1.00000000000000))*(x579)*(x584)))+(((IkReal(-1.00000000000000))*(x578)*(x582)))+(((cj5)*(r00)*(x582))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x576)*(x577)))+(((IkReal(-1.00000000000000))*(r11)*(x575)*(x577)))+(((IkReal(-1.00000000000000))*(r00)*(x587)))+(((IkReal(-1.00000000000000))*(x581)*(x585))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst70;
gconst70=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst71;
gconst71=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x588=((sj4)*(sj5));
IkReal x589=((IkReal(0.707103562373095))*(sj0));
IkReal x590=((r11)*(sj2));
IkReal x591=((cj2)*(cj4));
IkReal x592=((IkReal(0.707103562373095))*(r22));
IkReal x593=((IkReal(0.707109999985348))*(cj0));
IkReal x594=((cj2)*(r01));
IkReal x595=((IkReal(0.707109999985348))*(cj2));
IkReal x596=((IkReal(0.707109999985348))*(sj0));
IkReal x597=((r21)*(sj2));
IkReal x598=((IkReal(0.707103562373095))*(cj2));
IkReal x599=((IkReal(0.707103562373095))*(sj2));
IkReal x600=((cj5)*(sj4));
IkReal x601=((r10)*(sj2));
IkReal x602=((cj0)*(r00));
IkReal x603=((IkReal(0.707103562373095))*(cj0));
IkReal x604=((cj4)*(sj2));
IkReal x605=((IkReal(0.707109999985348))*(r22));
IkReal x606=((r02)*(x604));
IkReal x607=((r20)*(x600));
if( IKabs(((gconst71)*(((((IkReal(0.707103562373095))*(x588)*(x597)))+(((IkReal(-1.00000000000000))*(cj2)*(r11)*(x588)*(x589)))+(((IkReal(-1.00000000000000))*(r02)*(x591)*(x603)))+(((r12)*(x596)*(x604)))+(((r21)*(x588)*(x595)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x593)*(x600)))+(((x593)*(x606)))+(((x592)*(x604)))+(((x591)*(x605)))+(((IkReal(-1.00000000000000))*(x599)*(x607)))+(((IkReal(-1.00000000000000))*(x588)*(x594)*(x603)))+(((x598)*(x600)*(x602)))+(((r01)*(sj2)*(x588)*(x593)))+(((x588)*(x590)*(x596)))+(((IkReal(-1.00000000000000))*(x596)*(x600)*(x601)))+(((cj2)*(r10)*(x589)*(x600)))+(((IkReal(-1.00000000000000))*(r12)*(x589)*(x591)))+(((IkReal(-1.00000000000000))*(x595)*(x607))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst71)*(((((r10)*(sj0)*(x595)*(x600)))+(((x589)*(x600)*(x601)))+(((x599)*(x600)*(x602)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x588)*(x595)))+(((IkReal(-1.00000000000000))*(r12)*(x591)*(x596)))+(((x604)*(x605)))+(((IkReal(-1.00000000000000))*(cj0)*(cj4)*(r02)*(x599)))+(((IkReal(-1.00000000000000))*(r12)*(x589)*(x604)))+(((IkReal(-1.00000000000000))*(x588)*(x589)*(x590)))+(((IkReal(-1.00000000000000))*(r02)*(x591)*(x593)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x588)*(x599)))+(((IkReal(-1.00000000000000))*(r21)*(x588)*(x598)))+(((IkReal(-1.00000000000000))*(x591)*(x592)))+(((cj2)*(r00)*(x593)*(x600)))+(((IkReal(-0.707109999985348))*(sj2)*(x607)))+(((x598)*(x607)))+(((IkReal(-1.00000000000000))*(x588)*(x593)*(x594)))+(((IkReal(0.707109999985348))*(x588)*(x597))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst71)*(((((IkReal(0.707103562373095))*(x588)*(x597)))+(((IkReal(-1.00000000000000))*(cj2)*(r11)*(x588)*(x589)))+(((IkReal(-1.00000000000000))*(r02)*(x591)*(x603)))+(((r12)*(x596)*(x604)))+(((r21)*(x588)*(x595)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x593)*(x600)))+(((x593)*(x606)))+(((x592)*(x604)))+(((x591)*(x605)))+(((IkReal(-1.00000000000000))*(x599)*(x607)))+(((IkReal(-1.00000000000000))*(x588)*(x594)*(x603)))+(((x598)*(x600)*(x602)))+(((r01)*(sj2)*(x588)*(x593)))+(((x588)*(x590)*(x596)))+(((IkReal(-1.00000000000000))*(x596)*(x600)*(x601)))+(((cj2)*(r10)*(x589)*(x600)))+(((IkReal(-1.00000000000000))*(r12)*(x589)*(x591)))+(((IkReal(-1.00000000000000))*(x595)*(x607)))))), ((gconst71)*(((((r10)*(sj0)*(x595)*(x600)))+(((x589)*(x600)*(x601)))+(((x599)*(x600)*(x602)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x588)*(x595)))+(((IkReal(-1.00000000000000))*(r12)*(x591)*(x596)))+(((x604)*(x605)))+(((IkReal(-1.00000000000000))*(cj0)*(cj4)*(r02)*(x599)))+(((IkReal(-1.00000000000000))*(r12)*(x589)*(x604)))+(((IkReal(-1.00000000000000))*(x588)*(x589)*(x590)))+(((IkReal(-1.00000000000000))*(r02)*(x591)*(x593)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x588)*(x599)))+(((IkReal(-1.00000000000000))*(r21)*(x588)*(x598)))+(((IkReal(-1.00000000000000))*(x591)*(x592)))+(((cj2)*(r00)*(x593)*(x600)))+(((IkReal(-0.707109999985348))*(sj2)*(x607)))+(((x598)*(x607)))+(((IkReal(-1.00000000000000))*(x588)*(x593)*(x594)))+(((IkReal(0.707109999985348))*(x588)*(x597)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x608=IKsin(j1);
IkReal x609=IKcos(j1);
IkReal x610=((IkReal(0.707109999985348))*(cj2));
IkReal x611=((IkReal(1.00000000000000))*(sj4));
IkReal x612=((cj5)*(r00));
IkReal x613=((IkReal(0.707109999985348))*(sj2));
IkReal x614=((cj5)*(r20));
IkReal x615=((r12)*(sj0));
IkReal x616=((r21)*(sj5));
IkReal x617=((IkReal(1.00000000000000))*(cj4));
IkReal x618=((IkReal(0.707103562373095))*(x609));
IkReal x619=((r11)*(sj0)*(sj5));
IkReal x620=((cj0)*(x617));
IkReal x621=((IkReal(0.707103562373095))*(x608));
IkReal x622=((cj0)*(r01)*(sj5));
IkReal x623=((cj5)*(r10)*(sj0));
IkReal x624=((sj2)*(x618));
IkReal x625=((cj2)*(x621));
IkReal x626=((x609)*(x610));
IkReal x627=((x608)*(x613));
IkReal x628=((x608)*(x610));
IkReal x629=((sj2)*(x621));
IkReal x630=((x609)*(x613));
IkReal x631=((cj2)*(x618));
IkReal x632=((x625)+(x624)+(x626));
IkReal x633=((x629)+(x628)+(x630));
evalcond[0]=((((cj4)*(r22)))+(((sj4)*(x616)))+(((IkReal(-1.00000000000000))*(x611)*(x614)))+(((IkReal(-1.00000000000000))*(x631)))+(x633));
evalcond[1]=((((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(x632)))+(x627)+(((IkReal(-1.00000000000000))*(x616)*(x617)))+(((cj4)*(x614))));
evalcond[2]=((((sj4)*(x623)))+(((cj0)*(sj4)*(x612)))+(((IkReal(-1.00000000000000))*(x611)*(x619)))+(((IkReal(-1.00000000000000))*(r02)*(x620)))+(((IkReal(-1.00000000000000))*(x627)))+(((IkReal(-1.00000000000000))*(x611)*(x622)))+(x632)+(((IkReal(-1.00000000000000))*(x615)*(x617))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x611)*(x615)))+(((IkReal(-1.00000000000000))*(cj0)*(r02)*(x611)))+(((cj4)*(x622)))+(((IkReal(-1.00000000000000))*(x631)))+(((IkReal(-1.00000000000000))*(x617)*(x623)))+(((IkReal(-1.00000000000000))*(x612)*(x620)))+(x633)+(((cj4)*(x619))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x634=((IkReal(0.707109999985348))*(sj4));
IkReal x635=((r22)*(sj2));
IkReal x636=((cj5)*(r20));
IkReal x637=((r21)*(sj5));
IkReal x638=((IkReal(0.707109999985348))*(cj4));
IkReal x639=((cj2)*(r22));
IkReal x640=((IkReal(0.707103562373095))*(sj4));
IkReal x641=((IkReal(0.707103562373095))*(cj4));
IkReal x642=((sj2)*(x641));
IkReal x643=((cj2)*(x641));
if( IKabs(((gconst70)*(((((x636)*(x643)))+(((x639)*(x640)))+(((IkReal(-1.00000000000000))*(cj2)*(x634)*(x637)))+(((IkReal(-1.00000000000000))*(x634)*(x635)))+(((IkReal(-1.00000000000000))*(x638)*(x639)))+(((IkReal(-1.00000000000000))*(sj2)*(x637)*(x640)))+(((sj2)*(x636)*(x640)))+(((IkReal(-1.00000000000000))*(x635)*(x641)))+(((IkReal(-1.00000000000000))*(sj2)*(x636)*(x638)))+(((IkReal(-1.00000000000000))*(x637)*(x643)))+(((sj2)*(x637)*(x638)))+(((cj2)*(x634)*(x636))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst70)*(((((x635)*(x640)))+(((x634)*(x639)))+(((x636)*(x642)))+(((x639)*(x641)))+(((cj2)*(x636)*(x638)))+(((IkReal(-1.00000000000000))*(sj2)*(x634)*(x637)))+(((IkReal(-1.00000000000000))*(cj2)*(x637)*(x638)))+(((cj2)*(x637)*(x640)))+(((IkReal(-1.00000000000000))*(x635)*(x638)))+(((IkReal(-1.00000000000000))*(cj2)*(x636)*(x640)))+(((IkReal(-1.00000000000000))*(x637)*(x642)))+(((sj2)*(x634)*(x636))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst70)*(((((x636)*(x643)))+(((x639)*(x640)))+(((IkReal(-1.00000000000000))*(cj2)*(x634)*(x637)))+(((IkReal(-1.00000000000000))*(x634)*(x635)))+(((IkReal(-1.00000000000000))*(x638)*(x639)))+(((IkReal(-1.00000000000000))*(sj2)*(x637)*(x640)))+(((sj2)*(x636)*(x640)))+(((IkReal(-1.00000000000000))*(x635)*(x641)))+(((IkReal(-1.00000000000000))*(sj2)*(x636)*(x638)))+(((IkReal(-1.00000000000000))*(x637)*(x643)))+(((sj2)*(x637)*(x638)))+(((cj2)*(x634)*(x636)))))), ((gconst70)*(((((x635)*(x640)))+(((x634)*(x639)))+(((x636)*(x642)))+(((x639)*(x641)))+(((cj2)*(x636)*(x638)))+(((IkReal(-1.00000000000000))*(sj2)*(x634)*(x637)))+(((IkReal(-1.00000000000000))*(cj2)*(x637)*(x638)))+(((cj2)*(x637)*(x640)))+(((IkReal(-1.00000000000000))*(x635)*(x638)))+(((IkReal(-1.00000000000000))*(cj2)*(x636)*(x640)))+(((IkReal(-1.00000000000000))*(x637)*(x642)))+(((sj2)*(x634)*(x636)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x644=IKsin(j1);
IkReal x645=IKcos(j1);
IkReal x646=((IkReal(0.707109999985348))*(cj2));
IkReal x647=((IkReal(1.00000000000000))*(sj4));
IkReal x648=((cj5)*(r00));
IkReal x649=((IkReal(0.707109999985348))*(sj2));
IkReal x650=((cj5)*(r20));
IkReal x651=((r12)*(sj0));
IkReal x652=((r21)*(sj5));
IkReal x653=((IkReal(1.00000000000000))*(cj4));
IkReal x654=((IkReal(0.707103562373095))*(x645));
IkReal x655=((r11)*(sj0)*(sj5));
IkReal x656=((cj0)*(x653));
IkReal x657=((IkReal(0.707103562373095))*(x644));
IkReal x658=((cj0)*(r01)*(sj5));
IkReal x659=((cj5)*(r10)*(sj0));
IkReal x660=((sj2)*(x654));
IkReal x661=((cj2)*(x657));
IkReal x662=((x645)*(x646));
IkReal x663=((x644)*(x649));
IkReal x664=((x644)*(x646));
IkReal x665=((sj2)*(x657));
IkReal x666=((x645)*(x649));
IkReal x667=((cj2)*(x654));
IkReal x668=((x661)+(x660)+(x662));
IkReal x669=((x665)+(x664)+(x666));
evalcond[0]=((((sj4)*(x652)))+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x647)*(x650)))+(((IkReal(-1.00000000000000))*(x667)))+(x669));
evalcond[1]=((((cj4)*(x650)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(x668)))+(x663)+(((IkReal(-1.00000000000000))*(x652)*(x653))));
evalcond[2]=((((sj4)*(x659)))+(((IkReal(-1.00000000000000))*(x651)*(x653)))+(((IkReal(-1.00000000000000))*(x647)*(x658)))+(((IkReal(-1.00000000000000))*(x647)*(x655)))+(((IkReal(-1.00000000000000))*(x663)))+(((cj0)*(sj4)*(x648)))+(((IkReal(-1.00000000000000))*(r02)*(x656)))+(x668));
evalcond[3]=((((cj4)*(x658)))+(((cj4)*(x655)))+(((IkReal(-1.00000000000000))*(x647)*(x651)))+(((IkReal(-1.00000000000000))*(x667)))+(((IkReal(-1.00000000000000))*(cj0)*(r02)*(x647)))+(x669)+(((IkReal(-1.00000000000000))*(x648)*(x656)))+(((IkReal(-1.00000000000000))*(x653)*(x659))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst65)*(((((IkReal(-1.00000000000000))*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst65)*(((((cj5)*(r11)))+(((r10)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst65)*(((((IkReal(-1.00000000000000))*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)))))), ((gconst65)*(((((cj5)*(r11)))+(((r10)*(sj5)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x670=IKsin(j0);
IkReal x671=IKcos(j0);
IkReal x672=((IkReal(1.00000000000000))*(cj5));
IkReal x673=((r01)*(sj5));
IkReal x674=((IkReal(1.00000000000000))*(r12));
IkReal x675=((r11)*(sj5));
IkReal x676=((IkReal(1.00000000000000))*(r10));
IkReal x677=((cj4)*(x670));
IkReal x678=((sj4)*(x670));
IkReal x679=((sj4)*(x671));
IkReal x680=((sj5)*(x670));
IkReal x681=((cj4)*(x671));
IkReal x682=((sj5)*(x671));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x671)*(x672)))+(((r00)*(x680)))+(((IkReal(-1.00000000000000))*(x676)*(x682)))+(((cj5)*(r01)*(x670))));
evalcond[1]=((((cj5)*(r10)*(x679)))+(((x673)*(x678)))+(((r02)*(x677)))+(((IkReal(-1.00000000000000))*(x675)*(x679)))+(((IkReal(-1.00000000000000))*(r00)*(x672)*(x678)))+(((IkReal(-1.00000000000000))*(x674)*(x681))));
evalcond[2]=((((cj5)*(r00)*(x677)))+(((r02)*(x678)))+(((IkReal(-1.00000000000000))*(x673)*(x677)))+(((IkReal(-1.00000000000000))*(r10)*(x672)*(x681)))+(((IkReal(-1.00000000000000))*(x674)*(x679)))+(((x675)*(x681))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x670)*(x672)))+(((IkReal(-1.00000000000000))*(r00)*(x682)))+(((IkReal(-1.00000000000000))*(r01)*(x671)*(x672)))+(((IkReal(-1.00000000000000))*(x676)*(x680))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst70;
gconst70=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst71;
gconst71=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x683=((sj4)*(sj5));
IkReal x684=((IkReal(0.707103562373095))*(sj0));
IkReal x685=((r11)*(sj2));
IkReal x686=((cj2)*(cj4));
IkReal x687=((IkReal(0.707103562373095))*(r22));
IkReal x688=((IkReal(0.707109999985348))*(cj0));
IkReal x689=((cj2)*(r01));
IkReal x690=((IkReal(0.707109999985348))*(cj2));
IkReal x691=((IkReal(0.707109999985348))*(sj0));
IkReal x692=((r21)*(sj2));
IkReal x693=((IkReal(0.707103562373095))*(cj2));
IkReal x694=((IkReal(0.707103562373095))*(sj2));
IkReal x695=((cj5)*(sj4));
IkReal x696=((r10)*(sj2));
IkReal x697=((cj0)*(r00));
IkReal x698=((IkReal(0.707103562373095))*(cj0));
IkReal x699=((cj4)*(sj2));
IkReal x700=((IkReal(0.707109999985348))*(r22));
IkReal x701=((r02)*(x699));
IkReal x702=((r20)*(x695));
if( IKabs(((gconst71)*(((((x687)*(x699)))+(((IkReal(-1.00000000000000))*(r12)*(x684)*(x686)))+(((cj2)*(r10)*(x684)*(x695)))+(((IkReal(-1.00000000000000))*(x683)*(x689)*(x698)))+(((IkReal(-1.00000000000000))*(x690)*(x702)))+(((r12)*(x691)*(x699)))+(((IkReal(-1.00000000000000))*(x694)*(x702)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x688)*(x695)))+(((IkReal(-1.00000000000000))*(cj2)*(r11)*(x683)*(x684)))+(((x683)*(x685)*(x691)))+(((r21)*(x683)*(x690)))+(((IkReal(-1.00000000000000))*(x691)*(x695)*(x696)))+(((IkReal(0.707103562373095))*(x683)*(x692)))+(((x688)*(x701)))+(((x686)*(x700)))+(((IkReal(-1.00000000000000))*(r02)*(x686)*(x698)))+(((r01)*(sj2)*(x683)*(x688)))+(((x693)*(x695)*(x697))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst71)*(((((IkReal(-1.00000000000000))*(x683)*(x688)*(x689)))+(((x684)*(x695)*(x696)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x683)*(x690)))+(((IkReal(-1.00000000000000))*(r12)*(x684)*(x699)))+(((IkReal(-1.00000000000000))*(r02)*(x686)*(x688)))+(((r10)*(sj0)*(x690)*(x695)))+(((IkReal(-1.00000000000000))*(x686)*(x687)))+(((IkReal(-1.00000000000000))*(r12)*(x686)*(x691)))+(((cj2)*(r00)*(x688)*(x695)))+(((x694)*(x695)*(x697)))+(((IkReal(-1.00000000000000))*(cj0)*(cj4)*(r02)*(x694)))+(((IkReal(-0.707109999985348))*(sj2)*(x702)))+(((IkReal(-1.00000000000000))*(r21)*(x683)*(x693)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x683)*(x694)))+(((IkReal(0.707109999985348))*(x683)*(x692)))+(((x693)*(x702)))+(((IkReal(-1.00000000000000))*(x683)*(x684)*(x685)))+(((x699)*(x700))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst71)*(((((x687)*(x699)))+(((IkReal(-1.00000000000000))*(r12)*(x684)*(x686)))+(((cj2)*(r10)*(x684)*(x695)))+(((IkReal(-1.00000000000000))*(x683)*(x689)*(x698)))+(((IkReal(-1.00000000000000))*(x690)*(x702)))+(((r12)*(x691)*(x699)))+(((IkReal(-1.00000000000000))*(x694)*(x702)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x688)*(x695)))+(((IkReal(-1.00000000000000))*(cj2)*(r11)*(x683)*(x684)))+(((x683)*(x685)*(x691)))+(((r21)*(x683)*(x690)))+(((IkReal(-1.00000000000000))*(x691)*(x695)*(x696)))+(((IkReal(0.707103562373095))*(x683)*(x692)))+(((x688)*(x701)))+(((x686)*(x700)))+(((IkReal(-1.00000000000000))*(r02)*(x686)*(x698)))+(((r01)*(sj2)*(x683)*(x688)))+(((x693)*(x695)*(x697)))))), ((gconst71)*(((((IkReal(-1.00000000000000))*(x683)*(x688)*(x689)))+(((x684)*(x695)*(x696)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x683)*(x690)))+(((IkReal(-1.00000000000000))*(r12)*(x684)*(x699)))+(((IkReal(-1.00000000000000))*(r02)*(x686)*(x688)))+(((r10)*(sj0)*(x690)*(x695)))+(((IkReal(-1.00000000000000))*(x686)*(x687)))+(((IkReal(-1.00000000000000))*(r12)*(x686)*(x691)))+(((cj2)*(r00)*(x688)*(x695)))+(((x694)*(x695)*(x697)))+(((IkReal(-1.00000000000000))*(cj0)*(cj4)*(r02)*(x694)))+(((IkReal(-0.707109999985348))*(sj2)*(x702)))+(((IkReal(-1.00000000000000))*(r21)*(x683)*(x693)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x683)*(x694)))+(((IkReal(0.707109999985348))*(x683)*(x692)))+(((x693)*(x702)))+(((IkReal(-1.00000000000000))*(x683)*(x684)*(x685)))+(((x699)*(x700)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x703=IKsin(j1);
IkReal x704=IKcos(j1);
IkReal x705=((IkReal(0.707109999985348))*(cj2));
IkReal x706=((IkReal(1.00000000000000))*(sj4));
IkReal x707=((cj5)*(r00));
IkReal x708=((IkReal(0.707109999985348))*(sj2));
IkReal x709=((cj5)*(r20));
IkReal x710=((r12)*(sj0));
IkReal x711=((r21)*(sj5));
IkReal x712=((IkReal(1.00000000000000))*(cj4));
IkReal x713=((IkReal(0.707103562373095))*(x704));
IkReal x714=((r11)*(sj0)*(sj5));
IkReal x715=((cj0)*(x712));
IkReal x716=((IkReal(0.707103562373095))*(x703));
IkReal x717=((cj0)*(r01)*(sj5));
IkReal x718=((cj5)*(r10)*(sj0));
IkReal x719=((sj2)*(x713));
IkReal x720=((cj2)*(x716));
IkReal x721=((x704)*(x705));
IkReal x722=((x703)*(x708));
IkReal x723=((x703)*(x705));
IkReal x724=((sj2)*(x716));
IkReal x725=((x704)*(x708));
IkReal x726=((cj2)*(x713));
IkReal x727=((x719)+(x720)+(x721));
IkReal x728=((x723)+(x724)+(x725));
evalcond[0]=((((sj4)*(x711)))+(((IkReal(-1.00000000000000))*(x706)*(x709)))+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x726)))+(x728));
evalcond[1]=((((IkReal(-1.00000000000000))*(x711)*(x712)))+(((cj4)*(x709)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(x727)))+(x722));
evalcond[2]=((((sj4)*(x718)))+(((IkReal(-1.00000000000000))*(r02)*(x715)))+(((IkReal(-1.00000000000000))*(x706)*(x714)))+(((IkReal(-1.00000000000000))*(x706)*(x717)))+(((IkReal(-1.00000000000000))*(x710)*(x712)))+(((IkReal(-1.00000000000000))*(x722)))+(((cj0)*(sj4)*(x707)))+(x727));
evalcond[3]=((((IkReal(-1.00000000000000))*(x707)*(x715)))+(((IkReal(-1.00000000000000))*(x706)*(x710)))+(((cj4)*(x714)))+(((cj4)*(x717)))+(((IkReal(-1.00000000000000))*(cj0)*(r02)*(x706)))+(((IkReal(-1.00000000000000))*(x726)))+(((IkReal(-1.00000000000000))*(x712)*(x718)))+(x728));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x729=((IkReal(0.707109999985348))*(sj4));
IkReal x730=((r22)*(sj2));
IkReal x731=((cj5)*(r20));
IkReal x732=((r21)*(sj5));
IkReal x733=((IkReal(0.707109999985348))*(cj4));
IkReal x734=((cj2)*(r22));
IkReal x735=((IkReal(0.707103562373095))*(sj4));
IkReal x736=((IkReal(0.707103562373095))*(cj4));
IkReal x737=((sj2)*(x736));
IkReal x738=((cj2)*(x736));
if( IKabs(((gconst70)*(((((sj2)*(x732)*(x733)))+(((x731)*(x738)))+(((IkReal(-1.00000000000000))*(x732)*(x738)))+(((IkReal(-1.00000000000000))*(sj2)*(x731)*(x733)))+(((x734)*(x735)))+(((IkReal(-1.00000000000000))*(x733)*(x734)))+(((cj2)*(x729)*(x731)))+(((IkReal(-1.00000000000000))*(x730)*(x736)))+(((IkReal(-1.00000000000000))*(cj2)*(x729)*(x732)))+(((sj2)*(x731)*(x735)))+(((IkReal(-1.00000000000000))*(sj2)*(x732)*(x735)))+(((IkReal(-1.00000000000000))*(x729)*(x730))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst70)*(((((x731)*(x737)))+(((IkReal(-1.00000000000000))*(x732)*(x737)))+(((x734)*(x736)))+(((IkReal(-1.00000000000000))*(sj2)*(x729)*(x732)))+(((x729)*(x734)))+(((sj2)*(x729)*(x731)))+(((IkReal(-1.00000000000000))*(cj2)*(x732)*(x733)))+(((cj2)*(x731)*(x733)))+(((IkReal(-1.00000000000000))*(x730)*(x733)))+(((IkReal(-1.00000000000000))*(cj2)*(x731)*(x735)))+(((cj2)*(x732)*(x735)))+(((x730)*(x735))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst70)*(((((sj2)*(x732)*(x733)))+(((x731)*(x738)))+(((IkReal(-1.00000000000000))*(x732)*(x738)))+(((IkReal(-1.00000000000000))*(sj2)*(x731)*(x733)))+(((x734)*(x735)))+(((IkReal(-1.00000000000000))*(x733)*(x734)))+(((cj2)*(x729)*(x731)))+(((IkReal(-1.00000000000000))*(x730)*(x736)))+(((IkReal(-1.00000000000000))*(cj2)*(x729)*(x732)))+(((sj2)*(x731)*(x735)))+(((IkReal(-1.00000000000000))*(sj2)*(x732)*(x735)))+(((IkReal(-1.00000000000000))*(x729)*(x730)))))), ((gconst70)*(((((x731)*(x737)))+(((IkReal(-1.00000000000000))*(x732)*(x737)))+(((x734)*(x736)))+(((IkReal(-1.00000000000000))*(sj2)*(x729)*(x732)))+(((x729)*(x734)))+(((sj2)*(x729)*(x731)))+(((IkReal(-1.00000000000000))*(cj2)*(x732)*(x733)))+(((cj2)*(x731)*(x733)))+(((IkReal(-1.00000000000000))*(x730)*(x733)))+(((IkReal(-1.00000000000000))*(cj2)*(x731)*(x735)))+(((cj2)*(x732)*(x735)))+(((x730)*(x735)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x739=IKsin(j1);
IkReal x740=IKcos(j1);
IkReal x741=((IkReal(0.707109999985348))*(cj2));
IkReal x742=((IkReal(1.00000000000000))*(sj4));
IkReal x743=((cj5)*(r00));
IkReal x744=((IkReal(0.707109999985348))*(sj2));
IkReal x745=((cj5)*(r20));
IkReal x746=((r12)*(sj0));
IkReal x747=((r21)*(sj5));
IkReal x748=((IkReal(1.00000000000000))*(cj4));
IkReal x749=((IkReal(0.707103562373095))*(x740));
IkReal x750=((r11)*(sj0)*(sj5));
IkReal x751=((cj0)*(x748));
IkReal x752=((IkReal(0.707103562373095))*(x739));
IkReal x753=((cj0)*(r01)*(sj5));
IkReal x754=((cj5)*(r10)*(sj0));
IkReal x755=((sj2)*(x749));
IkReal x756=((cj2)*(x752));
IkReal x757=((x740)*(x741));
IkReal x758=((x739)*(x744));
IkReal x759=((x739)*(x741));
IkReal x760=((sj2)*(x752));
IkReal x761=((x740)*(x744));
IkReal x762=((cj2)*(x749));
IkReal x763=((x755)+(x757)+(x756));
IkReal x764=((x759)+(x760)+(x761));
evalcond[0]=((((sj4)*(x747)))+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x742)*(x745)))+(((IkReal(-1.00000000000000))*(x762)))+(x764));
evalcond[1]=((((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(x763)))+(((IkReal(-1.00000000000000))*(x747)*(x748)))+(x758)+(((cj4)*(x745))));
evalcond[2]=((((cj0)*(sj4)*(x743)))+(((IkReal(-1.00000000000000))*(x742)*(x750)))+(((IkReal(-1.00000000000000))*(x742)*(x753)))+(((IkReal(-1.00000000000000))*(x746)*(x748)))+(((sj4)*(x754)))+(((IkReal(-1.00000000000000))*(r02)*(x751)))+(x763)+(((IkReal(-1.00000000000000))*(x758))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x742)*(x746)))+(((IkReal(-1.00000000000000))*(x762)))+(((IkReal(-1.00000000000000))*(x743)*(x751)))+(x764)+(((IkReal(-1.00000000000000))*(x748)*(x754)))+(((cj4)*(x753)))+(((cj4)*(x750)))+(((IkReal(-1.00000000000000))*(cj0)*(r02)*(x742))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x765=((IkReal(8.66210554726807e+23))*(cj5));
IkReal x766=((IkReal(8.66210554726807e+23))*(sj5));
IkReal x767=((IkReal(6.89439331452234e+23))*(cj5));
IkReal x768=((IkReal(6.89439331452234e+23))*(sj5));
IkReal x769=((npx)*(sj3)*(sj4));
IkReal x770=((cj4)*(npz)*(sj3));
IkReal x771=((npy)*(sj3)*(sj4));
if( IKabs(((gconst2)*(((IkReal(-5.19726332836084e+21))+(((npy)*(x765)))+(((IkReal(-1.00000000000000))*(x768)*(x771)))+(((IkReal(-5.19726332836084e+21))*(cj3)))+(((IkReal(1.51888207091656e+23))*(sj3)))+(((IkReal(-6.89439331452234e+23))*(x770)))+(((npx)*(x766)))+(((x767)*(x769))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((IkReal(-4.13663598871341e+21))+(((npy)*(x767)))+(((IkReal(-1.00000000000000))*(x765)*(x769)))+(((IkReal(8.66210554726807e+23))*(x770)))+(((x766)*(x771)))+(((npx)*(x768)))+(((IkReal(-2.44170809699545e+23))*(sj3)))+(((IkReal(-4.13663598871341e+21))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst2)*(((IkReal(-5.19726332836084e+21))+(((npy)*(x765)))+(((IkReal(-1.00000000000000))*(x768)*(x771)))+(((IkReal(-5.19726332836084e+21))*(cj3)))+(((IkReal(1.51888207091656e+23))*(sj3)))+(((IkReal(-6.89439331452234e+23))*(x770)))+(((npx)*(x766)))+(((x767)*(x769)))))), ((gconst2)*(((IkReal(-4.13663598871341e+21))+(((npy)*(x767)))+(((IkReal(-1.00000000000000))*(x765)*(x769)))+(((IkReal(8.66210554726807e+23))*(x770)))+(((x766)*(x771)))+(((npx)*(x768)))+(((IkReal(-2.44170809699545e+23))*(sj3)))+(((IkReal(-4.13663598871341e+21))*(cj3)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[3];
IkReal x772=IKsin(j2);
IkReal x773=IKcos(j2);
IkReal x774=((cj5)*(npx));
IkReal x775=((npy)*(sj5));
IkReal x776=((IkReal(0.165463933124939))*(x773));
IkReal x777=((IkReal(0.207888640466058))*(x772));
evalcond[0]=((IkReal(-0.258003287011922))+(((sj4)*(x775)))+(((IkReal(-1.00000000000000))*(sj4)*(x774)))+(((cj4)*(npz)))+(((IkReal(0.165463933124939))*(x772)))+(((IkReal(-0.207888640466058))*(x773))));
evalcond[1]=((IkReal(-0.00600000000000000))+(((IkReal(-0.0300035672348961))*(sj3)))+(((IkReal(-1.00000000000000))*(sj3)*(x776)))+(((IkReal(-1.00000000000000))*(sj3)*(x777)))+(((npx)*(sj5)))+(((IkReal(-0.00600000000000000))*(cj3)))+(((cj5)*(npy))));
evalcond[2]=((((npz)*(sj4)))+(((IkReal(-0.00600000000000000))*(sj3)))+(((cj3)*(x777)))+(((cj3)*(x776)))+(((IkReal(-1.00000000000000))*(cj4)*(x775)))+(((cj4)*(x774)))+(((IkReal(0.0300035672348961))*(cj3))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
IkReal x778=(cj5)*(cj5);
IkReal x779=(sj5)*(sj5);
IkReal x780=((IkReal(1.00000000000000))*(r10));
IkReal x781=((cj4)*(sj5));
IkReal x782=((r00)*(r11));
IkReal x783=((cj4)*(cj5));
IkReal x784=((sj4)*(x778));
IkReal x785=((sj4)*(x779));
gconst4=IKsign(((((IkReal(-1.00000000000000))*(r01)*(x780)*(x784)))+(((IkReal(-1.00000000000000))*(r01)*(x780)*(x785)))+(((r01)*(r12)*(x783)))+(((x782)*(x784)))+(((x782)*(x785)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x783)))+(((r00)*(r12)*(x781)))+(((IkReal(-1.00000000000000))*(r02)*(x780)*(x781)))));
IkReal x786=(cj5)*(cj5);
IkReal x787=(sj5)*(sj5);
IkReal x788=((IkReal(1.00000000000000))*(r10));
IkReal x789=((cj4)*(sj5));
IkReal x790=((r00)*(r11));
IkReal x791=((cj4)*(cj5));
IkReal x792=((sj4)*(x786));
IkReal x793=((sj4)*(x787));
dummyeval[0]=((((r01)*(r12)*(x791)))+(((x790)*(x793)))+(((x790)*(x792)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x791)))+(((r00)*(r12)*(x789)))+(((IkReal(-1.00000000000000))*(r02)*(x788)*(x789)))+(((IkReal(-1.00000000000000))*(r01)*(x788)*(x793)))+(((IkReal(-1.00000000000000))*(r01)*(x788)*(x792))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
IkReal x794=(cj5)*(cj5);
IkReal x795=(sj5)*(sj5);
IkReal x796=((IkReal(1.00000000000000))*(r11));
IkReal x797=((cj4)*(r00));
IkReal x798=((r02)*(sj4));
IkReal x799=((r12)*(sj4));
IkReal x800=((cj4)*(r01)*(r10));
gconst5=IKsign(((((IkReal(-1.00000000000000))*(x794)*(x796)*(x797)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x798)))+(((r00)*(sj5)*(x799)))+(((x795)*(x800)))+(((x794)*(x800)))+(((IkReal(-1.00000000000000))*(cj5)*(x796)*(x798)))+(((cj5)*(r01)*(x799)))+(((IkReal(-1.00000000000000))*(x795)*(x796)*(x797)))));
IkReal x801=(cj5)*(cj5);
IkReal x802=(sj5)*(sj5);
IkReal x803=((IkReal(1.00000000000000))*(r11));
IkReal x804=((cj4)*(r00));
IkReal x805=((r02)*(sj4));
IkReal x806=((r12)*(sj4));
IkReal x807=((cj4)*(r01)*(r10));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(sj5)*(x805)))+(((r00)*(sj5)*(x806)))+(((IkReal(-1.00000000000000))*(x801)*(x803)*(x804)))+(((x801)*(x807)))+(((IkReal(-1.00000000000000))*(x802)*(x803)*(x804)))+(((IkReal(-1.00000000000000))*(cj5)*(x803)*(x805)))+(((cj5)*(r01)*(x806)))+(((x802)*(x807))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
IkReal x808=((IkReal(1.00000000000000))*(sj3));
gconst6=IKsign(((((IkReal(-1.00000000000000))*(x808)*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*(x808)*((sj2)*(sj2))))));
IkReal x809=((IkReal(1.00000000000000))*(sj3));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x809)*((sj2)*(sj2))))+(((IkReal(-1.00000000000000))*(x809)*((cj2)*(cj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x810=((cj5)*(npx));
IkReal x811=((npy)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.258003287011922))+(((sj4)*(x811)))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((IkReal(-1.00000000000000))*(sj4)*(x810)))+(((IkReal(0.165463933124939))*(sj2))));
evalcond[2]=((IkReal(-0.0120000000000000))+(((npx)*(sj5)))+(((cj5)*(npy))));
evalcond[3]=((IkReal(0.0300035672348961))+(((npz)*(sj4)))+(((IkReal(0.207888640466058))*(sj2)))+(((cj4)*(x810)))+(((IkReal(-1.00000000000000))*(cj4)*(x811)))+(((IkReal(0.165463933124939))*(cj2))));
evalcond[4]=((((cj5)*(r21)))+(((r20)*(sj5))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst20;
IkReal x812=(cj5)*(cj5);
IkReal x813=(sj5)*(sj5);
IkReal x814=((IkReal(2.00000000000000))*(cj5)*(sj5));
gconst20=IKsign(((((x813)*((r00)*(r00))))+(((x812)*((r11)*(r11))))+(((x812)*((r01)*(r01))))+(((x813)*((r10)*(r10))))+(((r10)*(r11)*(x814)))+(((r00)*(r01)*(x814)))));
IkReal x815=(cj5)*(cj5);
IkReal x816=(sj5)*(sj5);
IkReal x817=((IkReal(2.00000000000000))*(cj5)*(sj5));
dummyeval[0]=((((x815)*((r11)*(r11))))+(((r10)*(r11)*(x817)))+(((x816)*((r10)*(r10))))+(((r00)*(r01)*(x817)))+(((x816)*((r00)*(r00))))+(((x815)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst21;
IkReal x818=(cj5)*(cj5);
IkReal x819=(sj5)*(sj5);
IkReal x820=((IkReal(1.00000000000000))*(r10));
IkReal x821=((cj4)*(sj5));
IkReal x822=((r00)*(r11));
IkReal x823=((cj4)*(cj5));
IkReal x824=((sj4)*(x818));
IkReal x825=((sj4)*(x819));
gconst21=IKsign(((((r00)*(r12)*(x821)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x823)))+(((IkReal(-1.00000000000000))*(r01)*(x820)*(x824)))+(((IkReal(-1.00000000000000))*(r01)*(x820)*(x825)))+(((r01)*(r12)*(x823)))+(((IkReal(-1.00000000000000))*(r02)*(x820)*(x821)))+(((x822)*(x825)))+(((x822)*(x824)))));
IkReal x826=(cj5)*(cj5);
IkReal x827=(sj5)*(sj5);
IkReal x828=((IkReal(1.00000000000000))*(r10));
IkReal x829=((cj4)*(sj5));
IkReal x830=((r00)*(r11));
IkReal x831=((cj4)*(cj5));
IkReal x832=((sj4)*(x826));
IkReal x833=((sj4)*(x827));
dummyeval[0]=((((r00)*(r12)*(x829)))+(((r01)*(r12)*(x831)))+(((IkReal(-1.00000000000000))*(r01)*(x828)*(x832)))+(((IkReal(-1.00000000000000))*(r01)*(x828)*(x833)))+(((x830)*(x832)))+(((x830)*(x833)))+(((IkReal(-1.00000000000000))*(r02)*(x828)*(x829)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x831))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
gconst22=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x834=((IkReal(0.707109999985348))*(sj4));
IkReal x835=((r22)*(sj2));
IkReal x836=((cj5)*(r20));
IkReal x837=((r21)*(sj5));
IkReal x838=((IkReal(0.707109999985348))*(cj4));
IkReal x839=((cj2)*(r22));
IkReal x840=((IkReal(0.707103562373095))*(sj4));
IkReal x841=((IkReal(0.707103562373095))*(cj4));
IkReal x842=((sj2)*(x841));
if( IKabs(((gconst22)*(((((x838)*(x839)))+(((IkReal(-1.00000000000000))*(sj2)*(x836)*(x838)))+(((x839)*(x840)))+(((x835)*(x841)))+(((IkReal(-1.00000000000000))*(sj2)*(x836)*(x840)))+(((cj2)*(x834)*(x837)))+(((IkReal(-1.00000000000000))*(cj2)*(x837)*(x841)))+(((cj2)*(x836)*(x841)))+(((IkReal(-1.00000000000000))*(x834)*(x835)))+(((sj2)*(x837)*(x838)))+(((IkReal(-1.00000000000000))*(cj2)*(x834)*(x836)))+(((sj2)*(x837)*(x840))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((sj2)*(x834)*(x837)))+(((x835)*(x840)))+(((IkReal(-1.00000000000000))*(cj2)*(x837)*(x838)))+(((x835)*(x838)))+(((cj2)*(x836)*(x838)))+(((IkReal(-1.00000000000000))*(cj2)*(x837)*(x840)))+(((IkReal(-1.00000000000000))*(x837)*(x842)))+(((cj2)*(x836)*(x840)))+(((x836)*(x842)))+(((x834)*(x839)))+(((IkReal(-1.00000000000000))*(x839)*(x841)))+(((IkReal(-1.00000000000000))*(sj2)*(x834)*(x836))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst22)*(((((x838)*(x839)))+(((IkReal(-1.00000000000000))*(sj2)*(x836)*(x838)))+(((x839)*(x840)))+(((x835)*(x841)))+(((IkReal(-1.00000000000000))*(sj2)*(x836)*(x840)))+(((cj2)*(x834)*(x837)))+(((IkReal(-1.00000000000000))*(cj2)*(x837)*(x841)))+(((cj2)*(x836)*(x841)))+(((IkReal(-1.00000000000000))*(x834)*(x835)))+(((sj2)*(x837)*(x838)))+(((IkReal(-1.00000000000000))*(cj2)*(x834)*(x836)))+(((sj2)*(x837)*(x840)))))), ((gconst22)*(((((sj2)*(x834)*(x837)))+(((x835)*(x840)))+(((IkReal(-1.00000000000000))*(cj2)*(x837)*(x838)))+(((x835)*(x838)))+(((cj2)*(x836)*(x838)))+(((IkReal(-1.00000000000000))*(cj2)*(x837)*(x840)))+(((IkReal(-1.00000000000000))*(x837)*(x842)))+(((cj2)*(x836)*(x840)))+(((x836)*(x842)))+(((x834)*(x839)))+(((IkReal(-1.00000000000000))*(x839)*(x841)))+(((IkReal(-1.00000000000000))*(sj2)*(x834)*(x836)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[2];
IkReal x843=IKsin(j1);
IkReal x844=IKcos(j1);
IkReal x845=((cj5)*(r20));
IkReal x846=((r21)*(sj5));
IkReal x847=((IkReal(0.707103562373095))*(x843));
IkReal x848=((IkReal(0.707109999985348))*(x843));
IkReal x849=((IkReal(0.707103562373095))*(x844));
IkReal x850=((IkReal(0.707109999985348))*(x844));
evalcond[0]=((((cj4)*(r22)))+(((sj2)*(x850)))+(((sj4)*(x846)))+(((IkReal(-1.00000000000000))*(sj4)*(x845)))+(((sj2)*(x847)))+(((cj2)*(x848)))+(((IkReal(-1.00000000000000))*(cj2)*(x849))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj2)*(x848)))+(((IkReal(-1.00000000000000))*(cj4)*(x846)))+(((r22)*(sj4)))+(((cj2)*(x850)))+(((cj4)*(x845)))+(((sj2)*(x849)))+(((cj2)*(x847))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst23;
IkReal x851=(cj5)*(cj5);
IkReal x852=(sj5)*(sj5);
IkReal x853=((IkReal(2.00000000000000))*(cj5)*(sj5));
gconst23=IKsign(((((r00)*(r01)*(x853)))+(((x852)*((r10)*(r10))))+(((x851)*((r01)*(r01))))+(((r10)*(r11)*(x853)))+(((x851)*((r11)*(r11))))+(((x852)*((r00)*(r00))))));
IkReal x854=(cj5)*(cj5);
IkReal x855=(sj5)*(sj5);
IkReal x856=((IkReal(2.00000000000000))*(cj5)*(sj5));
dummyeval[0]=((((r00)*(r01)*(x856)))+(((x854)*((r11)*(r11))))+(((x855)*((r00)*(r00))))+(((x854)*((r01)*(r01))))+(((r10)*(r11)*(x856)))+(((x855)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst24;
IkReal x857=(cj5)*(cj5);
IkReal x858=(sj5)*(sj5);
IkReal x859=((IkReal(1.00000000000000))*(r10));
IkReal x860=((cj4)*(sj5));
IkReal x861=((r00)*(r11));
IkReal x862=((cj4)*(cj5));
IkReal x863=((sj4)*(x857));
IkReal x864=((sj4)*(x858));
gconst24=IKsign(((((IkReal(-1.00000000000000))*(r01)*(x859)*(x864)))+(((IkReal(-1.00000000000000))*(r01)*(x859)*(x863)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x862)))+(((IkReal(-1.00000000000000))*(r02)*(x859)*(x860)))+(((r01)*(r12)*(x862)))+(((x861)*(x863)))+(((x861)*(x864)))+(((r00)*(r12)*(x860)))));
IkReal x865=(cj5)*(cj5);
IkReal x866=(sj5)*(sj5);
IkReal x867=((IkReal(1.00000000000000))*(r10));
IkReal x868=((cj4)*(sj5));
IkReal x869=((r00)*(r11));
IkReal x870=((cj4)*(cj5));
IkReal x871=((sj4)*(x865));
IkReal x872=((sj4)*(x866));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(r11)*(x870)))+(((r01)*(r12)*(x870)))+(((x869)*(x871)))+(((x869)*(x872)))+(((r00)*(r12)*(x868)))+(((IkReal(-1.00000000000000))*(r01)*(x867)*(x871)))+(((IkReal(-1.00000000000000))*(r01)*(x867)*(x872)))+(((IkReal(-1.00000000000000))*(r02)*(x867)*(x868))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x873=((cj5)*(sj4));
IkReal x874=((IkReal(1.00000000000000))*(cj4));
IkReal x875=((IkReal(1.00000000000000))*(sj4)*(sj5));
if( IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(r12)*(x874)))+(((r10)*(x873)))+(((IkReal(-1.00000000000000))*(r11)*(x875))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst24)*(((((r00)*(x873)))+(((IkReal(-1.00000000000000))*(r01)*(x875)))+(((IkReal(-1.00000000000000))*(r02)*(x874))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst24)*(((((IkReal(-1.00000000000000))*(r12)*(x874)))+(((r10)*(x873)))+(((IkReal(-1.00000000000000))*(r11)*(x875)))))), ((gconst24)*(((((r00)*(x873)))+(((IkReal(-1.00000000000000))*(r01)*(x875)))+(((IkReal(-1.00000000000000))*(r02)*(x874)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[6];
IkReal x876=IKsin(j0);
IkReal x877=IKcos(j0);
IkReal x878=((IkReal(0.707103562373095))*(cj2));
IkReal x879=((cj5)*(sj4));
IkReal x880=((IkReal(1.00000000000000))*(sj4));
IkReal x881=((IkReal(1.00000000000000))*(r10));
IkReal x882=((IkReal(1.00000000000000))*(cj5));
IkReal x883=((IkReal(1.00000000000000))*(cj4));
IkReal x884=((sj1)*(sj2));
IkReal x885=((IkReal(0.707109999985348))*(cj1));
IkReal x886=((cj4)*(r11));
IkReal x887=((sj5)*(x876));
IkReal x888=((r10)*(x876));
IkReal x889=((r01)*(x877));
IkReal x890=((r00)*(x877));
IkReal x891=((r02)*(x877));
IkReal x892=((r12)*(x877));
IkReal x893=((cj5)*(x876));
IkReal x894=((r12)*(x876));
IkReal x895=((sj5)*(x877));
IkReal x896=((r02)*(x876));
evalcond[0]=((IkReal(1.00000000000000))+(((r00)*(x887)))+(((r01)*(x893)))+(((IkReal(-1.00000000000000))*(x881)*(x895)))+(((IkReal(-1.00000000000000))*(r11)*(x877)*(x882))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x883)*(x892)))+(((r10)*(x877)*(x879)))+(((r01)*(sj4)*(x887)))+(((IkReal(-1.00000000000000))*(r11)*(x880)*(x895)))+(((cj4)*(x896)))+(((IkReal(-1.00000000000000))*(r00)*(x876)*(x879))));
evalcond[2]=((((x886)*(x895)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x877)*(x881)))+(((sj4)*(x896)))+(((cj4)*(r00)*(x893)))+(((IkReal(-1.00000000000000))*(r01)*(x883)*(x887)))+(((IkReal(-1.00000000000000))*(x880)*(x892))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x882)*(x889)))+(((IkReal(-1.00000000000000))*(x881)*(x887)))+(((IkReal(-1.00000000000000))*(r11)*(x876)*(x882)))+(((IkReal(-1.00000000000000))*(sj5)*(x890))));
evalcond[4]=((((cj2)*(x885)))+(((x879)*(x888)))+(((IkReal(-1.00000000000000))*(x883)*(x891)))+(((IkReal(-1.00000000000000))*(x883)*(x894)))+(((x879)*(x890)))+(((IkReal(0.707103562373095))*(cj1)*(sj2)))+(((IkReal(-1.00000000000000))*(r11)*(x880)*(x887)))+(((sj1)*(x878)))+(((IkReal(-0.707109999985348))*(x884)))+(((IkReal(-1.00000000000000))*(sj5)*(x880)*(x889))));
evalcond[5]=((((x886)*(x887)))+(((IkReal(-1.00000000000000))*(cj4)*(x882)*(x890)))+(((IkReal(-0.707109999985348))*(cj2)*(sj1)))+(((IkReal(-1.00000000000000))*(cj4)*(x881)*(x893)))+(((cj4)*(sj5)*(x889)))+(((cj1)*(x878)))+(((IkReal(-1.00000000000000))*(sj2)*(x885)))+(((IkReal(-1.00000000000000))*(x880)*(x894)))+(((IkReal(-1.00000000000000))*(x880)*(x891)))+(((IkReal(-0.707103562373095))*(x884))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst23)*(((((IkReal(-1.00000000000000))*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst23)*(((((cj5)*(r11)))+(((r10)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst23)*(((((IkReal(-1.00000000000000))*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)))))), ((gconst23)*(((((cj5)*(r11)))+(((r10)*(sj5)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[6];
IkReal x897=IKsin(j0);
IkReal x898=IKcos(j0);
IkReal x899=((IkReal(0.707103562373095))*(cj2));
IkReal x900=((cj5)*(sj4));
IkReal x901=((IkReal(1.00000000000000))*(sj4));
IkReal x902=((IkReal(1.00000000000000))*(r10));
IkReal x903=((IkReal(1.00000000000000))*(cj5));
IkReal x904=((IkReal(1.00000000000000))*(cj4));
IkReal x905=((sj1)*(sj2));
IkReal x906=((IkReal(0.707109999985348))*(cj1));
IkReal x907=((cj4)*(r11));
IkReal x908=((sj5)*(x897));
IkReal x909=((r10)*(x897));
IkReal x910=((r01)*(x898));
IkReal x911=((r00)*(x898));
IkReal x912=((r02)*(x898));
IkReal x913=((r12)*(x898));
IkReal x914=((cj5)*(x897));
IkReal x915=((r12)*(x897));
IkReal x916=((sj5)*(x898));
IkReal x917=((r02)*(x897));
evalcond[0]=((IkReal(1.00000000000000))+(((r00)*(x908)))+(((IkReal(-1.00000000000000))*(r11)*(x898)*(x903)))+(((IkReal(-1.00000000000000))*(x902)*(x916)))+(((r01)*(x914))));
evalcond[1]=((((r01)*(sj4)*(x908)))+(((r10)*(x898)*(x900)))+(((cj4)*(x917)))+(((IkReal(-1.00000000000000))*(x904)*(x913)))+(((IkReal(-1.00000000000000))*(r11)*(x901)*(x916)))+(((IkReal(-1.00000000000000))*(r00)*(x897)*(x900))));
evalcond[2]=((((x907)*(x916)))+(((IkReal(-1.00000000000000))*(r01)*(x904)*(x908)))+(((cj4)*(r00)*(x914)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x898)*(x902)))+(((sj4)*(x917)))+(((IkReal(-1.00000000000000))*(x901)*(x913))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x902)*(x908)))+(((IkReal(-1.00000000000000))*(sj5)*(x911)))+(((IkReal(-1.00000000000000))*(r11)*(x897)*(x903)))+(((IkReal(-1.00000000000000))*(x903)*(x910))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj5)*(x901)*(x910)))+(((sj1)*(x899)))+(((IkReal(-0.707109999985348))*(x905)))+(((cj2)*(x906)))+(((IkReal(0.707103562373095))*(cj1)*(sj2)))+(((x900)*(x909)))+(((x900)*(x911)))+(((IkReal(-1.00000000000000))*(x904)*(x912)))+(((IkReal(-1.00000000000000))*(x904)*(x915)))+(((IkReal(-1.00000000000000))*(r11)*(x901)*(x908))));
evalcond[5]=((((cj4)*(sj5)*(x910)))+(((IkReal(-0.707109999985348))*(cj2)*(sj1)))+(((x907)*(x908)))+(((IkReal(-1.00000000000000))*(sj2)*(x906)))+(((IkReal(-0.707103562373095))*(x905)))+(((cj1)*(x899)))+(((IkReal(-1.00000000000000))*(cj4)*(x902)*(x914)))+(((IkReal(-1.00000000000000))*(cj4)*(x903)*(x911)))+(((IkReal(-1.00000000000000))*(x901)*(x915)))+(((IkReal(-1.00000000000000))*(x901)*(x912))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x918=((IkReal(1.00000000000000))*(cj4));
IkReal x919=((cj5)*(sj4));
IkReal x920=((IkReal(1.00000000000000))*(sj4)*(sj5));
if( IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(r11)*(x920)))+(((r10)*(x919)))+(((IkReal(-1.00000000000000))*(r12)*(x918))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(r02)*(x918)))+(((IkReal(-1.00000000000000))*(r01)*(x920)))+(((r00)*(x919))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst21)*(((((IkReal(-1.00000000000000))*(r11)*(x920)))+(((r10)*(x919)))+(((IkReal(-1.00000000000000))*(r12)*(x918)))))), ((gconst21)*(((((IkReal(-1.00000000000000))*(r02)*(x918)))+(((IkReal(-1.00000000000000))*(r01)*(x920)))+(((r00)*(x919)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x921=IKsin(j0);
IkReal x922=IKcos(j0);
IkReal x923=((IkReal(1.00000000000000))*(cj5));
IkReal x924=((r01)*(sj5));
IkReal x925=((IkReal(1.00000000000000))*(r12));
IkReal x926=((r11)*(sj5));
IkReal x927=((IkReal(1.00000000000000))*(r10));
IkReal x928=((cj4)*(x921));
IkReal x929=((sj4)*(x921));
IkReal x930=((sj4)*(x922));
IkReal x931=((sj5)*(x921));
IkReal x932=((cj4)*(x922));
IkReal x933=((sj5)*(x922));
evalcond[0]=((IkReal(1.00000000000000))+(((cj5)*(r01)*(x921)))+(((IkReal(-1.00000000000000))*(r11)*(x922)*(x923)))+(((IkReal(-1.00000000000000))*(x927)*(x933)))+(((r00)*(x931))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x925)*(x932)))+(((x924)*(x929)))+(((IkReal(-1.00000000000000))*(r00)*(x923)*(x929)))+(((cj5)*(r10)*(x930)))+(((IkReal(-1.00000000000000))*(x926)*(x930)))+(((r02)*(x928))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x925)*(x930)))+(((cj5)*(r00)*(x928)))+(((IkReal(-1.00000000000000))*(r10)*(x923)*(x932)))+(((x926)*(x932)))+(((r02)*(x929)))+(((IkReal(-1.00000000000000))*(x924)*(x928))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x922)*(x923)))+(((IkReal(-1.00000000000000))*(r11)*(x921)*(x923)))+(((IkReal(-1.00000000000000))*(x927)*(x931)))+(((IkReal(-1.00000000000000))*(r00)*(x933))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst25;
gconst25=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst26;
gconst26=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x934=((sj4)*(sj5));
IkReal x935=((IkReal(0.707103562373095))*(sj0));
IkReal x936=((r11)*(sj2));
IkReal x937=((cj2)*(cj4));
IkReal x938=((IkReal(0.707103562373095))*(r22));
IkReal x939=((IkReal(0.707109999985348))*(cj0));
IkReal x940=((cj2)*(r01));
IkReal x941=((IkReal(0.707109999985348))*(cj2));
IkReal x942=((IkReal(0.707109999985348))*(sj0));
IkReal x943=((r21)*(sj2));
IkReal x944=((IkReal(0.707103562373095))*(cj2));
IkReal x945=((IkReal(0.707103562373095))*(sj2));
IkReal x946=((cj5)*(sj4));
IkReal x947=((r10)*(sj2));
IkReal x948=((cj0)*(r00));
IkReal x949=((IkReal(0.707103562373095))*(cj0));
IkReal x950=((cj4)*(sj2));
IkReal x951=((IkReal(0.707109999985348))*(r22));
IkReal x952=((r02)*(x950));
IkReal x953=((r20)*(x946));
if( IKabs(((gconst26)*(((((r01)*(sj2)*(x934)*(x939)))+(((IkReal(-1.00000000000000))*(x942)*(x946)*(x947)))+(((x934)*(x936)*(x942)))+(((IkReal(-1.00000000000000))*(cj2)*(r11)*(x934)*(x935)))+(((r12)*(x942)*(x950)))+(((IkReal(-1.00000000000000))*(r12)*(x935)*(x937)))+(((IkReal(-1.00000000000000))*(x941)*(x953)))+(((x944)*(x946)*(x948)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x939)*(x946)))+(((IkReal(0.707103562373095))*(x934)*(x943)))+(((cj2)*(r10)*(x935)*(x946)))+(((IkReal(-1.00000000000000))*(x945)*(x953)))+(((x938)*(x950)))+(((r21)*(x934)*(x941)))+(((x939)*(x952)))+(((IkReal(-1.00000000000000))*(r02)*(x937)*(x949)))+(((IkReal(-1.00000000000000))*(x934)*(x940)*(x949)))+(((x937)*(x951))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst26)*(((((IkReal(-1.00000000000000))*(r21)*(x934)*(x944)))+(((x945)*(x946)*(x948)))+(((x944)*(x953)))+(((cj2)*(r00)*(x939)*(x946)))+(((IkReal(-1.00000000000000))*(cj0)*(cj4)*(r02)*(x945)))+(((IkReal(-1.00000000000000))*(x934)*(x935)*(x936)))+(((IkReal(0.707109999985348))*(x934)*(x943)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x934)*(x941)))+(((IkReal(-1.00000000000000))*(x934)*(x939)*(x940)))+(((IkReal(-1.00000000000000))*(r12)*(x937)*(x942)))+(((r10)*(sj0)*(x941)*(x946)))+(((IkReal(-0.707109999985348))*(sj2)*(x953)))+(((x935)*(x946)*(x947)))+(((IkReal(-1.00000000000000))*(x937)*(x938)))+(((x950)*(x951)))+(((IkReal(-1.00000000000000))*(r02)*(x937)*(x939)))+(((IkReal(-1.00000000000000))*(r12)*(x935)*(x950)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x934)*(x945))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst26)*(((((r01)*(sj2)*(x934)*(x939)))+(((IkReal(-1.00000000000000))*(x942)*(x946)*(x947)))+(((x934)*(x936)*(x942)))+(((IkReal(-1.00000000000000))*(cj2)*(r11)*(x934)*(x935)))+(((r12)*(x942)*(x950)))+(((IkReal(-1.00000000000000))*(r12)*(x935)*(x937)))+(((IkReal(-1.00000000000000))*(x941)*(x953)))+(((x944)*(x946)*(x948)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x939)*(x946)))+(((IkReal(0.707103562373095))*(x934)*(x943)))+(((cj2)*(r10)*(x935)*(x946)))+(((IkReal(-1.00000000000000))*(x945)*(x953)))+(((x938)*(x950)))+(((r21)*(x934)*(x941)))+(((x939)*(x952)))+(((IkReal(-1.00000000000000))*(r02)*(x937)*(x949)))+(((IkReal(-1.00000000000000))*(x934)*(x940)*(x949)))+(((x937)*(x951)))))), ((gconst26)*(((((IkReal(-1.00000000000000))*(r21)*(x934)*(x944)))+(((x945)*(x946)*(x948)))+(((x944)*(x953)))+(((cj2)*(r00)*(x939)*(x946)))+(((IkReal(-1.00000000000000))*(cj0)*(cj4)*(r02)*(x945)))+(((IkReal(-1.00000000000000))*(x934)*(x935)*(x936)))+(((IkReal(0.707109999985348))*(x934)*(x943)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x934)*(x941)))+(((IkReal(-1.00000000000000))*(x934)*(x939)*(x940)))+(((IkReal(-1.00000000000000))*(r12)*(x937)*(x942)))+(((r10)*(sj0)*(x941)*(x946)))+(((IkReal(-0.707109999985348))*(sj2)*(x953)))+(((x935)*(x946)*(x947)))+(((IkReal(-1.00000000000000))*(x937)*(x938)))+(((x950)*(x951)))+(((IkReal(-1.00000000000000))*(r02)*(x937)*(x939)))+(((IkReal(-1.00000000000000))*(r12)*(x935)*(x950)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x934)*(x945)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x954=IKsin(j1);
IkReal x955=IKcos(j1);
IkReal x956=((IkReal(0.707109999985348))*(cj2));
IkReal x957=((IkReal(1.00000000000000))*(sj4));
IkReal x958=((cj5)*(r00));
IkReal x959=((IkReal(0.707109999985348))*(sj2));
IkReal x960=((cj5)*(r20));
IkReal x961=((r12)*(sj0));
IkReal x962=((r21)*(sj5));
IkReal x963=((IkReal(1.00000000000000))*(cj4));
IkReal x964=((IkReal(0.707103562373095))*(x955));
IkReal x965=((r11)*(sj0)*(sj5));
IkReal x966=((cj0)*(x963));
IkReal x967=((IkReal(0.707103562373095))*(x954));
IkReal x968=((cj0)*(r01)*(sj5));
IkReal x969=((cj5)*(r10)*(sj0));
IkReal x970=((sj2)*(x964));
IkReal x971=((cj2)*(x967));
IkReal x972=((x955)*(x956));
IkReal x973=((x954)*(x959));
IkReal x974=((cj2)*(x964));
IkReal x975=((x954)*(x956));
IkReal x976=((sj2)*(x967));
IkReal x977=((x955)*(x959));
IkReal x978=((x971)+(x970)+(x972));
IkReal x979=((x975)+(x977)+(x976));
evalcond[0]=((((cj4)*(r22)))+(((sj4)*(x962)))+(((IkReal(-1.00000000000000))*(x957)*(x960)))+(x979)+(((IkReal(-1.00000000000000))*(x974))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x962)*(x963)))+(((r22)*(sj4)))+(x978)+(((IkReal(-1.00000000000000))*(x973)))+(((cj4)*(x960))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x961)*(x963)))+(((sj4)*(x969)))+(((IkReal(-1.00000000000000))*(x957)*(x968)))+(((IkReal(-1.00000000000000))*(x957)*(x965)))+(((cj0)*(sj4)*(x958)))+(x978)+(((IkReal(-1.00000000000000))*(x973)))+(((IkReal(-1.00000000000000))*(r02)*(x966))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x963)*(x969)))+(((IkReal(-1.00000000000000))*(cj0)*(r02)*(x957)))+(((IkReal(-1.00000000000000))*(x958)*(x966)))+(((IkReal(-1.00000000000000))*(x957)*(x961)))+(x974)+(((IkReal(-1.00000000000000))*(x979)))+(((cj4)*(x965)))+(((cj4)*(x968))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x980=((IkReal(0.707109999985348))*(sj4));
IkReal x981=((r22)*(sj2));
IkReal x982=((cj5)*(r20));
IkReal x983=((r21)*(sj5));
IkReal x984=((IkReal(0.707109999985348))*(cj4));
IkReal x985=((cj2)*(r22));
IkReal x986=((IkReal(0.707103562373095))*(sj4));
IkReal x987=((IkReal(0.707103562373095))*(cj4));
IkReal x988=((sj2)*(x987));
IkReal x989=((cj2)*(x987));
if( IKabs(((gconst25)*(((((x981)*(x987)))+(((IkReal(-1.00000000000000))*(cj2)*(x980)*(x982)))+(((x982)*(x989)))+(((cj2)*(x980)*(x983)))+(((IkReal(-1.00000000000000))*(sj2)*(x982)*(x984)))+(((IkReal(-1.00000000000000))*(sj2)*(x982)*(x986)))+(((IkReal(-1.00000000000000))*(x980)*(x981)))+(((x984)*(x985)))+(((x985)*(x986)))+(((IkReal(-1.00000000000000))*(x983)*(x989)))+(((sj2)*(x983)*(x986)))+(((sj2)*(x983)*(x984))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst25)*(((((x981)*(x986)))+(((x981)*(x984)))+(((IkReal(-1.00000000000000))*(sj2)*(x980)*(x982)))+(((cj2)*(x982)*(x986)))+(((cj2)*(x982)*(x984)))+(((IkReal(-1.00000000000000))*(cj2)*(x983)*(x986)))+(((IkReal(-1.00000000000000))*(cj2)*(x983)*(x984)))+(((x982)*(x988)))+(((sj2)*(x980)*(x983)))+(((x980)*(x985)))+(((IkReal(-1.00000000000000))*(x985)*(x987)))+(((IkReal(-1.00000000000000))*(x983)*(x988))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst25)*(((((x981)*(x987)))+(((IkReal(-1.00000000000000))*(cj2)*(x980)*(x982)))+(((x982)*(x989)))+(((cj2)*(x980)*(x983)))+(((IkReal(-1.00000000000000))*(sj2)*(x982)*(x984)))+(((IkReal(-1.00000000000000))*(sj2)*(x982)*(x986)))+(((IkReal(-1.00000000000000))*(x980)*(x981)))+(((x984)*(x985)))+(((x985)*(x986)))+(((IkReal(-1.00000000000000))*(x983)*(x989)))+(((sj2)*(x983)*(x986)))+(((sj2)*(x983)*(x984)))))), ((gconst25)*(((((x981)*(x986)))+(((x981)*(x984)))+(((IkReal(-1.00000000000000))*(sj2)*(x980)*(x982)))+(((cj2)*(x982)*(x986)))+(((cj2)*(x982)*(x984)))+(((IkReal(-1.00000000000000))*(cj2)*(x983)*(x986)))+(((IkReal(-1.00000000000000))*(cj2)*(x983)*(x984)))+(((x982)*(x988)))+(((sj2)*(x980)*(x983)))+(((x980)*(x985)))+(((IkReal(-1.00000000000000))*(x985)*(x987)))+(((IkReal(-1.00000000000000))*(x983)*(x988)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x990=IKsin(j1);
IkReal x991=IKcos(j1);
IkReal x992=((IkReal(0.707109999985348))*(cj2));
IkReal x993=((IkReal(1.00000000000000))*(sj4));
IkReal x994=((cj5)*(r00));
IkReal x995=((IkReal(0.707109999985348))*(sj2));
IkReal x996=((cj5)*(r20));
IkReal x997=((r12)*(sj0));
IkReal x998=((r21)*(sj5));
IkReal x999=((IkReal(1.00000000000000))*(cj4));
IkReal x1000=((IkReal(0.707103562373095))*(x991));
IkReal x1001=((r11)*(sj0)*(sj5));
IkReal x1002=((cj0)*(x999));
IkReal x1003=((IkReal(0.707103562373095))*(x990));
IkReal x1004=((cj0)*(r01)*(sj5));
IkReal x1005=((cj5)*(r10)*(sj0));
IkReal x1006=((sj2)*(x1000));
IkReal x1007=((cj2)*(x1003));
IkReal x1008=((x991)*(x992));
IkReal x1009=((x990)*(x995));
IkReal x1010=((cj2)*(x1000));
IkReal x1011=((x990)*(x992));
IkReal x1012=((sj2)*(x1003));
IkReal x1013=((x991)*(x995));
IkReal x1014=((x1008)+(x1007)+(x1006));
IkReal x1015=((x1011)+(x1012)+(x1013));
evalcond[0]=((((sj4)*(x998)))+(((cj4)*(r22)))+(x1015)+(((IkReal(-1.00000000000000))*(x1010)))+(((IkReal(-1.00000000000000))*(x993)*(x996))));
evalcond[1]=((x1014)+(((IkReal(-1.00000000000000))*(x1009)))+(((cj4)*(x996)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(x998)*(x999))));
evalcond[2]=((((sj4)*(x1005)))+(x1014)+(((IkReal(-1.00000000000000))*(x1009)))+(((IkReal(-1.00000000000000))*(x997)*(x999)))+(((IkReal(-1.00000000000000))*(r02)*(x1002)))+(((IkReal(-1.00000000000000))*(x1001)*(x993)))+(((IkReal(-1.00000000000000))*(x1004)*(x993)))+(((cj0)*(sj4)*(x994))));
evalcond[3]=((x1010)+(((IkReal(-1.00000000000000))*(x1002)*(x994)))+(((IkReal(-1.00000000000000))*(x1015)))+(((cj4)*(x1004)))+(((cj4)*(x1001)))+(((IkReal(-1.00000000000000))*(cj0)*(r02)*(x993)))+(((IkReal(-1.00000000000000))*(x1005)*(x999)))+(((IkReal(-1.00000000000000))*(x993)*(x997))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(((((cj5)*(r11)))+(((r10)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst20)*(((((IkReal(-1.00000000000000))*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)))))), ((gconst20)*(((((cj5)*(r11)))+(((r10)*(sj5)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1016=IKsin(j0);
IkReal x1017=IKcos(j0);
IkReal x1018=((IkReal(1.00000000000000))*(cj5));
IkReal x1019=((r01)*(sj5));
IkReal x1020=((IkReal(1.00000000000000))*(r12));
IkReal x1021=((r11)*(sj5));
IkReal x1022=((IkReal(1.00000000000000))*(r10));
IkReal x1023=((cj4)*(x1016));
IkReal x1024=((sj4)*(x1016));
IkReal x1025=((sj4)*(x1017));
IkReal x1026=((sj5)*(x1016));
IkReal x1027=((cj4)*(x1017));
IkReal x1028=((sj5)*(x1017));
evalcond[0]=((IkReal(1.00000000000000))+(((cj5)*(r01)*(x1016)))+(((IkReal(-1.00000000000000))*(x1022)*(x1028)))+(((IkReal(-1.00000000000000))*(r11)*(x1017)*(x1018)))+(((r00)*(x1026))));
evalcond[1]=((((cj5)*(r10)*(x1025)))+(((IkReal(-1.00000000000000))*(x1020)*(x1027)))+(((IkReal(-1.00000000000000))*(x1021)*(x1025)))+(((x1019)*(x1024)))+(((r02)*(x1023)))+(((IkReal(-1.00000000000000))*(r00)*(x1018)*(x1024))));
evalcond[2]=((((cj5)*(r00)*(x1023)))+(((IkReal(-1.00000000000000))*(x1019)*(x1023)))+(((IkReal(-1.00000000000000))*(x1020)*(x1025)))+(((x1021)*(x1027)))+(((r02)*(x1024)))+(((IkReal(-1.00000000000000))*(r10)*(x1018)*(x1027))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x1017)*(x1018)))+(((IkReal(-1.00000000000000))*(x1022)*(x1026)))+(((IkReal(-1.00000000000000))*(r00)*(x1028)))+(((IkReal(-1.00000000000000))*(r11)*(x1016)*(x1018))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst25;
gconst25=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst26;
gconst26=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1029=((sj4)*(sj5));
IkReal x1030=((IkReal(0.707103562373095))*(sj0));
IkReal x1031=((r11)*(sj2));
IkReal x1032=((cj2)*(cj4));
IkReal x1033=((IkReal(0.707103562373095))*(r22));
IkReal x1034=((IkReal(0.707109999985348))*(cj0));
IkReal x1035=((cj2)*(r01));
IkReal x1036=((IkReal(0.707109999985348))*(cj2));
IkReal x1037=((IkReal(0.707109999985348))*(sj0));
IkReal x1038=((r21)*(sj2));
IkReal x1039=((IkReal(0.707103562373095))*(cj2));
IkReal x1040=((IkReal(0.707103562373095))*(sj2));
IkReal x1041=((cj5)*(sj4));
IkReal x1042=((r10)*(sj2));
IkReal x1043=((cj0)*(r00));
IkReal x1044=((IkReal(0.707103562373095))*(cj0));
IkReal x1045=((cj4)*(sj2));
IkReal x1046=((IkReal(0.707109999985348))*(r22));
IkReal x1047=((r02)*(x1045));
IkReal x1048=((r20)*(x1041));
if( IKabs(((gconst26)*(((((IkReal(-1.00000000000000))*(x1037)*(x1041)*(x1042)))+(((x1034)*(x1047)))+(((r01)*(sj2)*(x1029)*(x1034)))+(((x1029)*(x1031)*(x1037)))+(((r21)*(x1029)*(x1036)))+(((IkReal(-1.00000000000000))*(r12)*(x1030)*(x1032)))+(((IkReal(0.707103562373095))*(x1029)*(x1038)))+(((IkReal(-1.00000000000000))*(x1029)*(x1035)*(x1044)))+(((IkReal(-1.00000000000000))*(r02)*(x1032)*(x1044)))+(((r12)*(x1037)*(x1045)))+(((x1039)*(x1041)*(x1043)))+(((cj2)*(r10)*(x1030)*(x1041)))+(((IkReal(-1.00000000000000))*(cj2)*(r11)*(x1029)*(x1030)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x1034)*(x1041)))+(((x1032)*(x1046)))+(((IkReal(-1.00000000000000))*(x1040)*(x1048)))+(((IkReal(-1.00000000000000))*(x1036)*(x1048)))+(((x1033)*(x1045))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst26)*(((((IkReal(-1.00000000000000))*(cj0)*(r01)*(x1029)*(x1040)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x1029)*(x1036)))+(((x1030)*(x1041)*(x1042)))+(((IkReal(-1.00000000000000))*(x1032)*(x1033)))+(((IkReal(-1.00000000000000))*(r12)*(x1032)*(x1037)))+(((IkReal(-1.00000000000000))*(x1029)*(x1034)*(x1035)))+(((cj2)*(r00)*(x1034)*(x1041)))+(((IkReal(-1.00000000000000))*(r21)*(x1029)*(x1039)))+(((x1039)*(x1048)))+(((IkReal(-1.00000000000000))*(r12)*(x1030)*(x1045)))+(((IkReal(-1.00000000000000))*(cj0)*(cj4)*(r02)*(x1040)))+(((r10)*(sj0)*(x1036)*(x1041)))+(((IkReal(0.707109999985348))*(x1029)*(x1038)))+(((IkReal(-1.00000000000000))*(x1029)*(x1030)*(x1031)))+(((IkReal(-1.00000000000000))*(r02)*(x1032)*(x1034)))+(((x1045)*(x1046)))+(((IkReal(-0.707109999985348))*(sj2)*(x1048)))+(((x1040)*(x1041)*(x1043))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst26)*(((((IkReal(-1.00000000000000))*(x1037)*(x1041)*(x1042)))+(((x1034)*(x1047)))+(((r01)*(sj2)*(x1029)*(x1034)))+(((x1029)*(x1031)*(x1037)))+(((r21)*(x1029)*(x1036)))+(((IkReal(-1.00000000000000))*(r12)*(x1030)*(x1032)))+(((IkReal(0.707103562373095))*(x1029)*(x1038)))+(((IkReal(-1.00000000000000))*(x1029)*(x1035)*(x1044)))+(((IkReal(-1.00000000000000))*(r02)*(x1032)*(x1044)))+(((r12)*(x1037)*(x1045)))+(((x1039)*(x1041)*(x1043)))+(((cj2)*(r10)*(x1030)*(x1041)))+(((IkReal(-1.00000000000000))*(cj2)*(r11)*(x1029)*(x1030)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x1034)*(x1041)))+(((x1032)*(x1046)))+(((IkReal(-1.00000000000000))*(x1040)*(x1048)))+(((IkReal(-1.00000000000000))*(x1036)*(x1048)))+(((x1033)*(x1045)))))), ((gconst26)*(((((IkReal(-1.00000000000000))*(cj0)*(r01)*(x1029)*(x1040)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x1029)*(x1036)))+(((x1030)*(x1041)*(x1042)))+(((IkReal(-1.00000000000000))*(x1032)*(x1033)))+(((IkReal(-1.00000000000000))*(r12)*(x1032)*(x1037)))+(((IkReal(-1.00000000000000))*(x1029)*(x1034)*(x1035)))+(((cj2)*(r00)*(x1034)*(x1041)))+(((IkReal(-1.00000000000000))*(r21)*(x1029)*(x1039)))+(((x1039)*(x1048)))+(((IkReal(-1.00000000000000))*(r12)*(x1030)*(x1045)))+(((IkReal(-1.00000000000000))*(cj0)*(cj4)*(r02)*(x1040)))+(((r10)*(sj0)*(x1036)*(x1041)))+(((IkReal(0.707109999985348))*(x1029)*(x1038)))+(((IkReal(-1.00000000000000))*(x1029)*(x1030)*(x1031)))+(((IkReal(-1.00000000000000))*(r02)*(x1032)*(x1034)))+(((x1045)*(x1046)))+(((IkReal(-0.707109999985348))*(sj2)*(x1048)))+(((x1040)*(x1041)*(x1043)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1049=IKsin(j1);
IkReal x1050=IKcos(j1);
IkReal x1051=((IkReal(0.707109999985348))*(cj2));
IkReal x1052=((IkReal(1.00000000000000))*(sj4));
IkReal x1053=((cj5)*(r00));
IkReal x1054=((IkReal(0.707109999985348))*(sj2));
IkReal x1055=((cj5)*(r20));
IkReal x1056=((r12)*(sj0));
IkReal x1057=((r21)*(sj5));
IkReal x1058=((IkReal(1.00000000000000))*(cj4));
IkReal x1059=((IkReal(0.707103562373095))*(x1050));
IkReal x1060=((r11)*(sj0)*(sj5));
IkReal x1061=((cj0)*(x1058));
IkReal x1062=((IkReal(0.707103562373095))*(x1049));
IkReal x1063=((cj0)*(r01)*(sj5));
IkReal x1064=((cj5)*(r10)*(sj0));
IkReal x1065=((sj2)*(x1059));
IkReal x1066=((cj2)*(x1062));
IkReal x1067=((x1050)*(x1051));
IkReal x1068=((x1049)*(x1054));
IkReal x1069=((cj2)*(x1059));
IkReal x1070=((x1049)*(x1051));
IkReal x1071=((sj2)*(x1062));
IkReal x1072=((x1050)*(x1054));
IkReal x1073=((x1065)+(x1067)+(x1066));
IkReal x1074=((x1072)+(x1070)+(x1071));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1052)*(x1055)))+(((cj4)*(r22)))+(x1074)+(((IkReal(-1.00000000000000))*(x1069)))+(((sj4)*(x1057))));
evalcond[1]=((x1073)+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(x1057)*(x1058)))+(((IkReal(-1.00000000000000))*(x1068)))+(((cj4)*(x1055))));
evalcond[2]=((((cj0)*(sj4)*(x1053)))+(x1073)+(((IkReal(-1.00000000000000))*(r02)*(x1061)))+(((IkReal(-1.00000000000000))*(x1056)*(x1058)))+(((IkReal(-1.00000000000000))*(x1052)*(x1063)))+(((IkReal(-1.00000000000000))*(x1052)*(x1060)))+(((sj4)*(x1064)))+(((IkReal(-1.00000000000000))*(x1068))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1052)*(x1056)))+(x1069)+(((IkReal(-1.00000000000000))*(cj0)*(r02)*(x1052)))+(((IkReal(-1.00000000000000))*(x1058)*(x1064)))+(((cj4)*(x1063)))+(((cj4)*(x1060)))+(((IkReal(-1.00000000000000))*(x1074)))+(((IkReal(-1.00000000000000))*(x1053)*(x1061))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1075=((IkReal(0.707109999985348))*(sj4));
IkReal x1076=((r22)*(sj2));
IkReal x1077=((cj5)*(r20));
IkReal x1078=((r21)*(sj5));
IkReal x1079=((IkReal(0.707109999985348))*(cj4));
IkReal x1080=((cj2)*(r22));
IkReal x1081=((IkReal(0.707103562373095))*(sj4));
IkReal x1082=((IkReal(0.707103562373095))*(cj4));
IkReal x1083=((sj2)*(x1082));
IkReal x1084=((cj2)*(x1082));
if( IKabs(((gconst25)*(((((x1079)*(x1080)))+(((IkReal(-1.00000000000000))*(x1075)*(x1076)))+(((sj2)*(x1078)*(x1081)))+(((x1076)*(x1082)))+(((sj2)*(x1078)*(x1079)))+(((IkReal(-1.00000000000000))*(sj2)*(x1077)*(x1081)))+(((IkReal(-1.00000000000000))*(x1078)*(x1084)))+(((cj2)*(x1075)*(x1078)))+(((IkReal(-1.00000000000000))*(cj2)*(x1075)*(x1077)))+(((x1080)*(x1081)))+(((x1077)*(x1084)))+(((IkReal(-1.00000000000000))*(sj2)*(x1077)*(x1079))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst25)*(((((x1076)*(x1081)))+(((IkReal(-1.00000000000000))*(cj2)*(x1078)*(x1079)))+(((IkReal(-1.00000000000000))*(cj2)*(x1078)*(x1081)))+(((cj2)*(x1077)*(x1081)))+(((IkReal(-1.00000000000000))*(x1078)*(x1083)))+(((sj2)*(x1075)*(x1078)))+(((x1075)*(x1080)))+(((IkReal(-1.00000000000000))*(x1080)*(x1082)))+(((cj2)*(x1077)*(x1079)))+(((x1076)*(x1079)))+(((x1077)*(x1083)))+(((IkReal(-1.00000000000000))*(sj2)*(x1075)*(x1077))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst25)*(((((x1079)*(x1080)))+(((IkReal(-1.00000000000000))*(x1075)*(x1076)))+(((sj2)*(x1078)*(x1081)))+(((x1076)*(x1082)))+(((sj2)*(x1078)*(x1079)))+(((IkReal(-1.00000000000000))*(sj2)*(x1077)*(x1081)))+(((IkReal(-1.00000000000000))*(x1078)*(x1084)))+(((cj2)*(x1075)*(x1078)))+(((IkReal(-1.00000000000000))*(cj2)*(x1075)*(x1077)))+(((x1080)*(x1081)))+(((x1077)*(x1084)))+(((IkReal(-1.00000000000000))*(sj2)*(x1077)*(x1079)))))), ((gconst25)*(((((x1076)*(x1081)))+(((IkReal(-1.00000000000000))*(cj2)*(x1078)*(x1079)))+(((IkReal(-1.00000000000000))*(cj2)*(x1078)*(x1081)))+(((cj2)*(x1077)*(x1081)))+(((IkReal(-1.00000000000000))*(x1078)*(x1083)))+(((sj2)*(x1075)*(x1078)))+(((x1075)*(x1080)))+(((IkReal(-1.00000000000000))*(x1080)*(x1082)))+(((cj2)*(x1077)*(x1079)))+(((x1076)*(x1079)))+(((x1077)*(x1083)))+(((IkReal(-1.00000000000000))*(sj2)*(x1075)*(x1077)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1085=IKsin(j1);
IkReal x1086=IKcos(j1);
IkReal x1087=((IkReal(0.707109999985348))*(cj2));
IkReal x1088=((IkReal(1.00000000000000))*(sj4));
IkReal x1089=((cj5)*(r00));
IkReal x1090=((IkReal(0.707109999985348))*(sj2));
IkReal x1091=((cj5)*(r20));
IkReal x1092=((r12)*(sj0));
IkReal x1093=((r21)*(sj5));
IkReal x1094=((IkReal(1.00000000000000))*(cj4));
IkReal x1095=((IkReal(0.707103562373095))*(x1086));
IkReal x1096=((r11)*(sj0)*(sj5));
IkReal x1097=((cj0)*(x1094));
IkReal x1098=((IkReal(0.707103562373095))*(x1085));
IkReal x1099=((cj0)*(r01)*(sj5));
IkReal x1100=((cj5)*(r10)*(sj0));
IkReal x1101=((sj2)*(x1095));
IkReal x1102=((cj2)*(x1098));
IkReal x1103=((x1086)*(x1087));
IkReal x1104=((x1085)*(x1090));
IkReal x1105=((cj2)*(x1095));
IkReal x1106=((x1085)*(x1087));
IkReal x1107=((sj2)*(x1098));
IkReal x1108=((x1086)*(x1090));
IkReal x1109=((x1102)+(x1103)+(x1101));
IkReal x1110=((x1106)+(x1107)+(x1108));
evalcond[0]=((x1110)+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x1088)*(x1091)))+(((sj4)*(x1093)))+(((IkReal(-1.00000000000000))*(x1105))));
evalcond[1]=((x1109)+(((cj4)*(x1091)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(x1093)*(x1094)))+(((IkReal(-1.00000000000000))*(x1104))));
evalcond[2]=((((cj0)*(sj4)*(x1089)))+(x1109)+(((IkReal(-1.00000000000000))*(x1088)*(x1096)))+(((IkReal(-1.00000000000000))*(x1088)*(x1099)))+(((IkReal(-1.00000000000000))*(r02)*(x1097)))+(((sj4)*(x1100)))+(((IkReal(-1.00000000000000))*(x1092)*(x1094)))+(((IkReal(-1.00000000000000))*(x1104))));
evalcond[3]=((x1105)+(((IkReal(-1.00000000000000))*(x1088)*(x1092)))+(((cj4)*(x1099)))+(((cj4)*(x1096)))+(((IkReal(-1.00000000000000))*(x1089)*(x1097)))+(((IkReal(-1.00000000000000))*(x1094)*(x1100)))+(((IkReal(-1.00000000000000))*(cj0)*(r02)*(x1088)))+(((IkReal(-1.00000000000000))*(x1110))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x1111=((cj5)*(npx));
IkReal x1112=((npy)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.258003287011922))+(((sj4)*(x1112)))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((IkReal(-1.00000000000000))*(sj4)*(x1111)))+(((IkReal(0.165463933124939))*(sj2))));
evalcond[2]=((((npx)*(sj5)))+(((cj5)*(npy))));
evalcond[3]=((IkReal(-0.0300035672348961))+(((IkReal(-1.00000000000000))*(cj4)*(x1112)))+(((IkReal(-0.165463933124939))*(cj2)))+(((cj4)*(x1111)))+(((npz)*(sj4)))+(((IkReal(-0.207888640466058))*(sj2))));
evalcond[4]=((((cj5)*(r21)))+(((r20)*(sj5))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst27;
IkReal x1113=(cj5)*(cj5);
IkReal x1114=(sj5)*(sj5);
IkReal x1115=((IkReal(1.00000000000000))*(x1114));
IkReal x1116=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1117=((IkReal(1.00000000000000))*(x1113));
gconst27=IKsign(((((IkReal(-1.00000000000000))*(x1117)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1116)))+(((IkReal(-1.00000000000000))*(x1115)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1115)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1116)))+(((IkReal(-1.00000000000000))*(x1117)*((r01)*(r01))))));
IkReal x1118=(cj5)*(cj5);
IkReal x1119=(sj5)*(sj5);
IkReal x1120=((IkReal(1.00000000000000))*(x1119));
IkReal x1121=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1122=((IkReal(1.00000000000000))*(x1118));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1120)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1122)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1121)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1121)))+(((IkReal(-1.00000000000000))*(x1120)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1122)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst28;
IkReal x1123=(sj5)*(sj5);
IkReal x1124=(cj5)*(cj5);
IkReal x1125=((cj4)*(cj5));
IkReal x1126=((IkReal(1.00000000000000))*(r12));
IkReal x1127=((cj4)*(sj5));
IkReal x1128=((r01)*(r10));
IkReal x1129=((sj4)*(x1124));
IkReal x1130=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1131=((sj4)*(x1123));
gconst28=IKsign(((((IkReal(-1.00000000000000))*(x1130)*(x1131)))+(((r02)*(r10)*(x1127)))+(((r02)*(r11)*(x1125)))+(((x1128)*(x1129)))+(((x1128)*(x1131)))+(((IkReal(-1.00000000000000))*(r00)*(x1126)*(x1127)))+(((IkReal(-1.00000000000000))*(r01)*(x1125)*(x1126)))+(((IkReal(-1.00000000000000))*(x1129)*(x1130)))));
IkReal x1132=(sj5)*(sj5);
IkReal x1133=(cj5)*(cj5);
IkReal x1134=((cj4)*(cj5));
IkReal x1135=((IkReal(1.00000000000000))*(r12));
IkReal x1136=((cj4)*(sj5));
IkReal x1137=((r01)*(r10));
IkReal x1138=((sj4)*(x1133));
IkReal x1139=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1140=((sj4)*(x1132));
dummyeval[0]=((((x1137)*(x1140)))+(((IkReal(-1.00000000000000))*(r00)*(x1135)*(x1136)))+(((IkReal(-1.00000000000000))*(r01)*(x1134)*(x1135)))+(((x1137)*(x1138)))+(((r02)*(r11)*(x1134)))+(((IkReal(-1.00000000000000))*(x1138)*(x1139)))+(((r02)*(r10)*(x1136)))+(((IkReal(-1.00000000000000))*(x1139)*(x1140))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst29;
gconst29=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1141=((IkReal(0.707109999985348))*(sj4));
IkReal x1142=((r22)*(sj2));
IkReal x1143=((cj5)*(r20));
IkReal x1144=((r21)*(sj5));
IkReal x1145=((IkReal(0.707109999985348))*(cj4));
IkReal x1146=((IkReal(0.707103562373095))*(sj4));
IkReal x1147=((cj2)*(r22));
IkReal x1148=((IkReal(0.707103562373095))*(cj4));
IkReal x1149=((sj2)*(x1148));
IkReal x1150=((cj2)*(x1148));
if( IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(x1144)*(x1150)))+(((IkReal(-1.00000000000000))*(x1145)*(x1147)))+(((IkReal(-1.00000000000000))*(cj2)*(x1141)*(x1144)))+(((x1146)*(x1147)))+(((IkReal(-1.00000000000000))*(x1141)*(x1142)))+(((x1143)*(x1150)))+(((IkReal(-1.00000000000000))*(sj2)*(x1144)*(x1146)))+(((sj2)*(x1144)*(x1145)))+(((cj2)*(x1141)*(x1143)))+(((IkReal(-1.00000000000000))*(sj2)*(x1143)*(x1145)))+(((sj2)*(x1143)*(x1146)))+(((IkReal(-1.00000000000000))*(x1142)*(x1148))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst29)*(((((x1143)*(x1149)))+(((x1141)*(x1147)))+(((cj2)*(x1143)*(x1145)))+(((IkReal(-1.00000000000000))*(cj2)*(x1143)*(x1146)))+(((x1142)*(x1146)))+(((IkReal(-1.00000000000000))*(sj2)*(x1141)*(x1144)))+(((cj2)*(x1144)*(x1146)))+(((x1147)*(x1148)))+(((sj2)*(x1141)*(x1143)))+(((IkReal(-1.00000000000000))*(cj2)*(x1144)*(x1145)))+(((IkReal(-1.00000000000000))*(x1144)*(x1149)))+(((IkReal(-1.00000000000000))*(x1142)*(x1145))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst29)*(((((IkReal(-1.00000000000000))*(x1144)*(x1150)))+(((IkReal(-1.00000000000000))*(x1145)*(x1147)))+(((IkReal(-1.00000000000000))*(cj2)*(x1141)*(x1144)))+(((x1146)*(x1147)))+(((IkReal(-1.00000000000000))*(x1141)*(x1142)))+(((x1143)*(x1150)))+(((IkReal(-1.00000000000000))*(sj2)*(x1144)*(x1146)))+(((sj2)*(x1144)*(x1145)))+(((cj2)*(x1141)*(x1143)))+(((IkReal(-1.00000000000000))*(sj2)*(x1143)*(x1145)))+(((sj2)*(x1143)*(x1146)))+(((IkReal(-1.00000000000000))*(x1142)*(x1148)))))), ((gconst29)*(((((x1143)*(x1149)))+(((x1141)*(x1147)))+(((cj2)*(x1143)*(x1145)))+(((IkReal(-1.00000000000000))*(cj2)*(x1143)*(x1146)))+(((x1142)*(x1146)))+(((IkReal(-1.00000000000000))*(sj2)*(x1141)*(x1144)))+(((cj2)*(x1144)*(x1146)))+(((x1147)*(x1148)))+(((sj2)*(x1141)*(x1143)))+(((IkReal(-1.00000000000000))*(cj2)*(x1144)*(x1145)))+(((IkReal(-1.00000000000000))*(x1144)*(x1149)))+(((IkReal(-1.00000000000000))*(x1142)*(x1145)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[2];
IkReal x1151=IKsin(j1);
IkReal x1152=IKcos(j1);
IkReal x1153=((cj5)*(r20));
IkReal x1154=((r21)*(sj5));
IkReal x1155=((IkReal(0.707103562373095))*(x1151));
IkReal x1156=((IkReal(0.707109999985348))*(x1151));
IkReal x1157=((IkReal(0.707103562373095))*(x1152));
IkReal x1158=((IkReal(0.707109999985348))*(x1152));
evalcond[0]=((((cj4)*(r22)))+(((cj2)*(x1156)))+(((sj2)*(x1155)))+(((sj2)*(x1158)))+(((IkReal(-1.00000000000000))*(sj4)*(x1153)))+(((IkReal(-1.00000000000000))*(cj2)*(x1157)))+(((sj4)*(x1154))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj4)*(x1154)))+(((r22)*(sj4)))+(((sj2)*(x1156)))+(((cj4)*(x1153)))+(((IkReal(-1.00000000000000))*(sj2)*(x1157)))+(((IkReal(-1.00000000000000))*(cj2)*(x1158)))+(((IkReal(-1.00000000000000))*(cj2)*(x1155))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst30;
IkReal x1159=(cj5)*(cj5);
IkReal x1160=(sj5)*(sj5);
IkReal x1161=((IkReal(1.00000000000000))*(x1160));
IkReal x1162=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1163=((IkReal(1.00000000000000))*(x1159));
gconst30=IKsign(((((IkReal(-1.00000000000000))*(x1161)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1162)))+(((IkReal(-1.00000000000000))*(x1163)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1161)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1163)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1162)))));
IkReal x1164=(cj5)*(cj5);
IkReal x1165=(sj5)*(sj5);
IkReal x1166=((IkReal(1.00000000000000))*(x1165));
IkReal x1167=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1168=((IkReal(1.00000000000000))*(x1164));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1166)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1167)))+(((IkReal(-1.00000000000000))*(x1168)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1168)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1166)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1167))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst31;
IkReal x1169=(sj5)*(sj5);
IkReal x1170=(cj5)*(cj5);
IkReal x1171=((cj4)*(cj5));
IkReal x1172=((IkReal(1.00000000000000))*(r12));
IkReal x1173=((cj4)*(sj5));
IkReal x1174=((r01)*(r10));
IkReal x1175=((sj4)*(x1170));
IkReal x1176=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1177=((sj4)*(x1169));
gconst31=IKsign(((((IkReal(-1.00000000000000))*(r00)*(x1172)*(x1173)))+(((x1174)*(x1175)))+(((x1174)*(x1177)))+(((r02)*(r11)*(x1171)))+(((r02)*(r10)*(x1173)))+(((IkReal(-1.00000000000000))*(x1176)*(x1177)))+(((IkReal(-1.00000000000000))*(x1175)*(x1176)))+(((IkReal(-1.00000000000000))*(r01)*(x1171)*(x1172)))));
IkReal x1178=(sj5)*(sj5);
IkReal x1179=(cj5)*(cj5);
IkReal x1180=((cj4)*(cj5));
IkReal x1181=((IkReal(1.00000000000000))*(r12));
IkReal x1182=((cj4)*(sj5));
IkReal x1183=((r01)*(r10));
IkReal x1184=((sj4)*(x1179));
IkReal x1185=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1186=((sj4)*(x1178));
dummyeval[0]=((((x1183)*(x1186)))+(((x1183)*(x1184)))+(((r02)*(r10)*(x1182)))+(((r02)*(r11)*(x1180)))+(((IkReal(-1.00000000000000))*(x1184)*(x1185)))+(((IkReal(-1.00000000000000))*(r01)*(x1180)*(x1181)))+(((IkReal(-1.00000000000000))*(x1185)*(x1186)))+(((IkReal(-1.00000000000000))*(r00)*(x1181)*(x1182))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1187=((cj5)*(sj4));
IkReal x1188=((IkReal(1.00000000000000))*(cj4));
IkReal x1189=((IkReal(1.00000000000000))*(sj4)*(sj5));
if( IKabs(((gconst31)*(((((IkReal(-1.00000000000000))*(r11)*(x1189)))+(((r10)*(x1187)))+(((IkReal(-1.00000000000000))*(r12)*(x1188))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst31)*(((((IkReal(-1.00000000000000))*(r01)*(x1189)))+(((r00)*(x1187)))+(((IkReal(-1.00000000000000))*(r02)*(x1188))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst31)*(((((IkReal(-1.00000000000000))*(r11)*(x1189)))+(((r10)*(x1187)))+(((IkReal(-1.00000000000000))*(r12)*(x1188)))))), ((gconst31)*(((((IkReal(-1.00000000000000))*(r01)*(x1189)))+(((r00)*(x1187)))+(((IkReal(-1.00000000000000))*(r02)*(x1188)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[6];
IkReal x1190=IKsin(j0);
IkReal x1191=IKcos(j0);
IkReal x1192=((IkReal(0.707103562373095))*(cj2));
IkReal x1193=((cj5)*(sj4));
IkReal x1194=((IkReal(1.00000000000000))*(sj4));
IkReal x1195=((IkReal(1.00000000000000))*(r10));
IkReal x1196=((IkReal(1.00000000000000))*(cj5));
IkReal x1197=((IkReal(1.00000000000000))*(cj4));
IkReal x1198=((sj1)*(sj2));
IkReal x1199=((IkReal(0.707109999985348))*(cj1));
IkReal x1200=((cj4)*(r11));
IkReal x1201=((sj5)*(x1190));
IkReal x1202=((r10)*(x1190));
IkReal x1203=((r01)*(x1191));
IkReal x1204=((r00)*(x1191));
IkReal x1205=((r02)*(x1191));
IkReal x1206=((r12)*(x1191));
IkReal x1207=((cj5)*(x1190));
IkReal x1208=((r12)*(x1190));
IkReal x1209=((sj5)*(x1191));
IkReal x1210=((r02)*(x1190));
evalcond[0]=((IkReal(-1.00000000000000))+(((r01)*(x1207)))+(((r00)*(x1201)))+(((IkReal(-1.00000000000000))*(r11)*(x1191)*(x1196)))+(((IkReal(-1.00000000000000))*(x1195)*(x1209))));
evalcond[1]=((((cj4)*(x1210)))+(((r01)*(sj4)*(x1201)))+(((IkReal(-1.00000000000000))*(r00)*(x1190)*(x1193)))+(((IkReal(-1.00000000000000))*(r11)*(x1194)*(x1209)))+(((IkReal(-1.00000000000000))*(x1197)*(x1206)))+(((r10)*(x1191)*(x1193))));
evalcond[2]=((((sj4)*(x1210)))+(((IkReal(-1.00000000000000))*(r01)*(x1197)*(x1201)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x1191)*(x1195)))+(((cj4)*(r00)*(x1207)))+(((x1200)*(x1209)))+(((IkReal(-1.00000000000000))*(x1194)*(x1206))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1196)*(x1203)))+(((IkReal(-1.00000000000000))*(r11)*(x1190)*(x1196)))+(((IkReal(-1.00000000000000))*(x1195)*(x1201)))+(((IkReal(-1.00000000000000))*(sj5)*(x1204))));
evalcond[4]=((((IkReal(0.707103562373095))*(cj1)*(sj2)))+(((x1193)*(x1202)))+(((x1193)*(x1204)))+(((IkReal(-0.707109999985348))*(x1198)))+(((sj1)*(x1192)))+(((IkReal(-1.00000000000000))*(sj5)*(x1194)*(x1203)))+(((IkReal(-1.00000000000000))*(r11)*(x1194)*(x1201)))+(((IkReal(-1.00000000000000))*(x1197)*(x1205)))+(((IkReal(-1.00000000000000))*(x1197)*(x1208)))+(((cj2)*(x1199))));
evalcond[5]=((((IkReal(0.707103562373095))*(x1198)))+(((IkReal(-1.00000000000000))*(cj4)*(x1196)*(x1204)))+(((x1200)*(x1201)))+(((sj2)*(x1199)))+(((IkReal(-1.00000000000000))*(cj1)*(x1192)))+(((IkReal(0.707109999985348))*(cj2)*(sj1)))+(((IkReal(-1.00000000000000))*(x1194)*(x1208)))+(((IkReal(-1.00000000000000))*(x1194)*(x1205)))+(((cj4)*(sj5)*(x1203)))+(((IkReal(-1.00000000000000))*(cj4)*(x1195)*(x1207))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst30)*(((((IkReal(-1.00000000000000))*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst30)*(((((cj5)*(r11)))+(((r10)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst30)*(((((IkReal(-1.00000000000000))*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)))))), ((gconst30)*(((((cj5)*(r11)))+(((r10)*(sj5)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[6];
IkReal x1211=IKsin(j0);
IkReal x1212=IKcos(j0);
IkReal x1213=((IkReal(0.707103562373095))*(cj2));
IkReal x1214=((cj5)*(sj4));
IkReal x1215=((IkReal(1.00000000000000))*(sj4));
IkReal x1216=((IkReal(1.00000000000000))*(r10));
IkReal x1217=((IkReal(1.00000000000000))*(cj5));
IkReal x1218=((IkReal(1.00000000000000))*(cj4));
IkReal x1219=((sj1)*(sj2));
IkReal x1220=((IkReal(0.707109999985348))*(cj1));
IkReal x1221=((cj4)*(r11));
IkReal x1222=((sj5)*(x1211));
IkReal x1223=((r10)*(x1211));
IkReal x1224=((r01)*(x1212));
IkReal x1225=((r00)*(x1212));
IkReal x1226=((r02)*(x1212));
IkReal x1227=((r12)*(x1212));
IkReal x1228=((cj5)*(x1211));
IkReal x1229=((r12)*(x1211));
IkReal x1230=((sj5)*(x1212));
IkReal x1231=((r02)*(x1211));
evalcond[0]=((IkReal(-1.00000000000000))+(((r01)*(x1228)))+(((r00)*(x1222)))+(((IkReal(-1.00000000000000))*(r11)*(x1212)*(x1217)))+(((IkReal(-1.00000000000000))*(x1216)*(x1230))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1218)*(x1227)))+(((IkReal(-1.00000000000000))*(r11)*(x1215)*(x1230)))+(((IkReal(-1.00000000000000))*(r00)*(x1211)*(x1214)))+(((cj4)*(x1231)))+(((r10)*(x1212)*(x1214)))+(((r01)*(sj4)*(x1222))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x1212)*(x1216)))+(((IkReal(-1.00000000000000))*(x1215)*(x1227)))+(((sj4)*(x1231)))+(((x1221)*(x1230)))+(((IkReal(-1.00000000000000))*(r01)*(x1218)*(x1222)))+(((cj4)*(r00)*(x1228))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj5)*(x1225)))+(((IkReal(-1.00000000000000))*(r11)*(x1211)*(x1217)))+(((IkReal(-1.00000000000000))*(x1217)*(x1224)))+(((IkReal(-1.00000000000000))*(x1216)*(x1222))));
evalcond[4]=((((x1214)*(x1225)))+(((x1214)*(x1223)))+(((cj2)*(x1220)))+(((IkReal(-1.00000000000000))*(x1218)*(x1229)))+(((IkReal(-1.00000000000000))*(x1218)*(x1226)))+(((IkReal(-1.00000000000000))*(r11)*(x1215)*(x1222)))+(((IkReal(0.707103562373095))*(cj1)*(sj2)))+(((IkReal(-1.00000000000000))*(sj5)*(x1215)*(x1224)))+(((IkReal(-0.707109999985348))*(x1219)))+(((sj1)*(x1213))));
evalcond[5]=((((sj2)*(x1220)))+(((IkReal(-1.00000000000000))*(cj1)*(x1213)))+(((cj4)*(sj5)*(x1224)))+(((IkReal(-1.00000000000000))*(cj4)*(x1216)*(x1228)))+(((IkReal(0.707103562373095))*(x1219)))+(((IkReal(-1.00000000000000))*(x1215)*(x1229)))+(((IkReal(-1.00000000000000))*(x1215)*(x1226)))+(((IkReal(-1.00000000000000))*(cj4)*(x1217)*(x1225)))+(((x1221)*(x1222)))+(((IkReal(0.707109999985348))*(cj2)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1232=((cj5)*(sj4));
IkReal x1233=((IkReal(1.00000000000000))*(cj4));
IkReal x1234=((IkReal(1.00000000000000))*(sj4)*(sj5));
if( IKabs(((gconst28)*(((((IkReal(-1.00000000000000))*(r12)*(x1233)))+(((IkReal(-1.00000000000000))*(r11)*(x1234)))+(((r10)*(x1232))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((r00)*(x1232)))+(((IkReal(-1.00000000000000))*(r01)*(x1234)))+(((IkReal(-1.00000000000000))*(r02)*(x1233))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst28)*(((((IkReal(-1.00000000000000))*(r12)*(x1233)))+(((IkReal(-1.00000000000000))*(r11)*(x1234)))+(((r10)*(x1232)))))), ((gconst28)*(((((r00)*(x1232)))+(((IkReal(-1.00000000000000))*(r01)*(x1234)))+(((IkReal(-1.00000000000000))*(r02)*(x1233)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1235=IKsin(j0);
IkReal x1236=IKcos(j0);
IkReal x1237=((IkReal(1.00000000000000))*(cj5));
IkReal x1238=((r01)*(sj5));
IkReal x1239=((IkReal(1.00000000000000))*(r12));
IkReal x1240=((r11)*(sj5));
IkReal x1241=((IkReal(1.00000000000000))*(r10));
IkReal x1242=((cj4)*(x1235));
IkReal x1243=((sj4)*(x1235));
IkReal x1244=((sj4)*(x1236));
IkReal x1245=((sj5)*(x1235));
IkReal x1246=((cj4)*(x1236));
IkReal x1247=((sj5)*(x1236));
evalcond[0]=((IkReal(-1.00000000000000))+(((r00)*(x1245)))+(((IkReal(-1.00000000000000))*(x1241)*(x1247)))+(((IkReal(-1.00000000000000))*(r11)*(x1236)*(x1237)))+(((cj5)*(r01)*(x1235))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1239)*(x1246)))+(((IkReal(-1.00000000000000))*(x1240)*(x1244)))+(((r02)*(x1242)))+(((x1238)*(x1243)))+(((cj5)*(r10)*(x1244)))+(((IkReal(-1.00000000000000))*(r00)*(x1237)*(x1243))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1239)*(x1244)))+(((cj5)*(r00)*(x1242)))+(((x1240)*(x1246)))+(((IkReal(-1.00000000000000))*(r10)*(x1237)*(x1246)))+(((r02)*(x1243)))+(((IkReal(-1.00000000000000))*(x1238)*(x1242))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x1235)*(x1237)))+(((IkReal(-1.00000000000000))*(r01)*(x1236)*(x1237)))+(((IkReal(-1.00000000000000))*(r00)*(x1247)))+(((IkReal(-1.00000000000000))*(x1241)*(x1245))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst32;
gconst32=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst33;
gconst33=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1248=((sj4)*(sj5));
IkReal x1249=((IkReal(0.707103562373095))*(sj0));
IkReal x1250=((r11)*(sj2));
IkReal x1251=((cj2)*(cj4));
IkReal x1252=((IkReal(0.707103562373095))*(r22));
IkReal x1253=((IkReal(0.707109999985348))*(cj0));
IkReal x1254=((cj2)*(r01));
IkReal x1255=((IkReal(0.707109999985348))*(cj2));
IkReal x1256=((IkReal(0.707109999985348))*(sj0));
IkReal x1257=((r21)*(sj2));
IkReal x1258=((IkReal(0.707103562373095))*(cj2));
IkReal x1259=((IkReal(0.707103562373095))*(sj2));
IkReal x1260=((cj5)*(sj4));
IkReal x1261=((r10)*(sj2));
IkReal x1262=((cj0)*(r00));
IkReal x1263=((IkReal(0.707103562373095))*(cj0));
IkReal x1264=((cj4)*(sj2));
IkReal x1265=((IkReal(0.707109999985348))*(r22));
IkReal x1266=((r02)*(x1264));
IkReal x1267=((r20)*(x1260));
if( IKabs(((gconst33)*(((((r21)*(x1248)*(x1255)))+(((x1248)*(x1250)*(x1256)))+(((r12)*(x1256)*(x1264)))+(((IkReal(0.707103562373095))*(x1248)*(x1257)))+(((IkReal(-1.00000000000000))*(x1255)*(x1267)))+(((x1253)*(x1266)))+(((x1258)*(x1260)*(x1262)))+(((r01)*(sj2)*(x1248)*(x1253)))+(((x1252)*(x1264)))+(((IkReal(-1.00000000000000))*(r02)*(x1251)*(x1263)))+(((IkReal(-1.00000000000000))*(x1248)*(x1254)*(x1263)))+(((IkReal(-1.00000000000000))*(x1256)*(x1260)*(x1261)))+(((IkReal(-1.00000000000000))*(r12)*(x1249)*(x1251)))+(((x1251)*(x1265)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x1253)*(x1260)))+(((IkReal(-1.00000000000000))*(x1259)*(x1267)))+(((IkReal(-1.00000000000000))*(cj2)*(r11)*(x1248)*(x1249)))+(((cj2)*(r10)*(x1249)*(x1260))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst33)*(((((x1259)*(x1260)*(x1262)))+(((IkReal(0.707109999985348))*(x1248)*(x1257)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x1248)*(x1255)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x1248)*(x1259)))+(((cj2)*(r00)*(x1253)*(x1260)))+(((x1258)*(x1267)))+(((x1264)*(x1265)))+(((IkReal(-1.00000000000000))*(r21)*(x1248)*(x1258)))+(((r10)*(sj0)*(x1255)*(x1260)))+(((x1249)*(x1260)*(x1261)))+(((IkReal(-1.00000000000000))*(r12)*(x1251)*(x1256)))+(((IkReal(-1.00000000000000))*(x1248)*(x1249)*(x1250)))+(((IkReal(-1.00000000000000))*(x1248)*(x1253)*(x1254)))+(((IkReal(-1.00000000000000))*(x1251)*(x1252)))+(((IkReal(-1.00000000000000))*(r02)*(x1251)*(x1253)))+(((IkReal(-1.00000000000000))*(r12)*(x1249)*(x1264)))+(((IkReal(-0.707109999985348))*(sj2)*(x1267)))+(((IkReal(-1.00000000000000))*(cj0)*(cj4)*(r02)*(x1259))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst33)*(((((r21)*(x1248)*(x1255)))+(((x1248)*(x1250)*(x1256)))+(((r12)*(x1256)*(x1264)))+(((IkReal(0.707103562373095))*(x1248)*(x1257)))+(((IkReal(-1.00000000000000))*(x1255)*(x1267)))+(((x1253)*(x1266)))+(((x1258)*(x1260)*(x1262)))+(((r01)*(sj2)*(x1248)*(x1253)))+(((x1252)*(x1264)))+(((IkReal(-1.00000000000000))*(r02)*(x1251)*(x1263)))+(((IkReal(-1.00000000000000))*(x1248)*(x1254)*(x1263)))+(((IkReal(-1.00000000000000))*(x1256)*(x1260)*(x1261)))+(((IkReal(-1.00000000000000))*(r12)*(x1249)*(x1251)))+(((x1251)*(x1265)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x1253)*(x1260)))+(((IkReal(-1.00000000000000))*(x1259)*(x1267)))+(((IkReal(-1.00000000000000))*(cj2)*(r11)*(x1248)*(x1249)))+(((cj2)*(r10)*(x1249)*(x1260)))))), ((gconst33)*(((((x1259)*(x1260)*(x1262)))+(((IkReal(0.707109999985348))*(x1248)*(x1257)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x1248)*(x1255)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x1248)*(x1259)))+(((cj2)*(r00)*(x1253)*(x1260)))+(((x1258)*(x1267)))+(((x1264)*(x1265)))+(((IkReal(-1.00000000000000))*(r21)*(x1248)*(x1258)))+(((r10)*(sj0)*(x1255)*(x1260)))+(((x1249)*(x1260)*(x1261)))+(((IkReal(-1.00000000000000))*(r12)*(x1251)*(x1256)))+(((IkReal(-1.00000000000000))*(x1248)*(x1249)*(x1250)))+(((IkReal(-1.00000000000000))*(x1248)*(x1253)*(x1254)))+(((IkReal(-1.00000000000000))*(x1251)*(x1252)))+(((IkReal(-1.00000000000000))*(r02)*(x1251)*(x1253)))+(((IkReal(-1.00000000000000))*(r12)*(x1249)*(x1264)))+(((IkReal(-0.707109999985348))*(sj2)*(x1267)))+(((IkReal(-1.00000000000000))*(cj0)*(cj4)*(r02)*(x1259)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1268=IKsin(j1);
IkReal x1269=IKcos(j1);
IkReal x1270=((IkReal(0.707109999985348))*(cj2));
IkReal x1271=((IkReal(1.00000000000000))*(sj4));
IkReal x1272=((cj5)*(r00));
IkReal x1273=((IkReal(0.707109999985348))*(sj2));
IkReal x1274=((cj5)*(r20));
IkReal x1275=((r12)*(sj0));
IkReal x1276=((r21)*(sj5));
IkReal x1277=((IkReal(1.00000000000000))*(cj4));
IkReal x1278=((IkReal(0.707103562373095))*(x1269));
IkReal x1279=((r11)*(sj0)*(sj5));
IkReal x1280=((cj0)*(x1277));
IkReal x1281=((IkReal(0.707103562373095))*(x1268));
IkReal x1282=((cj0)*(r01)*(sj5));
IkReal x1283=((cj5)*(r10)*(sj0));
IkReal x1284=((sj2)*(x1278));
IkReal x1285=((cj2)*(x1281));
IkReal x1286=((x1269)*(x1270));
IkReal x1287=((x1268)*(x1273));
IkReal x1288=((x1268)*(x1270));
IkReal x1289=((sj2)*(x1281));
IkReal x1290=((x1269)*(x1273));
IkReal x1291=((cj2)*(x1278));
IkReal x1292=((x1285)+(x1284)+(x1286));
IkReal x1293=((x1289)+(x1288)+(x1290));
evalcond[0]=((x1293)+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x1291)))+(((IkReal(-1.00000000000000))*(x1271)*(x1274)))+(((sj4)*(x1276))));
evalcond[1]=((x1287)+(((IkReal(-1.00000000000000))*(x1292)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(x1276)*(x1277)))+(((cj4)*(x1274))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x1280)))+(x1292)+(((sj4)*(x1283)))+(((IkReal(-1.00000000000000))*(x1271)*(x1279)))+(((IkReal(-1.00000000000000))*(x1275)*(x1277)))+(((cj0)*(sj4)*(x1272)))+(((IkReal(-1.00000000000000))*(x1271)*(x1282)))+(((IkReal(-1.00000000000000))*(x1287))));
evalcond[3]=((x1293)+(((IkReal(-1.00000000000000))*(cj0)*(r02)*(x1271)))+(((IkReal(-1.00000000000000))*(x1291)))+(((cj4)*(x1282)))+(((IkReal(-1.00000000000000))*(x1271)*(x1275)))+(((IkReal(-1.00000000000000))*(x1277)*(x1283)))+(((IkReal(-1.00000000000000))*(x1272)*(x1280)))+(((cj4)*(x1279))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1294=((IkReal(0.707109999985348))*(sj4));
IkReal x1295=((r22)*(sj2));
IkReal x1296=((cj5)*(r20));
IkReal x1297=((r21)*(sj5));
IkReal x1298=((IkReal(0.707109999985348))*(cj4));
IkReal x1299=((IkReal(0.707103562373095))*(sj4));
IkReal x1300=((cj2)*(r22));
IkReal x1301=((IkReal(0.707103562373095))*(cj4));
IkReal x1302=((sj2)*(x1301));
IkReal x1303=((cj2)*(x1301));
if( IKabs(((gconst32)*(((((x1299)*(x1300)))+(((sj2)*(x1297)*(x1298)))+(((IkReal(-1.00000000000000))*(x1297)*(x1303)))+(((IkReal(-1.00000000000000))*(cj2)*(x1294)*(x1297)))+(((IkReal(-1.00000000000000))*(sj2)*(x1296)*(x1298)))+(((sj2)*(x1296)*(x1299)))+(((cj2)*(x1294)*(x1296)))+(((IkReal(-1.00000000000000))*(sj2)*(x1297)*(x1299)))+(((IkReal(-1.00000000000000))*(x1298)*(x1300)))+(((IkReal(-1.00000000000000))*(x1295)*(x1301)))+(((x1296)*(x1303)))+(((IkReal(-1.00000000000000))*(x1294)*(x1295))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst32)*(((((IkReal(-1.00000000000000))*(cj2)*(x1297)*(x1298)))+(((cj2)*(x1297)*(x1299)))+(((sj2)*(x1294)*(x1296)))+(((IkReal(-1.00000000000000))*(sj2)*(x1294)*(x1297)))+(((x1295)*(x1299)))+(((IkReal(-1.00000000000000))*(cj2)*(x1296)*(x1299)))+(((x1300)*(x1301)))+(((IkReal(-1.00000000000000))*(x1297)*(x1302)))+(((x1294)*(x1300)))+(((cj2)*(x1296)*(x1298)))+(((IkReal(-1.00000000000000))*(x1295)*(x1298)))+(((x1296)*(x1302))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst32)*(((((x1299)*(x1300)))+(((sj2)*(x1297)*(x1298)))+(((IkReal(-1.00000000000000))*(x1297)*(x1303)))+(((IkReal(-1.00000000000000))*(cj2)*(x1294)*(x1297)))+(((IkReal(-1.00000000000000))*(sj2)*(x1296)*(x1298)))+(((sj2)*(x1296)*(x1299)))+(((cj2)*(x1294)*(x1296)))+(((IkReal(-1.00000000000000))*(sj2)*(x1297)*(x1299)))+(((IkReal(-1.00000000000000))*(x1298)*(x1300)))+(((IkReal(-1.00000000000000))*(x1295)*(x1301)))+(((x1296)*(x1303)))+(((IkReal(-1.00000000000000))*(x1294)*(x1295)))))), ((gconst32)*(((((IkReal(-1.00000000000000))*(cj2)*(x1297)*(x1298)))+(((cj2)*(x1297)*(x1299)))+(((sj2)*(x1294)*(x1296)))+(((IkReal(-1.00000000000000))*(sj2)*(x1294)*(x1297)))+(((x1295)*(x1299)))+(((IkReal(-1.00000000000000))*(cj2)*(x1296)*(x1299)))+(((x1300)*(x1301)))+(((IkReal(-1.00000000000000))*(x1297)*(x1302)))+(((x1294)*(x1300)))+(((cj2)*(x1296)*(x1298)))+(((IkReal(-1.00000000000000))*(x1295)*(x1298)))+(((x1296)*(x1302)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1304=IKsin(j1);
IkReal x1305=IKcos(j1);
IkReal x1306=((IkReal(0.707109999985348))*(cj2));
IkReal x1307=((IkReal(1.00000000000000))*(sj4));
IkReal x1308=((cj5)*(r00));
IkReal x1309=((IkReal(0.707109999985348))*(sj2));
IkReal x1310=((cj5)*(r20));
IkReal x1311=((r12)*(sj0));
IkReal x1312=((r21)*(sj5));
IkReal x1313=((IkReal(1.00000000000000))*(cj4));
IkReal x1314=((IkReal(0.707103562373095))*(x1305));
IkReal x1315=((r11)*(sj0)*(sj5));
IkReal x1316=((cj0)*(x1313));
IkReal x1317=((IkReal(0.707103562373095))*(x1304));
IkReal x1318=((cj0)*(r01)*(sj5));
IkReal x1319=((cj5)*(r10)*(sj0));
IkReal x1320=((sj2)*(x1314));
IkReal x1321=((cj2)*(x1317));
IkReal x1322=((x1305)*(x1306));
IkReal x1323=((x1304)*(x1309));
IkReal x1324=((x1304)*(x1306));
IkReal x1325=((sj2)*(x1317));
IkReal x1326=((x1305)*(x1309));
IkReal x1327=((cj2)*(x1314));
IkReal x1328=((x1322)+(x1320)+(x1321));
IkReal x1329=((x1326)+(x1324)+(x1325));
evalcond[0]=((x1329)+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x1327)))+(((IkReal(-1.00000000000000))*(x1307)*(x1310)))+(((sj4)*(x1312))));
evalcond[1]=((x1323)+(((cj4)*(x1310)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(x1328)))+(((IkReal(-1.00000000000000))*(x1312)*(x1313))));
evalcond[2]=((x1328)+(((IkReal(-1.00000000000000))*(x1311)*(x1313)))+(((IkReal(-1.00000000000000))*(x1323)))+(((IkReal(-1.00000000000000))*(x1307)*(x1318)))+(((IkReal(-1.00000000000000))*(x1307)*(x1315)))+(((cj0)*(sj4)*(x1308)))+(((sj4)*(x1319)))+(((IkReal(-1.00000000000000))*(r02)*(x1316))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj0)*(r02)*(x1307)))+(x1329)+(((IkReal(-1.00000000000000))*(x1313)*(x1319)))+(((IkReal(-1.00000000000000))*(x1308)*(x1316)))+(((cj4)*(x1318)))+(((cj4)*(x1315)))+(((IkReal(-1.00000000000000))*(x1327)))+(((IkReal(-1.00000000000000))*(x1307)*(x1311))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst27)*(((((IkReal(-1.00000000000000))*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst27)*(((((cj5)*(r11)))+(((r10)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst27)*(((((IkReal(-1.00000000000000))*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)))))), ((gconst27)*(((((cj5)*(r11)))+(((r10)*(sj5)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1330=IKsin(j0);
IkReal x1331=IKcos(j0);
IkReal x1332=((IkReal(1.00000000000000))*(cj5));
IkReal x1333=((r01)*(sj5));
IkReal x1334=((IkReal(1.00000000000000))*(r12));
IkReal x1335=((r11)*(sj5));
IkReal x1336=((IkReal(1.00000000000000))*(r10));
IkReal x1337=((cj4)*(x1330));
IkReal x1338=((sj4)*(x1330));
IkReal x1339=((sj4)*(x1331));
IkReal x1340=((sj5)*(x1330));
IkReal x1341=((cj4)*(x1331));
IkReal x1342=((sj5)*(x1331));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1336)*(x1342)))+(((cj5)*(r01)*(x1330)))+(((r00)*(x1340)))+(((IkReal(-1.00000000000000))*(r11)*(x1331)*(x1332))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x1332)*(x1338)))+(((IkReal(-1.00000000000000))*(x1335)*(x1339)))+(((cj5)*(r10)*(x1339)))+(((IkReal(-1.00000000000000))*(x1334)*(x1341)))+(((r02)*(x1337)))+(((x1333)*(x1338))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1333)*(x1337)))+(((cj5)*(r00)*(x1337)))+(((IkReal(-1.00000000000000))*(r10)*(x1332)*(x1341)))+(((IkReal(-1.00000000000000))*(x1334)*(x1339)))+(((x1335)*(x1341)))+(((r02)*(x1338))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1336)*(x1340)))+(((IkReal(-1.00000000000000))*(r01)*(x1331)*(x1332)))+(((IkReal(-1.00000000000000))*(r11)*(x1330)*(x1332)))+(((IkReal(-1.00000000000000))*(r00)*(x1342))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst32;
gconst32=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst33;
gconst33=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1343=((sj4)*(sj5));
IkReal x1344=((IkReal(0.707103562373095))*(sj0));
IkReal x1345=((r11)*(sj2));
IkReal x1346=((cj2)*(cj4));
IkReal x1347=((IkReal(0.707103562373095))*(r22));
IkReal x1348=((IkReal(0.707109999985348))*(cj0));
IkReal x1349=((cj2)*(r01));
IkReal x1350=((IkReal(0.707109999985348))*(cj2));
IkReal x1351=((IkReal(0.707109999985348))*(sj0));
IkReal x1352=((r21)*(sj2));
IkReal x1353=((IkReal(0.707103562373095))*(cj2));
IkReal x1354=((IkReal(0.707103562373095))*(sj2));
IkReal x1355=((cj5)*(sj4));
IkReal x1356=((r10)*(sj2));
IkReal x1357=((cj0)*(r00));
IkReal x1358=((IkReal(0.707103562373095))*(cj0));
IkReal x1359=((cj4)*(sj2));
IkReal x1360=((IkReal(0.707109999985348))*(r22));
IkReal x1361=((r02)*(x1359));
IkReal x1362=((r20)*(x1355));
if( IKabs(((gconst33)*(((((IkReal(-1.00000000000000))*(x1351)*(x1355)*(x1356)))+(((r12)*(x1351)*(x1359)))+(((IkReal(-1.00000000000000))*(cj2)*(r11)*(x1343)*(x1344)))+(((IkReal(0.707103562373095))*(x1343)*(x1352)))+(((IkReal(-1.00000000000000))*(x1350)*(x1362)))+(((IkReal(-1.00000000000000))*(x1343)*(x1349)*(x1358)))+(((IkReal(-1.00000000000000))*(x1354)*(x1362)))+(((IkReal(-1.00000000000000))*(r12)*(x1344)*(x1346)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x1348)*(x1355)))+(((cj2)*(r10)*(x1344)*(x1355)))+(((r21)*(x1343)*(x1350)))+(((r01)*(sj2)*(x1343)*(x1348)))+(((x1348)*(x1361)))+(((x1346)*(x1360)))+(((x1347)*(x1359)))+(((x1353)*(x1355)*(x1357)))+(((IkReal(-1.00000000000000))*(r02)*(x1346)*(x1358)))+(((x1343)*(x1345)*(x1351))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst33)*(((((cj2)*(r00)*(x1348)*(x1355)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x1343)*(x1350)))+(((IkReal(-1.00000000000000))*(x1346)*(x1347)))+(((x1344)*(x1355)*(x1356)))+(((IkReal(0.707109999985348))*(x1343)*(x1352)))+(((IkReal(-1.00000000000000))*(r21)*(x1343)*(x1353)))+(((x1359)*(x1360)))+(((IkReal(-1.00000000000000))*(x1343)*(x1344)*(x1345)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x1343)*(x1354)))+(((x1354)*(x1355)*(x1357)))+(((IkReal(-1.00000000000000))*(x1343)*(x1348)*(x1349)))+(((IkReal(-1.00000000000000))*(r12)*(x1344)*(x1359)))+(((IkReal(-1.00000000000000))*(cj0)*(cj4)*(r02)*(x1354)))+(((r10)*(sj0)*(x1350)*(x1355)))+(((IkReal(-0.707109999985348))*(sj2)*(x1362)))+(((x1353)*(x1362)))+(((IkReal(-1.00000000000000))*(r02)*(x1346)*(x1348)))+(((IkReal(-1.00000000000000))*(r12)*(x1346)*(x1351))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst33)*(((((IkReal(-1.00000000000000))*(x1351)*(x1355)*(x1356)))+(((r12)*(x1351)*(x1359)))+(((IkReal(-1.00000000000000))*(cj2)*(r11)*(x1343)*(x1344)))+(((IkReal(0.707103562373095))*(x1343)*(x1352)))+(((IkReal(-1.00000000000000))*(x1350)*(x1362)))+(((IkReal(-1.00000000000000))*(x1343)*(x1349)*(x1358)))+(((IkReal(-1.00000000000000))*(x1354)*(x1362)))+(((IkReal(-1.00000000000000))*(r12)*(x1344)*(x1346)))+(((IkReal(-1.00000000000000))*(r00)*(sj2)*(x1348)*(x1355)))+(((cj2)*(r10)*(x1344)*(x1355)))+(((r21)*(x1343)*(x1350)))+(((r01)*(sj2)*(x1343)*(x1348)))+(((x1348)*(x1361)))+(((x1346)*(x1360)))+(((x1347)*(x1359)))+(((x1353)*(x1355)*(x1357)))+(((IkReal(-1.00000000000000))*(r02)*(x1346)*(x1358)))+(((x1343)*(x1345)*(x1351)))))), ((gconst33)*(((((cj2)*(r00)*(x1348)*(x1355)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x1343)*(x1350)))+(((IkReal(-1.00000000000000))*(x1346)*(x1347)))+(((x1344)*(x1355)*(x1356)))+(((IkReal(0.707109999985348))*(x1343)*(x1352)))+(((IkReal(-1.00000000000000))*(r21)*(x1343)*(x1353)))+(((x1359)*(x1360)))+(((IkReal(-1.00000000000000))*(x1343)*(x1344)*(x1345)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x1343)*(x1354)))+(((x1354)*(x1355)*(x1357)))+(((IkReal(-1.00000000000000))*(x1343)*(x1348)*(x1349)))+(((IkReal(-1.00000000000000))*(r12)*(x1344)*(x1359)))+(((IkReal(-1.00000000000000))*(cj0)*(cj4)*(r02)*(x1354)))+(((r10)*(sj0)*(x1350)*(x1355)))+(((IkReal(-0.707109999985348))*(sj2)*(x1362)))+(((x1353)*(x1362)))+(((IkReal(-1.00000000000000))*(r02)*(x1346)*(x1348)))+(((IkReal(-1.00000000000000))*(r12)*(x1346)*(x1351)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1363=IKsin(j1);
IkReal x1364=IKcos(j1);
IkReal x1365=((IkReal(0.707109999985348))*(cj2));
IkReal x1366=((IkReal(1.00000000000000))*(sj4));
IkReal x1367=((cj5)*(r00));
IkReal x1368=((IkReal(0.707109999985348))*(sj2));
IkReal x1369=((cj5)*(r20));
IkReal x1370=((r12)*(sj0));
IkReal x1371=((r21)*(sj5));
IkReal x1372=((IkReal(1.00000000000000))*(cj4));
IkReal x1373=((IkReal(0.707103562373095))*(x1364));
IkReal x1374=((r11)*(sj0)*(sj5));
IkReal x1375=((cj0)*(x1372));
IkReal x1376=((IkReal(0.707103562373095))*(x1363));
IkReal x1377=((cj0)*(r01)*(sj5));
IkReal x1378=((cj5)*(r10)*(sj0));
IkReal x1379=((sj2)*(x1373));
IkReal x1380=((cj2)*(x1376));
IkReal x1381=((x1364)*(x1365));
IkReal x1382=((x1363)*(x1368));
IkReal x1383=((x1363)*(x1365));
IkReal x1384=((sj2)*(x1376));
IkReal x1385=((x1364)*(x1368));
IkReal x1386=((cj2)*(x1373));
IkReal x1387=((x1379)+(x1380)+(x1381));
IkReal x1388=((x1384)+(x1385)+(x1383));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1366)*(x1369)))+(((IkReal(-1.00000000000000))*(x1386)))+(x1388)+(((cj4)*(r22)))+(((sj4)*(x1371))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1387)))+(x1382)+(((IkReal(-1.00000000000000))*(x1371)*(x1372)))+(((r22)*(sj4)))+(((cj4)*(x1369))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1382)))+(x1387)+(((IkReal(-1.00000000000000))*(x1370)*(x1372)))+(((IkReal(-1.00000000000000))*(r02)*(x1375)))+(((cj0)*(sj4)*(x1367)))+(((sj4)*(x1378)))+(((IkReal(-1.00000000000000))*(x1366)*(x1374)))+(((IkReal(-1.00000000000000))*(x1366)*(x1377))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1386)))+(x1388)+(((IkReal(-1.00000000000000))*(cj0)*(r02)*(x1366)))+(((cj4)*(x1377)))+(((cj4)*(x1374)))+(((IkReal(-1.00000000000000))*(x1372)*(x1378)))+(((IkReal(-1.00000000000000))*(x1366)*(x1370)))+(((IkReal(-1.00000000000000))*(x1367)*(x1375))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1389=((IkReal(0.707109999985348))*(sj4));
IkReal x1390=((r22)*(sj2));
IkReal x1391=((cj5)*(r20));
IkReal x1392=((r21)*(sj5));
IkReal x1393=((IkReal(0.707109999985348))*(cj4));
IkReal x1394=((IkReal(0.707103562373095))*(sj4));
IkReal x1395=((cj2)*(r22));
IkReal x1396=((IkReal(0.707103562373095))*(cj4));
IkReal x1397=((sj2)*(x1396));
IkReal x1398=((cj2)*(x1396));
if( IKabs(((gconst32)*(((((IkReal(-1.00000000000000))*(x1392)*(x1398)))+(((sj2)*(x1392)*(x1393)))+(((cj2)*(x1389)*(x1391)))+(((IkReal(-1.00000000000000))*(x1389)*(x1390)))+(((sj2)*(x1391)*(x1394)))+(((IkReal(-1.00000000000000))*(x1393)*(x1395)))+(((IkReal(-1.00000000000000))*(cj2)*(x1389)*(x1392)))+(((x1394)*(x1395)))+(((IkReal(-1.00000000000000))*(x1390)*(x1396)))+(((IkReal(-1.00000000000000))*(sj2)*(x1391)*(x1393)))+(((IkReal(-1.00000000000000))*(sj2)*(x1392)*(x1394)))+(((x1391)*(x1398))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst32)*(((((IkReal(-1.00000000000000))*(sj2)*(x1389)*(x1392)))+(((IkReal(-1.00000000000000))*(x1392)*(x1397)))+(((x1390)*(x1394)))+(((sj2)*(x1389)*(x1391)))+(((x1395)*(x1396)))+(((IkReal(-1.00000000000000))*(x1390)*(x1393)))+(((cj2)*(x1392)*(x1394)))+(((IkReal(-1.00000000000000))*(cj2)*(x1391)*(x1394)))+(((x1389)*(x1395)))+(((x1391)*(x1397)))+(((IkReal(-1.00000000000000))*(cj2)*(x1392)*(x1393)))+(((cj2)*(x1391)*(x1393))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst32)*(((((IkReal(-1.00000000000000))*(x1392)*(x1398)))+(((sj2)*(x1392)*(x1393)))+(((cj2)*(x1389)*(x1391)))+(((IkReal(-1.00000000000000))*(x1389)*(x1390)))+(((sj2)*(x1391)*(x1394)))+(((IkReal(-1.00000000000000))*(x1393)*(x1395)))+(((IkReal(-1.00000000000000))*(cj2)*(x1389)*(x1392)))+(((x1394)*(x1395)))+(((IkReal(-1.00000000000000))*(x1390)*(x1396)))+(((IkReal(-1.00000000000000))*(sj2)*(x1391)*(x1393)))+(((IkReal(-1.00000000000000))*(sj2)*(x1392)*(x1394)))+(((x1391)*(x1398)))))), ((gconst32)*(((((IkReal(-1.00000000000000))*(sj2)*(x1389)*(x1392)))+(((IkReal(-1.00000000000000))*(x1392)*(x1397)))+(((x1390)*(x1394)))+(((sj2)*(x1389)*(x1391)))+(((x1395)*(x1396)))+(((IkReal(-1.00000000000000))*(x1390)*(x1393)))+(((cj2)*(x1392)*(x1394)))+(((IkReal(-1.00000000000000))*(cj2)*(x1391)*(x1394)))+(((x1389)*(x1395)))+(((x1391)*(x1397)))+(((IkReal(-1.00000000000000))*(cj2)*(x1392)*(x1393)))+(((cj2)*(x1391)*(x1393)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1399=IKsin(j1);
IkReal x1400=IKcos(j1);
IkReal x1401=((IkReal(0.707109999985348))*(cj2));
IkReal x1402=((IkReal(1.00000000000000))*(sj4));
IkReal x1403=((cj5)*(r00));
IkReal x1404=((IkReal(0.707109999985348))*(sj2));
IkReal x1405=((cj5)*(r20));
IkReal x1406=((r12)*(sj0));
IkReal x1407=((r21)*(sj5));
IkReal x1408=((IkReal(1.00000000000000))*(cj4));
IkReal x1409=((IkReal(0.707103562373095))*(x1400));
IkReal x1410=((r11)*(sj0)*(sj5));
IkReal x1411=((cj0)*(x1408));
IkReal x1412=((IkReal(0.707103562373095))*(x1399));
IkReal x1413=((cj0)*(r01)*(sj5));
IkReal x1414=((cj5)*(r10)*(sj0));
IkReal x1415=((sj2)*(x1409));
IkReal x1416=((cj2)*(x1412));
IkReal x1417=((x1400)*(x1401));
IkReal x1418=((x1399)*(x1404));
IkReal x1419=((x1399)*(x1401));
IkReal x1420=((sj2)*(x1412));
IkReal x1421=((x1400)*(x1404));
IkReal x1422=((cj2)*(x1409));
IkReal x1423=((x1415)+(x1416)+(x1417));
IkReal x1424=((x1421)+(x1420)+(x1419));
evalcond[0]=((((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x1402)*(x1405)))+(x1424)+(((sj4)*(x1407)))+(((IkReal(-1.00000000000000))*(x1422))));
evalcond[1]=((((r22)*(sj4)))+(((cj4)*(x1405)))+(x1418)+(((IkReal(-1.00000000000000))*(x1407)*(x1408)))+(((IkReal(-1.00000000000000))*(x1423))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1418)))+(((IkReal(-1.00000000000000))*(r02)*(x1411)))+(((IkReal(-1.00000000000000))*(x1406)*(x1408)))+(((cj0)*(sj4)*(x1403)))+(((sj4)*(x1414)))+(x1423)+(((IkReal(-1.00000000000000))*(x1402)*(x1413)))+(((IkReal(-1.00000000000000))*(x1402)*(x1410))));
evalcond[3]=((((cj4)*(x1413)))+(((cj4)*(x1410)))+(((IkReal(-1.00000000000000))*(x1408)*(x1414)))+(((IkReal(-1.00000000000000))*(x1402)*(x1406)))+(((IkReal(-1.00000000000000))*(x1403)*(x1411)))+(x1424)+(((IkReal(-1.00000000000000))*(cj0)*(r02)*(x1402)))+(((IkReal(-1.00000000000000))*(x1422))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1425=((sj2)*(sj3));
IkReal x1426=((cj4)*(r22));
IkReal x1427=((r20)*(sj5));
IkReal x1428=((IkReal(0.707103562373095))*(cj2));
IkReal x1429=((IkReal(0.707109999985348))*(sj2));
IkReal x1430=((IkReal(0.707109999985348))*(cj2));
IkReal x1431=((cj5)*(r21));
IkReal x1432=((IkReal(0.707103562373095))*(sj2));
IkReal x1433=((r21)*(sj4)*(sj5));
IkReal x1434=((cj5)*(r20)*(sj4));
if( IKabs(((gconst6)*(((((x1429)*(x1431)))+(((IkReal(0.707103562373095))*(x1425)*(x1426)))+(((IkReal(-1.00000000000000))*(x1427)*(x1428)))+(((IkReal(-1.00000000000000))*(sj3)*(x1430)*(x1434)))+(((sj3)*(x1430)*(x1433)))+(((sj3)*(x1426)*(x1430)))+(((IkReal(-1.00000000000000))*(x1428)*(x1431)))+(((IkReal(-0.707103562373095))*(x1425)*(x1434)))+(((IkReal(0.707103562373095))*(x1425)*(x1433)))+(((x1427)*(x1429))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-0.707109999985348))*(x1425)*(x1434)))+(((IkReal(0.707109999985348))*(x1425)*(x1426)))+(((IkReal(-1.00000000000000))*(sj3)*(x1428)*(x1433)))+(((IkReal(-1.00000000000000))*(x1431)*(x1432)))+(((IkReal(-1.00000000000000))*(x1427)*(x1430)))+(((IkReal(-1.00000000000000))*(x1427)*(x1432)))+(((sj3)*(x1428)*(x1434)))+(((IkReal(-1.00000000000000))*(x1430)*(x1431)))+(((IkReal(0.707109999985348))*(x1425)*(x1433)))+(((IkReal(-1.00000000000000))*(sj3)*(x1426)*(x1428))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst6)*(((((x1429)*(x1431)))+(((IkReal(0.707103562373095))*(x1425)*(x1426)))+(((IkReal(-1.00000000000000))*(x1427)*(x1428)))+(((IkReal(-1.00000000000000))*(sj3)*(x1430)*(x1434)))+(((sj3)*(x1430)*(x1433)))+(((sj3)*(x1426)*(x1430)))+(((IkReal(-1.00000000000000))*(x1428)*(x1431)))+(((IkReal(-0.707103562373095))*(x1425)*(x1434)))+(((IkReal(0.707103562373095))*(x1425)*(x1433)))+(((x1427)*(x1429)))))), ((gconst6)*(((((IkReal(-0.707109999985348))*(x1425)*(x1434)))+(((IkReal(0.707109999985348))*(x1425)*(x1426)))+(((IkReal(-1.00000000000000))*(sj3)*(x1428)*(x1433)))+(((IkReal(-1.00000000000000))*(x1431)*(x1432)))+(((IkReal(-1.00000000000000))*(x1427)*(x1430)))+(((IkReal(-1.00000000000000))*(x1427)*(x1432)))+(((sj3)*(x1428)*(x1434)))+(((IkReal(-1.00000000000000))*(x1430)*(x1431)))+(((IkReal(0.707109999985348))*(x1425)*(x1433)))+(((IkReal(-1.00000000000000))*(sj3)*(x1426)*(x1428)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[3];
IkReal x1435=IKcos(j1);
IkReal x1436=IKsin(j1);
IkReal x1437=((IkReal(0.707109999985348))*(cj3));
IkReal x1438=((IkReal(0.707109999985348))*(sj3));
IkReal x1439=((IkReal(0.707103562373095))*(cj3));
IkReal x1440=((IkReal(0.707103562373095))*(sj3));
IkReal x1441=((r21)*(sj5));
IkReal x1442=((cj5)*(r20));
IkReal x1443=((sj2)*(x1436));
IkReal x1444=((cj2)*(x1435));
IkReal x1445=((cj2)*(x1436));
IkReal x1446=((sj2)*(x1435));
evalcond[0]=((((x1438)*(x1443)))+(((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x1438)*(x1444)))+(((r20)*(sj5)))+(((IkReal(-1.00000000000000))*(x1440)*(x1446)))+(((IkReal(-1.00000000000000))*(x1440)*(x1445))));
evalcond[1]=((((sj4)*(x1441)))+(((cj4)*(r22)))+(((IkReal(0.707109999985348))*(x1446)))+(((IkReal(0.707109999985348))*(x1445)))+(((IkReal(-1.00000000000000))*(sj4)*(x1442)))+(((IkReal(0.707103562373095))*(x1443)))+(((IkReal(-0.707103562373095))*(x1444))));
evalcond[2]=((((x1437)*(x1444)))+(((cj4)*(x1442)))+(((x1439)*(x1446)))+(((x1439)*(x1445)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(x1437)*(x1443)))+(((IkReal(-1.00000000000000))*(cj4)*(x1441))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst8;
IkReal x1447=(cj5)*(cj5);
IkReal x1448=(sj5)*(sj5);
IkReal x1449=((IkReal(1.00000000000000))*(r10));
IkReal x1450=((cj4)*(sj5));
IkReal x1451=((r00)*(r11));
IkReal x1452=((cj4)*(cj5));
IkReal x1453=((sj4)*(x1447));
IkReal x1454=((sj4)*(x1448));
gconst8=IKsign(((((r00)*(r12)*(x1450)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x1452)))+(((IkReal(-1.00000000000000))*(r01)*(x1449)*(x1454)))+(((IkReal(-1.00000000000000))*(r01)*(x1449)*(x1453)))+(((r01)*(r12)*(x1452)))+(((IkReal(-1.00000000000000))*(r02)*(x1449)*(x1450)))+(((x1451)*(x1453)))+(((x1451)*(x1454)))));
IkReal x1455=(cj5)*(cj5);
IkReal x1456=(sj5)*(sj5);
IkReal x1457=((IkReal(1.00000000000000))*(r10));
IkReal x1458=((cj4)*(sj5));
IkReal x1459=((r00)*(r11));
IkReal x1460=((cj4)*(cj5));
IkReal x1461=((sj4)*(x1455));
IkReal x1462=((sj4)*(x1456));
dummyeval[0]=((((r00)*(r12)*(x1458)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(x1460)))+(((x1459)*(x1461)))+(((x1459)*(x1462)))+(((IkReal(-1.00000000000000))*(r02)*(x1457)*(x1458)))+(((IkReal(-1.00000000000000))*(r01)*(x1457)*(x1462)))+(((IkReal(-1.00000000000000))*(r01)*(x1457)*(x1461)))+(((r01)*(r12)*(x1460))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
IkReal x1463=(cj5)*(cj5);
IkReal x1464=(sj5)*(sj5);
IkReal x1465=((IkReal(1.00000000000000))*(r11));
IkReal x1466=((cj4)*(r00));
IkReal x1467=((r02)*(sj4));
IkReal x1468=((r12)*(sj4));
IkReal x1469=((cj4)*(r01)*(r10));
gconst9=IKsign(((((x1463)*(x1469)))+(((cj5)*(r01)*(x1468)))+(((r00)*(sj5)*(x1468)))+(((x1464)*(x1469)))+(((IkReal(-1.00000000000000))*(cj5)*(x1465)*(x1467)))+(((IkReal(-1.00000000000000))*(x1463)*(x1465)*(x1466)))+(((IkReal(-1.00000000000000))*(x1464)*(x1465)*(x1466)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1467)))));
IkReal x1470=(cj5)*(cj5);
IkReal x1471=(sj5)*(sj5);
IkReal x1472=((IkReal(1.00000000000000))*(r11));
IkReal x1473=((cj4)*(r00));
IkReal x1474=((r02)*(sj4));
IkReal x1475=((r12)*(sj4));
IkReal x1476=((cj4)*(r01)*(r10));
dummyeval[0]=((((x1471)*(x1476)))+(((IkReal(-1.00000000000000))*(x1471)*(x1472)*(x1473)))+(((x1470)*(x1476)))+(((IkReal(-1.00000000000000))*(cj5)*(x1472)*(x1474)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1474)))+(((IkReal(-1.00000000000000))*(x1470)*(x1472)*(x1473)))+(((cj5)*(r01)*(x1475)))+(((r00)*(sj5)*(x1475))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1477=((cj5)*(sj3));
IkReal x1478=((IkReal(1.00000000000000))*(cj3));
IkReal x1479=((cj4)*(cj5));
IkReal x1480=((sj3)*(sj5));
IkReal x1481=((cj3)*(cj4)*(sj5));
if( IKabs(((gconst9)*(((((r10)*(x1480)))+(((r11)*(x1477)))+(((IkReal(-1.00000000000000))*(r10)*(x1478)*(x1479)))+(((r11)*(x1481)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x1478))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(r00)*(x1478)*(x1479)))+(((r01)*(x1481)))+(((r00)*(x1480)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x1478)))+(((r01)*(x1477))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst9)*(((((r10)*(x1480)))+(((r11)*(x1477)))+(((IkReal(-1.00000000000000))*(r10)*(x1478)*(x1479)))+(((r11)*(x1481)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x1478)))))), ((gconst9)*(((((IkReal(-1.00000000000000))*(r00)*(x1478)*(x1479)))+(((r01)*(x1481)))+(((r00)*(x1480)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x1478)))+(((r01)*(x1477)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[6];
IkReal x1482=IKsin(j0);
IkReal x1483=IKcos(j0);
IkReal x1484=((IkReal(0.707103562373095))*(cj2));
IkReal x1485=((cj1)*(cj3));
IkReal x1486=((cj4)*(r12));
IkReal x1487=((IkReal(1.00000000000000))*(sj4));
IkReal x1488=((cj1)*(sj3));
IkReal x1489=((IkReal(1.00000000000000))*(r10));
IkReal x1490=((r01)*(sj5));
IkReal x1491=((cj3)*(sj1));
IkReal x1492=((IkReal(0.707109999985348))*(cj2));
IkReal x1493=((r02)*(sj4));
IkReal x1494=((cj5)*(r01));
IkReal x1495=((IkReal(0.707103562373095))*(sj2));
IkReal x1496=((cj5)*(r00));
IkReal x1497=((sj1)*(sj3));
IkReal x1498=((IkReal(0.707109999985348))*(sj2));
IkReal x1499=((r11)*(sj5));
IkReal x1500=((sj5)*(x1482));
IkReal x1501=((IkReal(1.00000000000000))*(x1483));
IkReal x1502=((cj4)*(x1482));
IkReal x1503=((cj5)*(x1482));
IkReal x1504=((cj4)*(x1483));
IkReal x1505=((cj5)*(sj4)*(x1483));
evalcond[0]=((((x1482)*(x1494)))+(cj3)+(((IkReal(-1.00000000000000))*(sj5)*(x1483)*(x1489)))+(((r00)*(x1500)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1501))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1486)*(x1501)))+(((r10)*(x1505)))+(((IkReal(-1.00000000000000))*(x1483)*(x1487)*(x1499)))+(((IkReal(-1.00000000000000))*(x1482)*(x1487)*(x1496)))+(((r02)*(x1502)))+(((sj4)*(x1482)*(x1490))));
evalcond[2]=((((x1499)*(x1504)))+(((IkReal(-1.00000000000000))*(r12)*(x1483)*(x1487)))+(((x1482)*(x1493)))+(sj3)+(((IkReal(-1.00000000000000))*(x1490)*(x1502)))+(((IkReal(-1.00000000000000))*(cj5)*(x1489)*(x1504)))+(((x1496)*(x1502))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1484)*(x1488)))+(((IkReal(-1.00000000000000))*(x1494)*(x1501)))+(((x1495)*(x1497)))+(((x1492)*(x1497)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1501)))+(((IkReal(-1.00000000000000))*(x1489)*(x1500)))+(((IkReal(-1.00000000000000))*(r11)*(x1503)))+(((x1488)*(x1498))));
evalcond[4]=((((cj1)*(x1492)))+(((cj1)*(x1495)))+(((sj1)*(x1484)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1501)))+(((sj4)*(x1483)*(x1496)))+(((r10)*(sj4)*(x1503)))+(((IkReal(-1.00000000000000))*(x1482)*(x1486)))+(((IkReal(-1.00000000000000))*(x1483)*(x1487)*(x1490)))+(((IkReal(-1.00000000000000))*(sj1)*(x1498)))+(((IkReal(-1.00000000000000))*(x1482)*(x1487)*(x1499))));
evalcond[5]=((((x1499)*(x1502)))+(((x1490)*(x1504)))+(((IkReal(-1.00000000000000))*(r02)*(x1483)*(x1487)))+(((IkReal(-1.00000000000000))*(x1485)*(x1498)))+(((IkReal(-1.00000000000000))*(cj5)*(x1489)*(x1502)))+(((IkReal(-1.00000000000000))*(cj4)*(x1496)*(x1501)))+(((x1484)*(x1485)))+(((IkReal(-1.00000000000000))*(x1491)*(x1495)))+(((IkReal(-1.00000000000000))*(x1491)*(x1492)))+(((IkReal(-1.00000000000000))*(r12)*(x1482)*(x1487))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1506=((cj3)*(sj4));
IkReal x1507=((IkReal(1.00000000000000))*(sj5));
IkReal x1508=((IkReal(1.00000000000000))*(cj3)*(cj4));
if( IKabs(((gconst8)*(((((cj5)*(r10)*(x1506)))+(((IkReal(-1.00000000000000))*(r11)*(x1506)*(x1507)))+(((IkReal(-1.00000000000000))*(r12)*(x1508))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((cj5)*(r00)*(x1506)))+(((IkReal(-1.00000000000000))*(r02)*(x1508)))+(((IkReal(-1.00000000000000))*(r01)*(x1506)*(x1507))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst8)*(((((cj5)*(r10)*(x1506)))+(((IkReal(-1.00000000000000))*(r11)*(x1506)*(x1507)))+(((IkReal(-1.00000000000000))*(r12)*(x1508)))))), ((gconst8)*(((((cj5)*(r00)*(x1506)))+(((IkReal(-1.00000000000000))*(r02)*(x1508)))+(((IkReal(-1.00000000000000))*(r01)*(x1506)*(x1507)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[6];
IkReal x1509=IKsin(j0);
IkReal x1510=IKcos(j0);
IkReal x1511=((IkReal(0.707103562373095))*(cj2));
IkReal x1512=((cj1)*(cj3));
IkReal x1513=((cj4)*(r12));
IkReal x1514=((IkReal(1.00000000000000))*(sj4));
IkReal x1515=((cj1)*(sj3));
IkReal x1516=((IkReal(1.00000000000000))*(r10));
IkReal x1517=((r01)*(sj5));
IkReal x1518=((cj3)*(sj1));
IkReal x1519=((IkReal(0.707109999985348))*(cj2));
IkReal x1520=((r02)*(sj4));
IkReal x1521=((cj5)*(r01));
IkReal x1522=((IkReal(0.707103562373095))*(sj2));
IkReal x1523=((cj5)*(r00));
IkReal x1524=((sj1)*(sj3));
IkReal x1525=((IkReal(0.707109999985348))*(sj2));
IkReal x1526=((r11)*(sj5));
IkReal x1527=((sj5)*(x1509));
IkReal x1528=((IkReal(1.00000000000000))*(x1510));
IkReal x1529=((cj4)*(x1509));
IkReal x1530=((cj5)*(x1509));
IkReal x1531=((cj4)*(x1510));
IkReal x1532=((cj5)*(sj4)*(x1510));
evalcond[0]=((((x1509)*(x1521)))+(cj3)+(((IkReal(-1.00000000000000))*(sj5)*(x1510)*(x1516)))+(((r00)*(x1527)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1528))));
evalcond[1]=((((sj4)*(x1509)*(x1517)))+(((r10)*(x1532)))+(((IkReal(-1.00000000000000))*(x1513)*(x1528)))+(((IkReal(-1.00000000000000))*(x1509)*(x1514)*(x1523)))+(((IkReal(-1.00000000000000))*(x1510)*(x1514)*(x1526)))+(((r02)*(x1529))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1517)*(x1529)))+(sj3)+(((x1509)*(x1520)))+(((x1523)*(x1529)))+(((IkReal(-1.00000000000000))*(r12)*(x1510)*(x1514)))+(((IkReal(-1.00000000000000))*(cj5)*(x1516)*(x1531)))+(((x1526)*(x1531))));
evalcond[3]=((((x1519)*(x1524)))+(((x1522)*(x1524)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1528)))+(((x1515)*(x1525)))+(((IkReal(-1.00000000000000))*(x1516)*(x1527)))+(((IkReal(-1.00000000000000))*(x1511)*(x1515)))+(((IkReal(-1.00000000000000))*(x1521)*(x1528)))+(((IkReal(-1.00000000000000))*(r11)*(x1530))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1528)))+(((IkReal(-1.00000000000000))*(sj1)*(x1525)))+(((cj1)*(x1522)))+(((sj4)*(x1510)*(x1523)))+(((cj1)*(x1519)))+(((IkReal(-1.00000000000000))*(x1509)*(x1513)))+(((sj1)*(x1511)))+(((IkReal(-1.00000000000000))*(x1509)*(x1514)*(x1526)))+(((r10)*(sj4)*(x1530)))+(((IkReal(-1.00000000000000))*(x1510)*(x1514)*(x1517))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r12)*(x1509)*(x1514)))+(((IkReal(-1.00000000000000))*(r02)*(x1510)*(x1514)))+(((IkReal(-1.00000000000000))*(x1518)*(x1522)))+(((IkReal(-1.00000000000000))*(x1518)*(x1519)))+(((IkReal(-1.00000000000000))*(cj4)*(x1523)*(x1528)))+(((x1517)*(x1531)))+(((x1526)*(x1529)))+(((IkReal(-1.00000000000000))*(cj5)*(x1516)*(x1529)))+(((IkReal(-1.00000000000000))*(x1512)*(x1525)))+(((x1511)*(x1512))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1533=((cj5)*(sj3));
IkReal x1534=((IkReal(1.00000000000000))*(cj3));
IkReal x1535=((cj4)*(cj5));
IkReal x1536=((sj3)*(sj5));
IkReal x1537=((cj3)*(cj4)*(sj5));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r10)*(x1534)*(x1535)))+(((r10)*(x1536)))+(((r11)*(x1533)))+(((r11)*(x1537)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x1534))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r00)*(x1534)*(x1535)))+(((r01)*(x1537)))+(((r01)*(x1533)))+(((r00)*(x1536)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x1534))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(r10)*(x1534)*(x1535)))+(((r10)*(x1536)))+(((r11)*(x1533)))+(((r11)*(x1537)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x1534)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(r00)*(x1534)*(x1535)))+(((r01)*(x1537)))+(((r01)*(x1533)))+(((r00)*(x1536)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x1534)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x1538=IKsin(j0);
IkReal x1539=IKcos(j0);
IkReal x1540=((cj5)*(r00));
IkReal x1541=((r01)*(sj5));
IkReal x1542=((cj5)*(r10));
IkReal x1543=((IkReal(1.00000000000000))*(r12));
IkReal x1544=((r11)*(sj5));
IkReal x1545=((cj4)*(x1538));
IkReal x1546=((sj4)*(x1538));
IkReal x1547=((sj4)*(x1539));
IkReal x1548=((cj4)*(x1539));
IkReal x1549=((IkReal(1.00000000000000))*(x1539));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1549)))+(cj3)+(((cj5)*(r01)*(x1538)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1549)))+(((r00)*(sj5)*(x1538))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1544)*(x1547)))+(((IkReal(-1.00000000000000))*(x1543)*(x1548)))+(((x1541)*(x1546)))+(((r02)*(x1545)))+(((IkReal(-1.00000000000000))*(x1540)*(x1546)))+(((x1542)*(x1547))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1541)*(x1545)))+(((IkReal(-1.00000000000000))*(x1543)*(x1547)))+(sj3)+(((IkReal(-1.00000000000000))*(x1542)*(x1548)))+(((x1544)*(x1548)))+(((x1540)*(x1545)))+(((r02)*(x1546))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst10;
IkReal x1550=((IkReal(1.00000000000000))*(sj3));
gconst10=IKsign(((((IkReal(-1.00000000000000))*(x1550)*((sj2)*(sj2))))+(((IkReal(-1.00000000000000))*(x1550)*((cj2)*(cj2))))));
IkReal x1551=((IkReal(1.00000000000000))*(sj3));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1551)*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*(x1551)*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
IkReal x1552=((IkReal(1.00000000000000))*(cj3));
gconst11=IKsign(((((IkReal(-1.00000000000000))*(x1552)*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*(x1552)*((sj2)*(sj2))))));
IkReal x1553=((IkReal(1.00000000000000))*(cj3));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1553)*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*(x1553)*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1554=((sj0)*(sj4));
IkReal x1555=((IkReal(1.00000000000000))*(r12));
IkReal x1556=((cj0)*(cj4));
IkReal x1557=((r01)*(sj5));
IkReal x1558=((IkReal(1.00000000000000))*(cj5));
IkReal x1559=((cj4)*(cj5));
IkReal x1560=((IkReal(1.00000000000000))*(cj0));
IkReal x1561=((cj4)*(sj0));
IkReal x1562=((r00)*(sj0));
IkReal x1563=((npy)*(sj5));
IkReal x1564=((IkReal(1.00000000000000))*(cj4));
IkReal x1565=((cj0)*(sj4));
IkReal x1566=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj0)*(r11)*(x1558)))+(((cj5)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1560)))+(((sj5)*(x1562))));
evalcond[2]=((IkReal(-0.258003287011922))+(((sj4)*(x1563)))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((IkReal(0.165463933124939))*(sj2)))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x1558))));
evalcond[3]=((IkReal(-0.0360035672348961))+(((npx)*(sj5)))+(((IkReal(-0.165463933124939))*(cj2)))+(((cj5)*(npy)))+(((IkReal(-0.207888640466058))*(sj2))));
evalcond[4]=((IkReal(-0.00600000000000000))+(((npz)*(sj4)))+(((IkReal(-1.00000000000000))*(x1563)*(x1564)))+(((npx)*(x1559))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj4)*(x1560)*(x1566)))+(((cj5)*(r10)*(x1565)))+(((IkReal(-1.00000000000000))*(x1555)*(x1556)))+(((IkReal(-1.00000000000000))*(r00)*(x1554)*(x1558)))+(((x1554)*(x1557)))+(((r02)*(x1561))));
evalcond[6]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x1556)*(x1558)))+(((x1556)*(x1566)))+(((IkReal(-1.00000000000000))*(x1557)*(x1561)))+(((IkReal(-1.00000000000000))*(x1555)*(x1565)))+(((r02)*(x1554)))+(((x1559)*(x1562))));
evalcond[7]=((((IkReal(-1.00000000000000))*(r21)*(sj5)*(x1564)))+(((r22)*(sj4)))+(((r20)*(x1559))));
evalcond[8]=((((x1556)*(x1557)))+(((x1561)*(x1566)))+(((IkReal(-1.00000000000000))*(r00)*(x1556)*(x1558)))+(((IkReal(-1.00000000000000))*(r10)*(x1558)*(x1561)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x1560)))+(((IkReal(-1.00000000000000))*(x1554)*(x1555))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1567=((cj5)*(r11));
IkReal x1568=((r10)*(sj0));
IkReal x1569=((IkReal(0.707103562373095))*(cj2));
IkReal x1570=((r20)*(sj5));
IkReal x1571=((IkReal(0.707103562373095))*(sj2));
IkReal x1572=((IkReal(0.707109999985348))*(cj2));
IkReal x1573=((cj0)*(r00));
IkReal x1574=((IkReal(0.707109999985348))*(sj2));
IkReal x1575=((cj5)*(r21));
IkReal x1576=((sj0)*(x1571));
IkReal x1577=((sj5)*(x1572));
IkReal x1578=((cj0)*(cj5)*(r01));
if( IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(x1571)*(x1578)))+(((IkReal(-1.00000000000000))*(x1572)*(x1578)))+(((x1570)*(x1574)))+(((IkReal(-1.00000000000000))*(x1573)*(x1577)))+(((IkReal(-1.00000000000000))*(x1567)*(x1576)))+(((IkReal(-1.00000000000000))*(sj5)*(x1571)*(x1573)))+(((IkReal(-1.00000000000000))*(sj5)*(x1568)*(x1571)))+(((IkReal(-1.00000000000000))*(x1568)*(x1577)))+(((IkReal(-1.00000000000000))*(x1569)*(x1575)))+(((IkReal(-1.00000000000000))*(x1569)*(x1570)))+(((IkReal(-1.00000000000000))*(sj0)*(x1567)*(x1572)))+(((x1574)*(x1575))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((sj5)*(x1569)*(x1573)))+(((IkReal(-1.00000000000000))*(x1571)*(x1575)))+(((x1569)*(x1578)))+(((IkReal(-1.00000000000000))*(sj5)*(x1573)*(x1574)))+(((IkReal(-1.00000000000000))*(x1572)*(x1575)))+(((IkReal(-1.00000000000000))*(x1570)*(x1572)))+(((IkReal(-1.00000000000000))*(x1570)*(x1571)))+(((IkReal(-1.00000000000000))*(sj5)*(x1568)*(x1574)))+(((IkReal(-1.00000000000000))*(x1574)*(x1578)))+(((IkReal(-1.00000000000000))*(sj0)*(x1567)*(x1574)))+(((sj5)*(x1568)*(x1569)))+(((sj0)*(x1567)*(x1569))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst13)*(((((IkReal(-1.00000000000000))*(x1571)*(x1578)))+(((IkReal(-1.00000000000000))*(x1572)*(x1578)))+(((x1570)*(x1574)))+(((IkReal(-1.00000000000000))*(x1573)*(x1577)))+(((IkReal(-1.00000000000000))*(x1567)*(x1576)))+(((IkReal(-1.00000000000000))*(sj5)*(x1571)*(x1573)))+(((IkReal(-1.00000000000000))*(sj5)*(x1568)*(x1571)))+(((IkReal(-1.00000000000000))*(x1568)*(x1577)))+(((IkReal(-1.00000000000000))*(x1569)*(x1575)))+(((IkReal(-1.00000000000000))*(x1569)*(x1570)))+(((IkReal(-1.00000000000000))*(sj0)*(x1567)*(x1572)))+(((x1574)*(x1575)))))), ((gconst13)*(((((sj5)*(x1569)*(x1573)))+(((IkReal(-1.00000000000000))*(x1571)*(x1575)))+(((x1569)*(x1578)))+(((IkReal(-1.00000000000000))*(sj5)*(x1573)*(x1574)))+(((IkReal(-1.00000000000000))*(x1572)*(x1575)))+(((IkReal(-1.00000000000000))*(x1570)*(x1572)))+(((IkReal(-1.00000000000000))*(x1570)*(x1571)))+(((IkReal(-1.00000000000000))*(sj5)*(x1568)*(x1574)))+(((IkReal(-1.00000000000000))*(x1574)*(x1578)))+(((IkReal(-1.00000000000000))*(sj0)*(x1567)*(x1574)))+(((sj5)*(x1568)*(x1569)))+(((sj0)*(x1567)*(x1569)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1579=IKsin(j1);
IkReal x1580=IKcos(j1);
IkReal x1581=((IkReal(0.707109999985348))*(cj2));
IkReal x1582=((IkReal(1.00000000000000))*(cj0));
IkReal x1583=((IkReal(0.707109999985348))*(sj2));
IkReal x1584=((cj5)*(sj4));
IkReal x1585=((sj4)*(sj5));
IkReal x1586=((IkReal(1.00000000000000))*(sj0));
IkReal x1587=((sj5)*(x1586));
IkReal x1588=((IkReal(0.707103562373095))*(x1580));
IkReal x1589=((IkReal(0.707103562373095))*(x1579));
IkReal x1590=((x1579)*(x1581));
IkReal x1591=((sj2)*(x1589));
IkReal x1592=((x1580)*(x1583));
IkReal x1593=((cj2)*(x1588));
IkReal x1594=((sj2)*(x1588));
IkReal x1595=((cj2)*(x1589));
IkReal x1596=((x1580)*(x1581));
IkReal x1597=((x1579)*(x1583));
IkReal x1598=((x1595)+(x1594)+(x1596));
IkReal x1599=((x1591)+(x1590)+(x1592));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1598)))+(((cj5)*(r21)))+(x1597)+(((r20)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1593)))+(((cj4)*(r22)))+(x1599)+(((r21)*(x1585)))+(((IkReal(-1.00000000000000))*(r20)*(x1584))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1582)))+(((IkReal(-1.00000000000000))*(x1593)))+(x1599)+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1582)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1586)))+(((IkReal(-1.00000000000000))*(r10)*(x1587))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1597)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1582)))+(((cj0)*(r00)*(x1584)))+(((IkReal(-1.00000000000000))*(r01)*(x1582)*(x1585)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1586)))+(x1598)+(((r10)*(sj0)*(x1584)))+(((IkReal(-1.00000000000000))*(r11)*(x1585)*(x1586))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1600=((cj5)*(sj4));
IkReal x1601=((r21)*(sj4));
IkReal x1602=((cj5)*(r21));
IkReal x1603=((IkReal(0.707109999985348))*(cj2));
IkReal x1604=((IkReal(0.707103562373095))*(sj2));
IkReal x1605=((IkReal(0.707109999985348))*(sj2));
IkReal x1606=((cj4)*(r22));
IkReal x1607=((IkReal(0.707103562373095))*(cj2));
IkReal x1608=((r20)*(x1603));
IkReal x1609=((sj5)*(x1607));
IkReal x1610=((sj5)*(x1605));
if( IKabs(((gconst12)*(((((r20)*(x1610)))+(((IkReal(-1.00000000000000))*(r20)*(x1609)))+(((sj5)*(x1601)*(x1604)))+(((sj5)*(x1601)*(x1603)))+(((IkReal(-1.00000000000000))*(x1600)*(x1608)))+(((IkReal(-1.00000000000000))*(r20)*(x1600)*(x1604)))+(((x1603)*(x1606)))+(((x1602)*(x1605)))+(((IkReal(-1.00000000000000))*(x1602)*(x1607)))+(((x1604)*(x1606))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(x1601)*(x1609)))+(((x1601)*(x1610)))+(((r20)*(x1600)*(x1607)))+(((IkReal(-1.00000000000000))*(r20)*(x1600)*(x1605)))+(((IkReal(-1.00000000000000))*(x1602)*(x1603)))+(((IkReal(-1.00000000000000))*(x1602)*(x1604)))+(((IkReal(-1.00000000000000))*(x1606)*(x1607)))+(((x1605)*(x1606)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x1604)))+(((IkReal(-1.00000000000000))*(sj5)*(x1608))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst12)*(((((r20)*(x1610)))+(((IkReal(-1.00000000000000))*(r20)*(x1609)))+(((sj5)*(x1601)*(x1604)))+(((sj5)*(x1601)*(x1603)))+(((IkReal(-1.00000000000000))*(x1600)*(x1608)))+(((IkReal(-1.00000000000000))*(r20)*(x1600)*(x1604)))+(((x1603)*(x1606)))+(((x1602)*(x1605)))+(((IkReal(-1.00000000000000))*(x1602)*(x1607)))+(((x1604)*(x1606)))))), ((gconst12)*(((((IkReal(-1.00000000000000))*(x1601)*(x1609)))+(((x1601)*(x1610)))+(((r20)*(x1600)*(x1607)))+(((IkReal(-1.00000000000000))*(r20)*(x1600)*(x1605)))+(((IkReal(-1.00000000000000))*(x1602)*(x1603)))+(((IkReal(-1.00000000000000))*(x1602)*(x1604)))+(((IkReal(-1.00000000000000))*(x1606)*(x1607)))+(((x1605)*(x1606)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x1604)))+(((IkReal(-1.00000000000000))*(sj5)*(x1608)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1611=IKsin(j1);
IkReal x1612=IKcos(j1);
IkReal x1613=((IkReal(0.707109999985348))*(cj2));
IkReal x1614=((IkReal(1.00000000000000))*(cj0));
IkReal x1615=((IkReal(0.707109999985348))*(sj2));
IkReal x1616=((cj5)*(sj4));
IkReal x1617=((sj4)*(sj5));
IkReal x1618=((IkReal(1.00000000000000))*(sj0));
IkReal x1619=((sj5)*(x1618));
IkReal x1620=((IkReal(0.707103562373095))*(x1612));
IkReal x1621=((IkReal(0.707103562373095))*(x1611));
IkReal x1622=((x1611)*(x1613));
IkReal x1623=((sj2)*(x1621));
IkReal x1624=((x1612)*(x1615));
IkReal x1625=((cj2)*(x1620));
IkReal x1626=((sj2)*(x1620));
IkReal x1627=((cj2)*(x1621));
IkReal x1628=((x1612)*(x1613));
IkReal x1629=((x1611)*(x1615));
IkReal x1630=((x1627)+(x1626)+(x1628));
IkReal x1631=((x1623)+(x1622)+(x1624));
evalcond[0]=((((cj5)*(r21)))+(x1629)+(((IkReal(-1.00000000000000))*(x1630)))+(((r20)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x1616)))+(((cj4)*(r22)))+(((r21)*(x1617)))+(x1631)+(((IkReal(-1.00000000000000))*(x1625))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1614)))+(x1631)+(((IkReal(-1.00000000000000))*(x1625)))+(((IkReal(-1.00000000000000))*(r10)*(x1619)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1618)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1614))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x1617)*(x1618)))+(((r10)*(sj0)*(x1616)))+(x1630)+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1618)))+(((cj0)*(r00)*(x1616)))+(((IkReal(-1.00000000000000))*(x1629)))+(((IkReal(-1.00000000000000))*(r01)*(x1614)*(x1617)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1614))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1632=((sj0)*(sj4));
IkReal x1633=((IkReal(1.00000000000000))*(r12));
IkReal x1634=((cj0)*(cj4));
IkReal x1635=((r01)*(sj5));
IkReal x1636=((IkReal(1.00000000000000))*(cj5));
IkReal x1637=((cj4)*(cj5));
IkReal x1638=((IkReal(1.00000000000000))*(cj0));
IkReal x1639=((cj4)*(sj0));
IkReal x1640=((r00)*(sj0));
IkReal x1641=((npy)*(sj5));
IkReal x1642=((IkReal(1.00000000000000))*(cj4));
IkReal x1643=((cj0)*(sj4));
IkReal x1644=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((cj5)*(r01)*(sj0)))+(((sj5)*(x1640)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x1636)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1638))));
evalcond[2]=((IkReal(-0.258003287011922))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((sj4)*(x1641)))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x1636)))+(((IkReal(0.165463933124939))*(sj2))));
evalcond[3]=((IkReal(-0.0360035672348961))+(((npx)*(sj5)))+(((IkReal(-0.165463933124939))*(cj2)))+(((cj5)*(npy)))+(((IkReal(-0.207888640466058))*(sj2))));
evalcond[4]=((IkReal(-0.00600000000000000))+(((npx)*(x1637)))+(((IkReal(-1.00000000000000))*(x1641)*(x1642)))+(((npz)*(sj4))));
evalcond[5]=((((r02)*(x1639)))+(((IkReal(-1.00000000000000))*(sj4)*(x1638)*(x1644)))+(((cj5)*(r10)*(x1643)))+(((IkReal(-1.00000000000000))*(r00)*(x1632)*(x1636)))+(((IkReal(-1.00000000000000))*(x1633)*(x1634)))+(((x1632)*(x1635))));
evalcond[6]=((IkReal(1.00000000000000))+(((r02)*(x1632)))+(((x1637)*(x1640)))+(((IkReal(-1.00000000000000))*(r10)*(x1634)*(x1636)))+(((IkReal(-1.00000000000000))*(x1635)*(x1639)))+(((IkReal(-1.00000000000000))*(x1633)*(x1643)))+(((x1634)*(x1644))));
evalcond[7]=((((r20)*(x1637)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x1642))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r02)*(sj4)*(x1638)))+(((IkReal(-1.00000000000000))*(r10)*(x1636)*(x1639)))+(((IkReal(-1.00000000000000))*(x1632)*(x1633)))+(((x1639)*(x1644)))+(((IkReal(-1.00000000000000))*(r00)*(x1634)*(x1636)))+(((x1634)*(x1635))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1645=((cj5)*(r11));
IkReal x1646=((r10)*(sj0));
IkReal x1647=((IkReal(0.707103562373095))*(cj2));
IkReal x1648=((r20)*(sj5));
IkReal x1649=((IkReal(0.707103562373095))*(sj2));
IkReal x1650=((IkReal(0.707109999985348))*(cj2));
IkReal x1651=((cj0)*(r00));
IkReal x1652=((IkReal(0.707109999985348))*(sj2));
IkReal x1653=((cj5)*(r21));
IkReal x1654=((sj0)*(x1649));
IkReal x1655=((sj5)*(x1650));
IkReal x1656=((cj0)*(cj5)*(r01));
if( IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(x1647)*(x1648)))+(((IkReal(-1.00000000000000))*(sj5)*(x1646)*(x1649)))+(((IkReal(-1.00000000000000))*(sj0)*(x1645)*(x1650)))+(((x1648)*(x1652)))+(((IkReal(-1.00000000000000))*(x1647)*(x1653)))+(((IkReal(-1.00000000000000))*(x1646)*(x1655)))+(((IkReal(-1.00000000000000))*(x1650)*(x1656)))+(((IkReal(-1.00000000000000))*(x1645)*(x1654)))+(((IkReal(-1.00000000000000))*(x1649)*(x1656)))+(((IkReal(-1.00000000000000))*(sj5)*(x1649)*(x1651)))+(((IkReal(-1.00000000000000))*(x1651)*(x1655)))+(((x1652)*(x1653))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((sj5)*(x1646)*(x1647)))+(((IkReal(-1.00000000000000))*(x1652)*(x1656)))+(((IkReal(-1.00000000000000))*(sj0)*(x1645)*(x1652)))+(((IkReal(-1.00000000000000))*(sj5)*(x1651)*(x1652)))+(((sj0)*(x1645)*(x1647)))+(((IkReal(-1.00000000000000))*(sj5)*(x1646)*(x1652)))+(((IkReal(-1.00000000000000))*(x1650)*(x1653)))+(((x1647)*(x1656)))+(((IkReal(-1.00000000000000))*(x1648)*(x1649)))+(((IkReal(-1.00000000000000))*(x1649)*(x1653)))+(((IkReal(-1.00000000000000))*(x1648)*(x1650)))+(((sj5)*(x1647)*(x1651))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst15)*(((((IkReal(-1.00000000000000))*(x1647)*(x1648)))+(((IkReal(-1.00000000000000))*(sj5)*(x1646)*(x1649)))+(((IkReal(-1.00000000000000))*(sj0)*(x1645)*(x1650)))+(((x1648)*(x1652)))+(((IkReal(-1.00000000000000))*(x1647)*(x1653)))+(((IkReal(-1.00000000000000))*(x1646)*(x1655)))+(((IkReal(-1.00000000000000))*(x1650)*(x1656)))+(((IkReal(-1.00000000000000))*(x1645)*(x1654)))+(((IkReal(-1.00000000000000))*(x1649)*(x1656)))+(((IkReal(-1.00000000000000))*(sj5)*(x1649)*(x1651)))+(((IkReal(-1.00000000000000))*(x1651)*(x1655)))+(((x1652)*(x1653)))))), ((gconst15)*(((((sj5)*(x1646)*(x1647)))+(((IkReal(-1.00000000000000))*(x1652)*(x1656)))+(((IkReal(-1.00000000000000))*(sj0)*(x1645)*(x1652)))+(((IkReal(-1.00000000000000))*(sj5)*(x1651)*(x1652)))+(((sj0)*(x1645)*(x1647)))+(((IkReal(-1.00000000000000))*(sj5)*(x1646)*(x1652)))+(((IkReal(-1.00000000000000))*(x1650)*(x1653)))+(((x1647)*(x1656)))+(((IkReal(-1.00000000000000))*(x1648)*(x1649)))+(((IkReal(-1.00000000000000))*(x1649)*(x1653)))+(((IkReal(-1.00000000000000))*(x1648)*(x1650)))+(((sj5)*(x1647)*(x1651)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1657=IKsin(j1);
IkReal x1658=IKcos(j1);
IkReal x1659=((IkReal(0.707109999985348))*(cj2));
IkReal x1660=((IkReal(1.00000000000000))*(cj0));
IkReal x1661=((IkReal(0.707109999985348))*(sj2));
IkReal x1662=((cj5)*(sj4));
IkReal x1663=((sj4)*(sj5));
IkReal x1664=((IkReal(1.00000000000000))*(sj0));
IkReal x1665=((sj5)*(x1664));
IkReal x1666=((IkReal(0.707103562373095))*(x1658));
IkReal x1667=((IkReal(0.707103562373095))*(x1657));
IkReal x1668=((x1657)*(x1659));
IkReal x1669=((sj2)*(x1667));
IkReal x1670=((x1658)*(x1661));
IkReal x1671=((cj2)*(x1666));
IkReal x1672=((sj2)*(x1666));
IkReal x1673=((cj2)*(x1667));
IkReal x1674=((x1658)*(x1659));
IkReal x1675=((x1657)*(x1661));
IkReal x1676=((x1674)+(x1672)+(x1673));
IkReal x1677=((x1669)+(x1668)+(x1670));
evalcond[0]=((((cj5)*(r21)))+(x1675)+(((IkReal(-1.00000000000000))*(x1676)))+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(x1677)+(((IkReal(-1.00000000000000))*(r20)*(x1662)))+(((IkReal(-1.00000000000000))*(x1671)))+(((r21)*(x1663))));
evalcond[2]=((x1677)+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1664)))+(((IkReal(-1.00000000000000))*(r10)*(x1665)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1660)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1660)))+(((IkReal(-1.00000000000000))*(x1671))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1664)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1660)))+(((IkReal(-1.00000000000000))*(r11)*(x1663)*(x1664)))+(x1676)+(((IkReal(-1.00000000000000))*(r01)*(x1660)*(x1663)))+(((r10)*(sj0)*(x1662)))+(((cj0)*(r00)*(x1662)))+(((IkReal(-1.00000000000000))*(x1675))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1678=((cj5)*(sj4));
IkReal x1679=((r21)*(sj4));
IkReal x1680=((cj5)*(r21));
IkReal x1681=((IkReal(0.707109999985348))*(cj2));
IkReal x1682=((IkReal(0.707103562373095))*(sj2));
IkReal x1683=((IkReal(0.707109999985348))*(sj2));
IkReal x1684=((cj4)*(r22));
IkReal x1685=((IkReal(0.707103562373095))*(cj2));
IkReal x1686=((r20)*(x1681));
IkReal x1687=((sj5)*(x1685));
IkReal x1688=((sj5)*(x1683));
if( IKabs(((gconst14)*(((((x1681)*(x1684)))+(((x1680)*(x1683)))+(((IkReal(-1.00000000000000))*(r20)*(x1687)))+(((IkReal(-1.00000000000000))*(x1678)*(x1686)))+(((IkReal(-1.00000000000000))*(x1680)*(x1685)))+(((x1682)*(x1684)))+(((sj5)*(x1679)*(x1682)))+(((sj5)*(x1679)*(x1681)))+(((IkReal(-1.00000000000000))*(r20)*(x1678)*(x1682)))+(((r20)*(x1688))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(sj5)*(x1686)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x1682)))+(((IkReal(-1.00000000000000))*(x1679)*(x1687)))+(((IkReal(-1.00000000000000))*(x1680)*(x1682)))+(((IkReal(-1.00000000000000))*(x1680)*(x1681)))+(((x1679)*(x1688)))+(((r20)*(x1678)*(x1685)))+(((IkReal(-1.00000000000000))*(r20)*(x1678)*(x1683)))+(((x1683)*(x1684)))+(((IkReal(-1.00000000000000))*(x1684)*(x1685))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst14)*(((((x1681)*(x1684)))+(((x1680)*(x1683)))+(((IkReal(-1.00000000000000))*(r20)*(x1687)))+(((IkReal(-1.00000000000000))*(x1678)*(x1686)))+(((IkReal(-1.00000000000000))*(x1680)*(x1685)))+(((x1682)*(x1684)))+(((sj5)*(x1679)*(x1682)))+(((sj5)*(x1679)*(x1681)))+(((IkReal(-1.00000000000000))*(r20)*(x1678)*(x1682)))+(((r20)*(x1688)))))), ((gconst14)*(((((IkReal(-1.00000000000000))*(sj5)*(x1686)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x1682)))+(((IkReal(-1.00000000000000))*(x1679)*(x1687)))+(((IkReal(-1.00000000000000))*(x1680)*(x1682)))+(((IkReal(-1.00000000000000))*(x1680)*(x1681)))+(((x1679)*(x1688)))+(((r20)*(x1678)*(x1685)))+(((IkReal(-1.00000000000000))*(r20)*(x1678)*(x1683)))+(((x1683)*(x1684)))+(((IkReal(-1.00000000000000))*(x1684)*(x1685)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1689=IKsin(j1);
IkReal x1690=IKcos(j1);
IkReal x1691=((IkReal(0.707109999985348))*(cj2));
IkReal x1692=((IkReal(1.00000000000000))*(cj0));
IkReal x1693=((IkReal(0.707109999985348))*(sj2));
IkReal x1694=((cj5)*(sj4));
IkReal x1695=((sj4)*(sj5));
IkReal x1696=((IkReal(1.00000000000000))*(sj0));
IkReal x1697=((sj5)*(x1696));
IkReal x1698=((IkReal(0.707103562373095))*(x1690));
IkReal x1699=((IkReal(0.707103562373095))*(x1689));
IkReal x1700=((x1689)*(x1691));
IkReal x1701=((sj2)*(x1699));
IkReal x1702=((x1690)*(x1693));
IkReal x1703=((cj2)*(x1698));
IkReal x1704=((sj2)*(x1698));
IkReal x1705=((cj2)*(x1699));
IkReal x1706=((x1690)*(x1691));
IkReal x1707=((x1689)*(x1693));
IkReal x1708=((x1704)+(x1705)+(x1706));
IkReal x1709=((x1700)+(x1701)+(x1702));
evalcond[0]=((((cj5)*(r21)))+(x1707)+(((IkReal(-1.00000000000000))*(x1708)))+(((r20)*(sj5))));
evalcond[1]=((((r21)*(x1695)))+(((cj4)*(r22)))+(x1709)+(((IkReal(-1.00000000000000))*(x1703)))+(((IkReal(-1.00000000000000))*(r20)*(x1694))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1696)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1692)))+(x1709)+(((IkReal(-1.00000000000000))*(x1703)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1692)))+(((IkReal(-1.00000000000000))*(r10)*(x1697))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1696)))+(((IkReal(-1.00000000000000))*(r11)*(x1695)*(x1696)))+(x1708)+(((cj0)*(r00)*(x1694)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1692)))+(((IkReal(-1.00000000000000))*(x1707)))+(((r10)*(sj0)*(x1694)))+(((IkReal(-1.00000000000000))*(r01)*(x1692)*(x1695))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1710=((sj0)*(sj4));
IkReal x1711=((IkReal(1.00000000000000))*(r12));
IkReal x1712=((cj0)*(cj4));
IkReal x1713=((r01)*(sj5));
IkReal x1714=((IkReal(1.00000000000000))*(cj5));
IkReal x1715=((cj4)*(cj5));
IkReal x1716=((IkReal(1.00000000000000))*(cj0));
IkReal x1717=((cj4)*(sj0));
IkReal x1718=((r00)*(sj0));
IkReal x1719=((npy)*(sj5));
IkReal x1720=((IkReal(1.00000000000000))*(cj4));
IkReal x1721=((cj0)*(sj4));
IkReal x1722=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((cj5)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1716)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x1714)))+(((sj5)*(x1718))));
evalcond[2]=((IkReal(-0.258003287011922))+(((sj4)*(x1719)))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x1714)))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((IkReal(0.165463933124939))*(sj2))));
evalcond[3]=((IkReal(0.0240035672348961))+(((npx)*(sj5)))+(((IkReal(0.207888640466058))*(sj2)))+(((cj5)*(npy)))+(((IkReal(0.165463933124939))*(cj2))));
evalcond[4]=((IkReal(0.00600000000000000))+(((npz)*(sj4)))+(((IkReal(-1.00000000000000))*(x1719)*(x1720)))+(((npx)*(x1715))));
evalcond[5]=((((x1710)*(x1713)))+(((r02)*(x1717)))+(((IkReal(-1.00000000000000))*(x1711)*(x1712)))+(((IkReal(-1.00000000000000))*(r00)*(x1710)*(x1714)))+(((IkReal(-1.00000000000000))*(sj4)*(x1716)*(x1722)))+(((cj5)*(r10)*(x1721))));
evalcond[6]=((IkReal(-1.00000000000000))+(((r02)*(x1710)))+(((IkReal(-1.00000000000000))*(r10)*(x1712)*(x1714)))+(((IkReal(-1.00000000000000))*(x1713)*(x1717)))+(((x1715)*(x1718)))+(((x1712)*(x1722)))+(((IkReal(-1.00000000000000))*(x1711)*(x1721))));
evalcond[7]=((((IkReal(-1.00000000000000))*(r21)*(sj5)*(x1720)))+(((r22)*(sj4)))+(((r20)*(x1715))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x1710)*(x1711)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x1716)))+(((IkReal(-1.00000000000000))*(r10)*(x1714)*(x1717)))+(((x1712)*(x1713)))+(((x1717)*(x1722)))+(((IkReal(-1.00000000000000))*(r00)*(x1712)*(x1714))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1723=((cj5)*(r11));
IkReal x1724=((r10)*(sj0));
IkReal x1725=((IkReal(0.707103562373095))*(cj2));
IkReal x1726=((r20)*(sj5));
IkReal x1727=((IkReal(0.707103562373095))*(sj2));
IkReal x1728=((IkReal(0.707109999985348))*(cj2));
IkReal x1729=((cj0)*(r00));
IkReal x1730=((IkReal(0.707109999985348))*(sj2));
IkReal x1731=((cj5)*(r21));
IkReal x1732=((sj0)*(x1727));
IkReal x1733=((sj5)*(x1728));
IkReal x1734=((cj0)*(cj5)*(r01));
if( IKabs(((gconst17)*(((((x1723)*(x1732)))+(((x1728)*(x1734)))+(((x1725)*(x1726)))+(((x1724)*(x1733)))+(((x1725)*(x1731)))+(((IkReal(-1.00000000000000))*(x1726)*(x1730)))+(((sj0)*(x1723)*(x1728)))+(((x1729)*(x1733)))+(((sj5)*(x1724)*(x1727)))+(((IkReal(-1.00000000000000))*(x1730)*(x1731)))+(((sj5)*(x1727)*(x1729)))+(((x1727)*(x1734))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((x1728)*(x1731)))+(((x1730)*(x1734)))+(((IkReal(-1.00000000000000))*(sj5)*(x1724)*(x1725)))+(((x1726)*(x1728)))+(((x1726)*(x1727)))+(((sj0)*(x1723)*(x1730)))+(((sj5)*(x1724)*(x1730)))+(((sj5)*(x1729)*(x1730)))+(((x1727)*(x1731)))+(((IkReal(-1.00000000000000))*(x1725)*(x1734)))+(((IkReal(-1.00000000000000))*(sj0)*(x1723)*(x1725)))+(((IkReal(-1.00000000000000))*(sj5)*(x1725)*(x1729))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst17)*(((((x1723)*(x1732)))+(((x1728)*(x1734)))+(((x1725)*(x1726)))+(((x1724)*(x1733)))+(((x1725)*(x1731)))+(((IkReal(-1.00000000000000))*(x1726)*(x1730)))+(((sj0)*(x1723)*(x1728)))+(((x1729)*(x1733)))+(((sj5)*(x1724)*(x1727)))+(((IkReal(-1.00000000000000))*(x1730)*(x1731)))+(((sj5)*(x1727)*(x1729)))+(((x1727)*(x1734)))))), ((gconst17)*(((((x1728)*(x1731)))+(((x1730)*(x1734)))+(((IkReal(-1.00000000000000))*(sj5)*(x1724)*(x1725)))+(((x1726)*(x1728)))+(((x1726)*(x1727)))+(((sj0)*(x1723)*(x1730)))+(((sj5)*(x1724)*(x1730)))+(((sj5)*(x1729)*(x1730)))+(((x1727)*(x1731)))+(((IkReal(-1.00000000000000))*(x1725)*(x1734)))+(((IkReal(-1.00000000000000))*(sj0)*(x1723)*(x1725)))+(((IkReal(-1.00000000000000))*(sj5)*(x1725)*(x1729)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1735=IKcos(j1);
IkReal x1736=IKsin(j1);
IkReal x1737=((IkReal(0.707109999985348))*(cj2));
IkReal x1738=((IkReal(1.00000000000000))*(cj0));
IkReal x1739=((IkReal(0.707109999985348))*(sj2));
IkReal x1740=((cj5)*(sj4));
IkReal x1741=((sj4)*(sj5));
IkReal x1742=((IkReal(1.00000000000000))*(sj0));
IkReal x1743=((sj5)*(x1742));
IkReal x1744=((IkReal(0.707103562373095))*(x1735));
IkReal x1745=((IkReal(0.707103562373095))*(x1736));
IkReal x1746=((cj2)*(x1744));
IkReal x1747=((x1736)*(x1737));
IkReal x1748=((sj2)*(x1745));
IkReal x1749=((x1735)*(x1739));
IkReal x1750=((sj2)*(x1744));
IkReal x1751=((cj2)*(x1745));
IkReal x1752=((x1735)*(x1737));
IkReal x1753=((x1736)*(x1739));
IkReal x1754=((x1752)+(x1751)+(x1750));
IkReal x1755=((x1748)+(x1749)+(x1747));
evalcond[0]=((((cj5)*(r21)))+(x1754)+(((IkReal(-1.00000000000000))*(x1753)))+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(x1755)+(((IkReal(-1.00000000000000))*(r20)*(x1740)))+(((r21)*(x1741)))+(((IkReal(-1.00000000000000))*(x1746))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1738)))+(x1746)+(((IkReal(-1.00000000000000))*(r10)*(x1743)))+(((IkReal(-1.00000000000000))*(x1755)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1742)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1738))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1742)))+(((IkReal(-1.00000000000000))*(r11)*(x1741)*(x1742)))+(x1754)+(((r10)*(sj0)*(x1740)))+(((IkReal(-1.00000000000000))*(x1753)))+(((IkReal(-1.00000000000000))*(r01)*(x1738)*(x1741)))+(((cj0)*(r00)*(x1740)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1738))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1756=((cj5)*(sj4));
IkReal x1757=((r21)*(sj4));
IkReal x1758=((cj5)*(r21));
IkReal x1759=((IkReal(0.707109999985348))*(cj2));
IkReal x1760=((IkReal(0.707103562373095))*(sj2));
IkReal x1761=((IkReal(0.707109999985348))*(sj2));
IkReal x1762=((cj4)*(r22));
IkReal x1763=((IkReal(0.707103562373095))*(cj2));
IkReal x1764=((r20)*(x1759));
IkReal x1765=((sj5)*(x1763));
IkReal x1766=((sj5)*(x1761));
if( IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(sj5)*(x1757)*(x1760)))+(((r20)*(x1766)))+(((IkReal(-1.00000000000000))*(r20)*(x1765)))+(((IkReal(-1.00000000000000))*(x1759)*(x1762)))+(((x1756)*(x1764)))+(((IkReal(-1.00000000000000))*(x1760)*(x1762)))+(((x1758)*(x1761)))+(((IkReal(-1.00000000000000))*(x1758)*(x1763)))+(((IkReal(-1.00000000000000))*(sj5)*(x1757)*(x1759)))+(((r20)*(x1756)*(x1760))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(r20)*(sj5)*(x1760)))+(((IkReal(-1.00000000000000))*(sj5)*(x1764)))+(((IkReal(-1.00000000000000))*(x1758)*(x1759)))+(((IkReal(-1.00000000000000))*(x1761)*(x1762)))+(((x1757)*(x1765)))+(((IkReal(-1.00000000000000))*(x1757)*(x1766)))+(((x1762)*(x1763)))+(((IkReal(-1.00000000000000))*(x1758)*(x1760)))+(((r20)*(x1756)*(x1761)))+(((IkReal(-1.00000000000000))*(r20)*(x1756)*(x1763))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst16)*(((((IkReal(-1.00000000000000))*(sj5)*(x1757)*(x1760)))+(((r20)*(x1766)))+(((IkReal(-1.00000000000000))*(r20)*(x1765)))+(((IkReal(-1.00000000000000))*(x1759)*(x1762)))+(((x1756)*(x1764)))+(((IkReal(-1.00000000000000))*(x1760)*(x1762)))+(((x1758)*(x1761)))+(((IkReal(-1.00000000000000))*(x1758)*(x1763)))+(((IkReal(-1.00000000000000))*(sj5)*(x1757)*(x1759)))+(((r20)*(x1756)*(x1760)))))), ((gconst16)*(((((IkReal(-1.00000000000000))*(r20)*(sj5)*(x1760)))+(((IkReal(-1.00000000000000))*(sj5)*(x1764)))+(((IkReal(-1.00000000000000))*(x1758)*(x1759)))+(((IkReal(-1.00000000000000))*(x1761)*(x1762)))+(((x1757)*(x1765)))+(((IkReal(-1.00000000000000))*(x1757)*(x1766)))+(((x1762)*(x1763)))+(((IkReal(-1.00000000000000))*(x1758)*(x1760)))+(((r20)*(x1756)*(x1761)))+(((IkReal(-1.00000000000000))*(r20)*(x1756)*(x1763)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1767=IKcos(j1);
IkReal x1768=IKsin(j1);
IkReal x1769=((IkReal(0.707109999985348))*(cj2));
IkReal x1770=((IkReal(1.00000000000000))*(cj0));
IkReal x1771=((IkReal(0.707109999985348))*(sj2));
IkReal x1772=((cj5)*(sj4));
IkReal x1773=((sj4)*(sj5));
IkReal x1774=((IkReal(1.00000000000000))*(sj0));
IkReal x1775=((sj5)*(x1774));
IkReal x1776=((IkReal(0.707103562373095))*(x1767));
IkReal x1777=((IkReal(0.707103562373095))*(x1768));
IkReal x1778=((cj2)*(x1776));
IkReal x1779=((x1768)*(x1769));
IkReal x1780=((sj2)*(x1777));
IkReal x1781=((x1767)*(x1771));
IkReal x1782=((sj2)*(x1776));
IkReal x1783=((cj2)*(x1777));
IkReal x1784=((x1767)*(x1769));
IkReal x1785=((x1768)*(x1771));
IkReal x1786=((x1782)+(x1783)+(x1784));
IkReal x1787=((x1780)+(x1781)+(x1779));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x1785)))+(x1786)+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(x1787)+(((IkReal(-1.00000000000000))*(x1778)))+(((r21)*(x1773)))+(((IkReal(-1.00000000000000))*(r20)*(x1772))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1787)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1774)))+(x1778)+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1770)))+(((IkReal(-1.00000000000000))*(r10)*(x1775)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1770))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1785)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1770)))+(((IkReal(-1.00000000000000))*(r11)*(x1773)*(x1774)))+(x1786)+(((r10)*(sj0)*(x1772)))+(((IkReal(-1.00000000000000))*(r01)*(x1770)*(x1773)))+(((cj0)*(r00)*(x1772)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1774))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1788=((sj0)*(sj4));
IkReal x1789=((IkReal(1.00000000000000))*(r12));
IkReal x1790=((cj0)*(cj4));
IkReal x1791=((r01)*(sj5));
IkReal x1792=((IkReal(1.00000000000000))*(cj5));
IkReal x1793=((cj4)*(cj5));
IkReal x1794=((IkReal(1.00000000000000))*(cj0));
IkReal x1795=((cj4)*(sj0));
IkReal x1796=((r00)*(sj0));
IkReal x1797=((npy)*(sj5));
IkReal x1798=((IkReal(1.00000000000000))*(cj4));
IkReal x1799=((cj0)*(sj4));
IkReal x1800=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj0)*(r11)*(x1792)))+(((cj5)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1794)))+(((sj5)*(x1796))));
evalcond[2]=((IkReal(-0.258003287011922))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((sj4)*(x1797)))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x1792)))+(((IkReal(0.165463933124939))*(sj2))));
evalcond[3]=((IkReal(0.0240035672348961))+(((npx)*(sj5)))+(((IkReal(0.207888640466058))*(sj2)))+(((cj5)*(npy)))+(((IkReal(0.165463933124939))*(cj2))));
evalcond[4]=((IkReal(0.00600000000000000))+(((npz)*(sj4)))+(((npx)*(x1793)))+(((IkReal(-1.00000000000000))*(x1797)*(x1798))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x1788)*(x1792)))+(((IkReal(-1.00000000000000))*(x1789)*(x1790)))+(((r02)*(x1795)))+(((IkReal(-1.00000000000000))*(sj4)*(x1794)*(x1800)))+(((x1788)*(x1791)))+(((cj5)*(r10)*(x1799))));
evalcond[6]=((IkReal(-1.00000000000000))+(((x1793)*(x1796)))+(((IkReal(-1.00000000000000))*(r10)*(x1790)*(x1792)))+(((IkReal(-1.00000000000000))*(x1789)*(x1799)))+(((IkReal(-1.00000000000000))*(x1791)*(x1795)))+(((r02)*(x1788)))+(((x1790)*(x1800))));
evalcond[7]=((((IkReal(-1.00000000000000))*(r21)*(sj5)*(x1798)))+(((r22)*(sj4)))+(((r20)*(x1793))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r10)*(x1792)*(x1795)))+(((x1795)*(x1800)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x1794)))+(((IkReal(-1.00000000000000))*(x1788)*(x1789)))+(((IkReal(-1.00000000000000))*(r00)*(x1790)*(x1792)))+(((x1790)*(x1791))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst18;
gconst18=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst19;
gconst19=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1801=((cj5)*(r11));
IkReal x1802=((r10)*(sj0));
IkReal x1803=((IkReal(0.707103562373095))*(cj2));
IkReal x1804=((r20)*(sj5));
IkReal x1805=((IkReal(0.707103562373095))*(sj2));
IkReal x1806=((IkReal(0.707109999985348))*(cj2));
IkReal x1807=((cj0)*(r00));
IkReal x1808=((IkReal(0.707109999985348))*(sj2));
IkReal x1809=((cj5)*(r21));
IkReal x1810=((sj0)*(x1805));
IkReal x1811=((sj5)*(x1806));
IkReal x1812=((cj0)*(cj5)*(r01));
if( IKabs(((gconst19)*(((((x1802)*(x1811)))+(((x1805)*(x1812)))+(((IkReal(-1.00000000000000))*(x1804)*(x1808)))+(((sj5)*(x1805)*(x1807)))+(((x1803)*(x1804)))+(((x1803)*(x1809)))+(((x1807)*(x1811)))+(((IkReal(-1.00000000000000))*(x1808)*(x1809)))+(((sj5)*(x1802)*(x1805)))+(((x1806)*(x1812)))+(((x1801)*(x1810)))+(((sj0)*(x1801)*(x1806))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((IkReal(-1.00000000000000))*(sj5)*(x1802)*(x1803)))+(((IkReal(-1.00000000000000))*(sj0)*(x1801)*(x1803)))+(((x1806)*(x1809)))+(((IkReal(-1.00000000000000))*(x1803)*(x1812)))+(((x1808)*(x1812)))+(((sj5)*(x1807)*(x1808)))+(((sj5)*(x1802)*(x1808)))+(((x1805)*(x1809)))+(((IkReal(-1.00000000000000))*(sj5)*(x1803)*(x1807)))+(((x1804)*(x1806)))+(((x1804)*(x1805)))+(((sj0)*(x1801)*(x1808))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst19)*(((((x1802)*(x1811)))+(((x1805)*(x1812)))+(((IkReal(-1.00000000000000))*(x1804)*(x1808)))+(((sj5)*(x1805)*(x1807)))+(((x1803)*(x1804)))+(((x1803)*(x1809)))+(((x1807)*(x1811)))+(((IkReal(-1.00000000000000))*(x1808)*(x1809)))+(((sj5)*(x1802)*(x1805)))+(((x1806)*(x1812)))+(((x1801)*(x1810)))+(((sj0)*(x1801)*(x1806)))))), ((gconst19)*(((((IkReal(-1.00000000000000))*(sj5)*(x1802)*(x1803)))+(((IkReal(-1.00000000000000))*(sj0)*(x1801)*(x1803)))+(((x1806)*(x1809)))+(((IkReal(-1.00000000000000))*(x1803)*(x1812)))+(((x1808)*(x1812)))+(((sj5)*(x1807)*(x1808)))+(((sj5)*(x1802)*(x1808)))+(((x1805)*(x1809)))+(((IkReal(-1.00000000000000))*(sj5)*(x1803)*(x1807)))+(((x1804)*(x1806)))+(((x1804)*(x1805)))+(((sj0)*(x1801)*(x1808)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1813=IKcos(j1);
IkReal x1814=IKsin(j1);
IkReal x1815=((IkReal(0.707109999985348))*(cj2));
IkReal x1816=((IkReal(1.00000000000000))*(cj0));
IkReal x1817=((IkReal(0.707109999985348))*(sj2));
IkReal x1818=((cj5)*(sj4));
IkReal x1819=((sj4)*(sj5));
IkReal x1820=((IkReal(1.00000000000000))*(sj0));
IkReal x1821=((sj5)*(x1820));
IkReal x1822=((IkReal(0.707103562373095))*(x1813));
IkReal x1823=((IkReal(0.707103562373095))*(x1814));
IkReal x1824=((cj2)*(x1822));
IkReal x1825=((x1814)*(x1815));
IkReal x1826=((sj2)*(x1823));
IkReal x1827=((x1813)*(x1817));
IkReal x1828=((sj2)*(x1822));
IkReal x1829=((cj2)*(x1823));
IkReal x1830=((x1813)*(x1815));
IkReal x1831=((x1814)*(x1817));
IkReal x1832=((x1829)+(x1828)+(x1830));
IkReal x1833=((x1825)+(x1827)+(x1826));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x1831)))+(x1832)+(((r20)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1824)))+(((cj4)*(r22)))+(x1833)+(((r21)*(x1819)))+(((IkReal(-1.00000000000000))*(r20)*(x1818))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1816)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1816)))+(((IkReal(-1.00000000000000))*(x1833)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1820)))+(x1824)+(((IkReal(-1.00000000000000))*(r10)*(x1821))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1820)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1816)))+(((IkReal(-1.00000000000000))*(r01)*(x1816)*(x1819)))+(((IkReal(-1.00000000000000))*(r11)*(x1819)*(x1820)))+(((IkReal(-1.00000000000000))*(x1831)))+(((cj0)*(r00)*(x1818)))+(((r10)*(sj0)*(x1818)))+(x1832));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1834=((cj5)*(sj4));
IkReal x1835=((r21)*(sj4));
IkReal x1836=((cj5)*(r21));
IkReal x1837=((IkReal(0.707109999985348))*(cj2));
IkReal x1838=((IkReal(0.707103562373095))*(sj2));
IkReal x1839=((IkReal(0.707109999985348))*(sj2));
IkReal x1840=((cj4)*(r22));
IkReal x1841=((IkReal(0.707103562373095))*(cj2));
IkReal x1842=((r20)*(x1837));
IkReal x1843=((sj5)*(x1841));
IkReal x1844=((sj5)*(x1839));
if( IKabs(((gconst18)*(((((r20)*(x1834)*(x1838)))+(((IkReal(-1.00000000000000))*(sj5)*(x1835)*(x1838)))+(((IkReal(-1.00000000000000))*(sj5)*(x1835)*(x1837)))+(((x1834)*(x1842)))+(((r20)*(x1844)))+(((IkReal(-1.00000000000000))*(x1836)*(x1841)))+(((IkReal(-1.00000000000000))*(r20)*(x1843)))+(((IkReal(-1.00000000000000))*(x1837)*(x1840)))+(((IkReal(-1.00000000000000))*(x1838)*(x1840)))+(((x1836)*(x1839))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((r20)*(x1834)*(x1839)))+(((IkReal(-1.00000000000000))*(x1836)*(x1837)))+(((IkReal(-1.00000000000000))*(x1836)*(x1838)))+(((IkReal(-1.00000000000000))*(sj5)*(x1842)))+(((IkReal(-1.00000000000000))*(x1839)*(x1840)))+(((x1840)*(x1841)))+(((IkReal(-1.00000000000000))*(x1835)*(x1844)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x1838)))+(((x1835)*(x1843)))+(((IkReal(-1.00000000000000))*(r20)*(x1834)*(x1841))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst18)*(((((r20)*(x1834)*(x1838)))+(((IkReal(-1.00000000000000))*(sj5)*(x1835)*(x1838)))+(((IkReal(-1.00000000000000))*(sj5)*(x1835)*(x1837)))+(((x1834)*(x1842)))+(((r20)*(x1844)))+(((IkReal(-1.00000000000000))*(x1836)*(x1841)))+(((IkReal(-1.00000000000000))*(r20)*(x1843)))+(((IkReal(-1.00000000000000))*(x1837)*(x1840)))+(((IkReal(-1.00000000000000))*(x1838)*(x1840)))+(((x1836)*(x1839)))))), ((gconst18)*(((((r20)*(x1834)*(x1839)))+(((IkReal(-1.00000000000000))*(x1836)*(x1837)))+(((IkReal(-1.00000000000000))*(x1836)*(x1838)))+(((IkReal(-1.00000000000000))*(sj5)*(x1842)))+(((IkReal(-1.00000000000000))*(x1839)*(x1840)))+(((x1840)*(x1841)))+(((IkReal(-1.00000000000000))*(x1835)*(x1844)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x1838)))+(((x1835)*(x1843)))+(((IkReal(-1.00000000000000))*(r20)*(x1834)*(x1841)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1845=IKcos(j1);
IkReal x1846=IKsin(j1);
IkReal x1847=((IkReal(0.707109999985348))*(cj2));
IkReal x1848=((IkReal(1.00000000000000))*(cj0));
IkReal x1849=((IkReal(0.707109999985348))*(sj2));
IkReal x1850=((cj5)*(sj4));
IkReal x1851=((sj4)*(sj5));
IkReal x1852=((IkReal(1.00000000000000))*(sj0));
IkReal x1853=((sj5)*(x1852));
IkReal x1854=((IkReal(0.707103562373095))*(x1845));
IkReal x1855=((IkReal(0.707103562373095))*(x1846));
IkReal x1856=((cj2)*(x1854));
IkReal x1857=((x1846)*(x1847));
IkReal x1858=((sj2)*(x1855));
IkReal x1859=((x1845)*(x1849));
IkReal x1860=((sj2)*(x1854));
IkReal x1861=((cj2)*(x1855));
IkReal x1862=((x1845)*(x1847));
IkReal x1863=((x1846)*(x1849));
IkReal x1864=((x1861)+(x1860)+(x1862));
IkReal x1865=((x1858)+(x1859)+(x1857));
evalcond[0]=((((cj5)*(r21)))+(x1864)+(((IkReal(-1.00000000000000))*(x1863)))+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x1850)))+(x1865)+(((r21)*(x1851)))+(((IkReal(-1.00000000000000))*(x1856))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1848)))+(x1856)+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1852)))+(((IkReal(-1.00000000000000))*(x1865)))+(((IkReal(-1.00000000000000))*(r10)*(x1853)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1848))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x1851)*(x1852)))+(((IkReal(-1.00000000000000))*(r01)*(x1848)*(x1851)))+(((r10)*(sj0)*(x1850)))+(x1864)+(((cj0)*(r00)*(x1850)))+(((IkReal(-1.00000000000000))*(x1863)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1848)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1852))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1866=((IkReal(0.707109999985348))*(sj2));
IkReal x1867=((r22)*(sj4));
IkReal x1868=((cj5)*(r20));
IkReal x1869=((r21)*(sj5));
IkReal x1870=((IkReal(0.707109999985348))*(cj2));
IkReal x1871=((cj3)*(r22));
IkReal x1872=((cj3)*(sj4));
IkReal x1873=((IkReal(0.707103562373095))*(cj4)*(sj2));
IkReal x1874=((IkReal(0.707103562373095))*(x1872));
IkReal x1875=((IkReal(0.707103562373095))*(cj2)*(cj4));
if( IKabs(((gconst11)*(((((sj2)*(x1869)*(x1874)))+(((IkReal(-1.00000000000000))*(x1869)*(x1875)))+(((IkReal(0.707103562373095))*(cj2)*(x1867)))+(((IkReal(-1.00000000000000))*(x1866)*(x1867)))+(((x1871)*(x1873)))+(((IkReal(-1.00000000000000))*(sj2)*(x1868)*(x1874)))+(((cj4)*(x1866)*(x1869)))+(((x1869)*(x1870)*(x1872)))+(((IkReal(-1.00000000000000))*(x1868)*(x1870)*(x1872)))+(((x1868)*(x1875)))+(((cj4)*(x1870)*(x1871)))+(((IkReal(-1.00000000000000))*(cj4)*(x1866)*(x1868))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(cj4)*(x1869)*(x1870)))+(((x1866)*(x1869)*(x1872)))+(((IkReal(-1.00000000000000))*(x1869)*(x1873)))+(((IkReal(0.707103562373095))*(sj2)*(x1867)))+(((IkReal(-1.00000000000000))*(x1866)*(x1868)*(x1872)))+(((cj4)*(x1866)*(x1871)))+(((cj2)*(x1868)*(x1874)))+(((IkReal(-1.00000000000000))*(x1871)*(x1875)))+(((x1868)*(x1873)))+(((cj4)*(x1868)*(x1870)))+(((IkReal(-1.00000000000000))*(cj2)*(x1869)*(x1874)))+(((x1867)*(x1870))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst11)*(((((sj2)*(x1869)*(x1874)))+(((IkReal(-1.00000000000000))*(x1869)*(x1875)))+(((IkReal(0.707103562373095))*(cj2)*(x1867)))+(((IkReal(-1.00000000000000))*(x1866)*(x1867)))+(((x1871)*(x1873)))+(((IkReal(-1.00000000000000))*(sj2)*(x1868)*(x1874)))+(((cj4)*(x1866)*(x1869)))+(((x1869)*(x1870)*(x1872)))+(((IkReal(-1.00000000000000))*(x1868)*(x1870)*(x1872)))+(((x1868)*(x1875)))+(((cj4)*(x1870)*(x1871)))+(((IkReal(-1.00000000000000))*(cj4)*(x1866)*(x1868)))))), ((gconst11)*(((((IkReal(-1.00000000000000))*(cj4)*(x1869)*(x1870)))+(((x1866)*(x1869)*(x1872)))+(((IkReal(-1.00000000000000))*(x1869)*(x1873)))+(((IkReal(0.707103562373095))*(sj2)*(x1867)))+(((IkReal(-1.00000000000000))*(x1866)*(x1868)*(x1872)))+(((cj4)*(x1866)*(x1871)))+(((cj2)*(x1868)*(x1874)))+(((IkReal(-1.00000000000000))*(x1871)*(x1875)))+(((x1868)*(x1873)))+(((cj4)*(x1868)*(x1870)))+(((IkReal(-1.00000000000000))*(cj2)*(x1869)*(x1874)))+(((x1867)*(x1870)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1876=IKcos(j1);
IkReal x1877=IKsin(j1);
IkReal x1878=((cj0)*(cj4));
IkReal x1879=((r01)*(sj5));
IkReal x1880=((IkReal(1.00000000000000))*(cj4));
IkReal x1881=((IkReal(1.00000000000000))*(r02));
IkReal x1882=((IkReal(0.707109999985348))*(sj3));
IkReal x1883=((IkReal(0.707103562373095))*(sj3));
IkReal x1884=((IkReal(1.00000000000000))*(sj4));
IkReal x1885=((cj5)*(r20));
IkReal x1886=((cj5)*(sj0));
IkReal x1887=((IkReal(1.00000000000000))*(cj0));
IkReal x1888=((r12)*(sj0));
IkReal x1889=((cj2)*(cj3));
IkReal x1890=((IkReal(0.707103562373095))*(cj3));
IkReal x1891=((r21)*(sj5));
IkReal x1892=((IkReal(0.707109999985348))*(cj3));
IkReal x1893=((IkReal(1.00000000000000))*(sj0)*(sj5));
IkReal x1894=((sj2)*(x1876));
IkReal x1895=((cj2)*(x1876));
IkReal x1896=((cj0)*(cj5)*(r00));
IkReal x1897=((IkReal(0.707103562373095))*(x1877));
IkReal x1898=((cj2)*(x1877));
IkReal x1899=((IkReal(0.707109999985348))*(sj2)*(x1877));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x1883)*(x1894)))+(((IkReal(-1.00000000000000))*(x1883)*(x1898)))+(((IkReal(-1.00000000000000))*(x1882)*(x1895)))+(((sj2)*(x1877)*(x1882)))+(((r20)*(sj5))));
evalcond[1]=((((sj2)*(x1897)))+(((cj4)*(r22)))+(((IkReal(-0.707103562373095))*(x1895)))+(((IkReal(-1.00000000000000))*(x1884)*(x1885)))+(((sj4)*(x1891)))+(((IkReal(0.707109999985348))*(x1894)))+(((IkReal(0.707109999985348))*(x1898))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1880)*(x1891)))+(((cj4)*(x1885)))+(((IkReal(-1.00000000000000))*(sj2)*(x1877)*(x1892)))+(((r22)*(sj4)))+(((IkReal(0.707109999985348))*(x1876)*(x1889)))+(((x1889)*(x1897)))+(((x1890)*(x1894))));
evalcond[3]=((((x1882)*(x1894)))+(((x1882)*(x1898)))+(((IkReal(-1.00000000000000))*(x1883)*(x1895)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1887)))+(((sj2)*(x1877)*(x1883)))+(((IkReal(-1.00000000000000))*(r10)*(x1893)))+(((IkReal(-1.00000000000000))*(r11)*(x1886)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1887))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1880)*(x1888)))+(((IkReal(-1.00000000000000))*(cj0)*(x1879)*(x1884)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj5)*(x1884)))+(((IkReal(-1.00000000000000))*(x1878)*(x1881)))+(((r10)*(sj4)*(x1886)))+(((cj2)*(x1897)))+(((sj4)*(x1896)))+(((IkReal(0.707109999985348))*(x1895)))+(((IkReal(-1.00000000000000))*(x1899)))+(((IkReal(0.707103562373095))*(x1894))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj5)*(r00)*(x1878)))+(((IkReal(-1.00000000000000))*(x1892)*(x1894)))+(((IkReal(-1.00000000000000))*(cj0)*(sj4)*(x1881)))+(((IkReal(-1.00000000000000))*(sj2)*(x1877)*(x1890)))+(((IkReal(0.707103562373095))*(x1876)*(x1889)))+(((IkReal(-1.00000000000000))*(r10)*(x1880)*(x1886)))+(((cj4)*(r11)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(x1884)*(x1888)))+(((x1878)*(x1879)))+(((IkReal(-0.707109999985348))*(x1877)*(x1889))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1900=((sj2)*(sj3));
IkReal x1901=((cj4)*(r22));
IkReal x1902=((r20)*(sj5));
IkReal x1903=((IkReal(0.707103562373095))*(cj2));
IkReal x1904=((IkReal(0.707109999985348))*(sj2));
IkReal x1905=((IkReal(0.707109999985348))*(cj2));
IkReal x1906=((cj5)*(r21));
IkReal x1907=((IkReal(0.707103562373095))*(sj2));
IkReal x1908=((r21)*(sj4)*(sj5));
IkReal x1909=((cj5)*(r20)*(sj4));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(x1902)*(x1903)))+(((IkReal(0.707103562373095))*(x1900)*(x1901)))+(((IkReal(0.707103562373095))*(x1900)*(x1908)))+(((sj3)*(x1905)*(x1908)))+(((IkReal(-1.00000000000000))*(x1903)*(x1906)))+(((x1904)*(x1906)))+(((IkReal(-0.707103562373095))*(x1900)*(x1909)))+(((x1902)*(x1904)))+(((sj3)*(x1901)*(x1905)))+(((IkReal(-1.00000000000000))*(sj3)*(x1905)*(x1909))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(x1902)*(x1907)))+(((IkReal(-1.00000000000000))*(x1902)*(x1905)))+(((IkReal(-0.707109999985348))*(x1900)*(x1909)))+(((IkReal(-1.00000000000000))*(x1905)*(x1906)))+(((IkReal(0.707109999985348))*(x1900)*(x1901)))+(((IkReal(0.707109999985348))*(x1900)*(x1908)))+(((IkReal(-1.00000000000000))*(sj3)*(x1901)*(x1903)))+(((IkReal(-1.00000000000000))*(sj3)*(x1903)*(x1908)))+(((IkReal(-1.00000000000000))*(x1906)*(x1907)))+(((sj3)*(x1903)*(x1909))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(x1902)*(x1903)))+(((IkReal(0.707103562373095))*(x1900)*(x1901)))+(((IkReal(0.707103562373095))*(x1900)*(x1908)))+(((sj3)*(x1905)*(x1908)))+(((IkReal(-1.00000000000000))*(x1903)*(x1906)))+(((x1904)*(x1906)))+(((IkReal(-0.707103562373095))*(x1900)*(x1909)))+(((x1902)*(x1904)))+(((sj3)*(x1901)*(x1905)))+(((IkReal(-1.00000000000000))*(sj3)*(x1905)*(x1909)))))), ((gconst10)*(((((IkReal(-1.00000000000000))*(x1902)*(x1907)))+(((IkReal(-1.00000000000000))*(x1902)*(x1905)))+(((IkReal(-0.707109999985348))*(x1900)*(x1909)))+(((IkReal(-1.00000000000000))*(x1905)*(x1906)))+(((IkReal(0.707109999985348))*(x1900)*(x1901)))+(((IkReal(0.707109999985348))*(x1900)*(x1908)))+(((IkReal(-1.00000000000000))*(sj3)*(x1901)*(x1903)))+(((IkReal(-1.00000000000000))*(sj3)*(x1903)*(x1908)))+(((IkReal(-1.00000000000000))*(x1906)*(x1907)))+(((sj3)*(x1903)*(x1909)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1910=IKcos(j1);
IkReal x1911=IKsin(j1);
IkReal x1912=((cj0)*(cj4));
IkReal x1913=((r01)*(sj5));
IkReal x1914=((IkReal(1.00000000000000))*(cj4));
IkReal x1915=((IkReal(1.00000000000000))*(r02));
IkReal x1916=((IkReal(0.707109999985348))*(sj3));
IkReal x1917=((IkReal(0.707103562373095))*(sj3));
IkReal x1918=((IkReal(1.00000000000000))*(sj4));
IkReal x1919=((cj5)*(r20));
IkReal x1920=((cj5)*(sj0));
IkReal x1921=((IkReal(1.00000000000000))*(cj0));
IkReal x1922=((r12)*(sj0));
IkReal x1923=((cj2)*(cj3));
IkReal x1924=((IkReal(0.707103562373095))*(cj3));
IkReal x1925=((r21)*(sj5));
IkReal x1926=((IkReal(0.707109999985348))*(cj3));
IkReal x1927=((IkReal(1.00000000000000))*(sj0)*(sj5));
IkReal x1928=((sj2)*(x1910));
IkReal x1929=((cj2)*(x1910));
IkReal x1930=((cj0)*(cj5)*(r00));
IkReal x1931=((IkReal(0.707103562373095))*(x1911));
IkReal x1932=((cj2)*(x1911));
IkReal x1933=((IkReal(0.707109999985348))*(sj2)*(x1911));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x1916)*(x1929)))+(((IkReal(-1.00000000000000))*(x1917)*(x1928)))+(((sj2)*(x1911)*(x1916)))+(((r20)*(sj5)))+(((IkReal(-1.00000000000000))*(x1917)*(x1932))));
evalcond[1]=((((sj2)*(x1931)))+(((sj4)*(x1925)))+(((IkReal(0.707109999985348))*(x1928)))+(((cj4)*(r22)))+(((IkReal(0.707109999985348))*(x1932)))+(((IkReal(-1.00000000000000))*(x1918)*(x1919)))+(((IkReal(-0.707103562373095))*(x1929))));
evalcond[2]=((((IkReal(0.707109999985348))*(x1910)*(x1923)))+(((IkReal(-1.00000000000000))*(sj2)*(x1911)*(x1926)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(x1914)*(x1925)))+(((x1923)*(x1931)))+(((x1924)*(x1928)))+(((cj4)*(x1919))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1917)*(x1929)))+(((x1916)*(x1932)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1921)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1921)))+(((x1916)*(x1928)))+(((IkReal(-1.00000000000000))*(r11)*(x1920)))+(((sj2)*(x1911)*(x1917)))+(((IkReal(-1.00000000000000))*(r10)*(x1927))));
evalcond[4]=((((IkReal(0.707109999985348))*(x1929)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj5)*(x1918)))+(((IkReal(-1.00000000000000))*(x1914)*(x1922)))+(((r10)*(sj4)*(x1920)))+(((sj4)*(x1930)))+(((cj2)*(x1931)))+(((IkReal(0.707103562373095))*(x1928)))+(((IkReal(-1.00000000000000))*(x1912)*(x1915)))+(((IkReal(-1.00000000000000))*(cj0)*(x1913)*(x1918)))+(((IkReal(-1.00000000000000))*(x1933))));
evalcond[5]=((((x1912)*(x1913)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x1912)))+(((IkReal(-1.00000000000000))*(x1918)*(x1922)))+(((IkReal(-1.00000000000000))*(sj2)*(x1911)*(x1924)))+(((IkReal(-0.707109999985348))*(x1911)*(x1923)))+(((IkReal(-1.00000000000000))*(r10)*(x1914)*(x1920)))+(((cj4)*(r11)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(x1926)*(x1928)))+(((IkReal(-1.00000000000000))*(cj0)*(sj4)*(x1915)))+(((IkReal(0.707103562373095))*(x1910)*(x1923))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1934=((cj3)*(sj4));
IkReal x1935=((IkReal(1.00000000000000))*(sj5));
IkReal x1936=((IkReal(1.00000000000000))*(cj3)*(cj4));
if( IKabs(((gconst4)*(((((cj5)*(r10)*(x1934)))+(((IkReal(-1.00000000000000))*(r12)*(x1936)))+(((IkReal(-1.00000000000000))*(r11)*(x1934)*(x1935))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r01)*(x1934)*(x1935)))+(((cj5)*(r00)*(x1934)))+(((IkReal(-1.00000000000000))*(r02)*(x1936))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst4)*(((((cj5)*(r10)*(x1934)))+(((IkReal(-1.00000000000000))*(r12)*(x1936)))+(((IkReal(-1.00000000000000))*(r11)*(x1934)*(x1935)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(r01)*(x1934)*(x1935)))+(((cj5)*(r00)*(x1934)))+(((IkReal(-1.00000000000000))*(r02)*(x1936)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x1937=IKsin(j0);
IkReal x1938=IKcos(j0);
IkReal x1939=((cj5)*(r00));
IkReal x1940=((r01)*(sj5));
IkReal x1941=((cj5)*(r10));
IkReal x1942=((IkReal(1.00000000000000))*(r12));
IkReal x1943=((r11)*(sj5));
IkReal x1944=((cj4)*(x1937));
IkReal x1945=((sj4)*(x1937));
IkReal x1946=((sj4)*(x1938));
IkReal x1947=((cj4)*(x1938));
IkReal x1948=((IkReal(1.00000000000000))*(x1938));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1948)))+(cj3)+(((cj5)*(r01)*(x1937)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1948)))+(((r00)*(sj5)*(x1937))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1942)*(x1947)))+(((IkReal(-1.00000000000000))*(x1943)*(x1946)))+(((x1940)*(x1945)))+(((x1941)*(x1946)))+(((IkReal(-1.00000000000000))*(x1939)*(x1945)))+(((r02)*(x1944))));
evalcond[2]=((((x1943)*(x1947)))+(sj3)+(((IkReal(-1.00000000000000))*(x1942)*(x1946)))+(((x1939)*(x1944)))+(((IkReal(-1.00000000000000))*(x1940)*(x1944)))+(((IkReal(-1.00000000000000))*(x1941)*(x1947)))+(((r02)*(x1945))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst10;
IkReal x1949=((IkReal(1.00000000000000))*(sj3));
gconst10=IKsign(((((IkReal(-1.00000000000000))*(x1949)*((sj2)*(sj2))))+(((IkReal(-1.00000000000000))*(x1949)*((cj2)*(cj2))))));
IkReal x1950=((IkReal(1.00000000000000))*(sj3));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1950)*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*(x1950)*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
IkReal x1951=((IkReal(1.00000000000000))*(cj3));
gconst11=IKsign(((((IkReal(-1.00000000000000))*(x1951)*((sj2)*(sj2))))+(((IkReal(-1.00000000000000))*(x1951)*((cj2)*(cj2))))));
IkReal x1952=((IkReal(1.00000000000000))*(cj3));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1952)*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*(x1952)*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1953=((sj0)*(sj4));
IkReal x1954=((IkReal(1.00000000000000))*(r12));
IkReal x1955=((cj0)*(cj4));
IkReal x1956=((r01)*(sj5));
IkReal x1957=((IkReal(1.00000000000000))*(cj5));
IkReal x1958=((cj4)*(cj5));
IkReal x1959=((IkReal(1.00000000000000))*(cj0));
IkReal x1960=((cj4)*(sj0));
IkReal x1961=((r00)*(sj0));
IkReal x1962=((npy)*(sj5));
IkReal x1963=((IkReal(1.00000000000000))*(cj4));
IkReal x1964=((cj0)*(sj4));
IkReal x1965=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((sj5)*(x1961)))+(((cj5)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1959)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x1957))));
evalcond[2]=((IkReal(-0.258003287011922))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x1957)))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((sj4)*(x1962)))+(((IkReal(0.165463933124939))*(sj2))));
evalcond[3]=((IkReal(-0.0360035672348961))+(((npx)*(sj5)))+(((IkReal(-0.165463933124939))*(cj2)))+(((cj5)*(npy)))+(((IkReal(-0.207888640466058))*(sj2))));
evalcond[4]=((IkReal(-0.00600000000000000))+(((npx)*(x1958)))+(((npz)*(sj4)))+(((IkReal(-1.00000000000000))*(x1962)*(x1963))));
evalcond[5]=((((r02)*(x1960)))+(((IkReal(-1.00000000000000))*(x1954)*(x1955)))+(((x1953)*(x1956)))+(((IkReal(-1.00000000000000))*(sj4)*(x1959)*(x1965)))+(((cj5)*(r10)*(x1964)))+(((IkReal(-1.00000000000000))*(r00)*(x1953)*(x1957))));
evalcond[6]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x1955)*(x1957)))+(((x1958)*(x1961)))+(((IkReal(-1.00000000000000))*(x1956)*(x1960)))+(((x1955)*(x1965)))+(((r02)*(x1953)))+(((IkReal(-1.00000000000000))*(x1954)*(x1964))));
evalcond[7]=((((r20)*(x1958)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x1963))));
evalcond[8]=((((x1955)*(x1956)))+(((x1960)*(x1965)))+(((IkReal(-1.00000000000000))*(x1953)*(x1954)))+(((IkReal(-1.00000000000000))*(r00)*(x1955)*(x1957)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x1959)))+(((IkReal(-1.00000000000000))*(r10)*(x1957)*(x1960))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1966=((cj5)*(r11));
IkReal x1967=((r10)*(sj0));
IkReal x1968=((IkReal(0.707103562373095))*(cj2));
IkReal x1969=((r20)*(sj5));
IkReal x1970=((IkReal(0.707103562373095))*(sj2));
IkReal x1971=((IkReal(0.707109999985348))*(cj2));
IkReal x1972=((cj0)*(r00));
IkReal x1973=((IkReal(0.707109999985348))*(sj2));
IkReal x1974=((cj5)*(r21));
IkReal x1975=((sj0)*(x1970));
IkReal x1976=((sj5)*(x1971));
IkReal x1977=((cj0)*(cj5)*(r01));
if( IKabs(((gconst13)*(((((x1969)*(x1973)))+(((IkReal(-1.00000000000000))*(x1968)*(x1969)))+(((IkReal(-1.00000000000000))*(x1966)*(x1975)))+(((IkReal(-1.00000000000000))*(x1968)*(x1974)))+(((IkReal(-1.00000000000000))*(x1971)*(x1977)))+(((IkReal(-1.00000000000000))*(x1972)*(x1976)))+(((IkReal(-1.00000000000000))*(sj5)*(x1967)*(x1970)))+(((IkReal(-1.00000000000000))*(x1970)*(x1977)))+(((IkReal(-1.00000000000000))*(sj5)*(x1970)*(x1972)))+(((x1973)*(x1974)))+(((IkReal(-1.00000000000000))*(sj0)*(x1966)*(x1971)))+(((IkReal(-1.00000000000000))*(x1967)*(x1976))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(x1973)*(x1977)))+(((sj0)*(x1966)*(x1968)))+(((IkReal(-1.00000000000000))*(x1971)*(x1974)))+(((IkReal(-1.00000000000000))*(sj5)*(x1967)*(x1973)))+(((IkReal(-1.00000000000000))*(x1970)*(x1974)))+(((sj5)*(x1968)*(x1972)))+(((IkReal(-1.00000000000000))*(sj5)*(x1972)*(x1973)))+(((IkReal(-1.00000000000000))*(x1969)*(x1971)))+(((IkReal(-1.00000000000000))*(x1969)*(x1970)))+(((IkReal(-1.00000000000000))*(sj0)*(x1966)*(x1973)))+(((x1968)*(x1977)))+(((sj5)*(x1967)*(x1968))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst13)*(((((x1969)*(x1973)))+(((IkReal(-1.00000000000000))*(x1968)*(x1969)))+(((IkReal(-1.00000000000000))*(x1966)*(x1975)))+(((IkReal(-1.00000000000000))*(x1968)*(x1974)))+(((IkReal(-1.00000000000000))*(x1971)*(x1977)))+(((IkReal(-1.00000000000000))*(x1972)*(x1976)))+(((IkReal(-1.00000000000000))*(sj5)*(x1967)*(x1970)))+(((IkReal(-1.00000000000000))*(x1970)*(x1977)))+(((IkReal(-1.00000000000000))*(sj5)*(x1970)*(x1972)))+(((x1973)*(x1974)))+(((IkReal(-1.00000000000000))*(sj0)*(x1966)*(x1971)))+(((IkReal(-1.00000000000000))*(x1967)*(x1976)))))), ((gconst13)*(((((IkReal(-1.00000000000000))*(x1973)*(x1977)))+(((sj0)*(x1966)*(x1968)))+(((IkReal(-1.00000000000000))*(x1971)*(x1974)))+(((IkReal(-1.00000000000000))*(sj5)*(x1967)*(x1973)))+(((IkReal(-1.00000000000000))*(x1970)*(x1974)))+(((sj5)*(x1968)*(x1972)))+(((IkReal(-1.00000000000000))*(sj5)*(x1972)*(x1973)))+(((IkReal(-1.00000000000000))*(x1969)*(x1971)))+(((IkReal(-1.00000000000000))*(x1969)*(x1970)))+(((IkReal(-1.00000000000000))*(sj0)*(x1966)*(x1973)))+(((x1968)*(x1977)))+(((sj5)*(x1967)*(x1968)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1978=IKsin(j1);
IkReal x1979=IKcos(j1);
IkReal x1980=((IkReal(0.707109999985348))*(cj2));
IkReal x1981=((IkReal(1.00000000000000))*(cj0));
IkReal x1982=((IkReal(0.707109999985348))*(sj2));
IkReal x1983=((cj5)*(sj4));
IkReal x1984=((sj4)*(sj5));
IkReal x1985=((IkReal(1.00000000000000))*(sj0));
IkReal x1986=((sj5)*(x1985));
IkReal x1987=((IkReal(0.707103562373095))*(x1979));
IkReal x1988=((IkReal(0.707103562373095))*(x1978));
IkReal x1989=((x1978)*(x1980));
IkReal x1990=((sj2)*(x1988));
IkReal x1991=((x1979)*(x1982));
IkReal x1992=((cj2)*(x1987));
IkReal x1993=((sj2)*(x1987));
IkReal x1994=((cj2)*(x1988));
IkReal x1995=((x1979)*(x1980));
IkReal x1996=((x1978)*(x1982));
IkReal x1997=((x1993)+(x1995)+(x1994));
IkReal x1998=((x1989)+(x1991)+(x1990));
evalcond[0]=((((cj5)*(r21)))+(x1996)+(((IkReal(-1.00000000000000))*(x1997)))+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x1983)))+(((r21)*(x1984)))+(x1998)+(((IkReal(-1.00000000000000))*(x1992))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1981)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1981)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1985)))+(((IkReal(-1.00000000000000))*(r10)*(x1986)))+(x1998)+(((IkReal(-1.00000000000000))*(x1992))));
evalcond[3]=((((r10)*(sj0)*(x1983)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1981)))+(((cj0)*(r00)*(x1983)))+(x1997)+(((IkReal(-1.00000000000000))*(x1996)))+(((IkReal(-1.00000000000000))*(r11)*(x1984)*(x1985)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1985)))+(((IkReal(-1.00000000000000))*(r01)*(x1981)*(x1984))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1999=((cj5)*(sj4));
IkReal x2000=((r21)*(sj4));
IkReal x2001=((cj5)*(r21));
IkReal x2002=((IkReal(0.707109999985348))*(cj2));
IkReal x2003=((IkReal(0.707103562373095))*(sj2));
IkReal x2004=((IkReal(0.707109999985348))*(sj2));
IkReal x2005=((cj4)*(r22));
IkReal x2006=((IkReal(0.707103562373095))*(cj2));
IkReal x2007=((r20)*(x2002));
IkReal x2008=((sj5)*(x2006));
IkReal x2009=((sj5)*(x2004));
if( IKabs(((gconst12)*(((((x2002)*(x2005)))+(((IkReal(-1.00000000000000))*(x2001)*(x2006)))+(((r20)*(x2009)))+(((sj5)*(x2000)*(x2003)))+(((sj5)*(x2000)*(x2002)))+(((x2001)*(x2004)))+(((IkReal(-1.00000000000000))*(r20)*(x1999)*(x2003)))+(((x2003)*(x2005)))+(((IkReal(-1.00000000000000))*(r20)*(x2008)))+(((IkReal(-1.00000000000000))*(x1999)*(x2007))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(x2005)*(x2006)))+(((x2000)*(x2009)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2003)))+(((IkReal(-1.00000000000000))*(x2001)*(x2002)))+(((IkReal(-1.00000000000000))*(x2001)*(x2003)))+(((IkReal(-1.00000000000000))*(sj5)*(x2007)))+(((IkReal(-1.00000000000000))*(x2000)*(x2008)))+(((IkReal(-1.00000000000000))*(r20)*(x1999)*(x2004)))+(((x2004)*(x2005)))+(((r20)*(x1999)*(x2006))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst12)*(((((x2002)*(x2005)))+(((IkReal(-1.00000000000000))*(x2001)*(x2006)))+(((r20)*(x2009)))+(((sj5)*(x2000)*(x2003)))+(((sj5)*(x2000)*(x2002)))+(((x2001)*(x2004)))+(((IkReal(-1.00000000000000))*(r20)*(x1999)*(x2003)))+(((x2003)*(x2005)))+(((IkReal(-1.00000000000000))*(r20)*(x2008)))+(((IkReal(-1.00000000000000))*(x1999)*(x2007)))))), ((gconst12)*(((((IkReal(-1.00000000000000))*(x2005)*(x2006)))+(((x2000)*(x2009)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2003)))+(((IkReal(-1.00000000000000))*(x2001)*(x2002)))+(((IkReal(-1.00000000000000))*(x2001)*(x2003)))+(((IkReal(-1.00000000000000))*(sj5)*(x2007)))+(((IkReal(-1.00000000000000))*(x2000)*(x2008)))+(((IkReal(-1.00000000000000))*(r20)*(x1999)*(x2004)))+(((x2004)*(x2005)))+(((r20)*(x1999)*(x2006)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2010=IKsin(j1);
IkReal x2011=IKcos(j1);
IkReal x2012=((IkReal(0.707109999985348))*(cj2));
IkReal x2013=((IkReal(1.00000000000000))*(cj0));
IkReal x2014=((IkReal(0.707109999985348))*(sj2));
IkReal x2015=((cj5)*(sj4));
IkReal x2016=((sj4)*(sj5));
IkReal x2017=((IkReal(1.00000000000000))*(sj0));
IkReal x2018=((sj5)*(x2017));
IkReal x2019=((IkReal(0.707103562373095))*(x2011));
IkReal x2020=((IkReal(0.707103562373095))*(x2010));
IkReal x2021=((x2010)*(x2012));
IkReal x2022=((sj2)*(x2020));
IkReal x2023=((x2011)*(x2014));
IkReal x2024=((cj2)*(x2019));
IkReal x2025=((sj2)*(x2019));
IkReal x2026=((cj2)*(x2020));
IkReal x2027=((x2011)*(x2012));
IkReal x2028=((x2010)*(x2014));
IkReal x2029=((x2025)+(x2026)+(x2027));
IkReal x2030=((x2021)+(x2022)+(x2023));
evalcond[0]=((((cj5)*(r21)))+(x2028)+(((IkReal(-1.00000000000000))*(x2029)))+(((r20)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x2015)))+(((cj4)*(r22)))+(x2030)+(((r21)*(x2016)))+(((IkReal(-1.00000000000000))*(x2024))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2013)))+(x2030)+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2013)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2017)))+(((IkReal(-1.00000000000000))*(x2024)))+(((IkReal(-1.00000000000000))*(r10)*(x2018))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2017)))+(((IkReal(-1.00000000000000))*(r11)*(x2016)*(x2017)))+(((cj0)*(r00)*(x2015)))+(x2029)+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2013)))+(((r10)*(sj0)*(x2015)))+(((IkReal(-1.00000000000000))*(r01)*(x2013)*(x2016)))+(((IkReal(-1.00000000000000))*(x2028))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2031=((sj0)*(sj4));
IkReal x2032=((IkReal(1.00000000000000))*(r12));
IkReal x2033=((cj0)*(cj4));
IkReal x2034=((r01)*(sj5));
IkReal x2035=((IkReal(1.00000000000000))*(cj5));
IkReal x2036=((cj4)*(cj5));
IkReal x2037=((IkReal(1.00000000000000))*(cj0));
IkReal x2038=((cj4)*(sj0));
IkReal x2039=((r00)*(sj0));
IkReal x2040=((npy)*(sj5));
IkReal x2041=((IkReal(1.00000000000000))*(cj4));
IkReal x2042=((cj0)*(sj4));
IkReal x2043=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((cj5)*(r01)*(sj0)))+(((sj5)*(x2039)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x2037)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x2035))));
evalcond[2]=((IkReal(-0.258003287011922))+(((sj4)*(x2040)))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x2035)))+(((IkReal(0.165463933124939))*(sj2))));
evalcond[3]=((IkReal(-0.0360035672348961))+(((npx)*(sj5)))+(((IkReal(-0.165463933124939))*(cj2)))+(((cj5)*(npy)))+(((IkReal(-0.207888640466058))*(sj2))));
evalcond[4]=((IkReal(-0.00600000000000000))+(((npz)*(sj4)))+(((IkReal(-1.00000000000000))*(x2040)*(x2041)))+(((npx)*(x2036))));
evalcond[5]=((((cj5)*(r10)*(x2042)))+(((x2031)*(x2034)))+(((IkReal(-1.00000000000000))*(r00)*(x2031)*(x2035)))+(((IkReal(-1.00000000000000))*(sj4)*(x2037)*(x2043)))+(((r02)*(x2038)))+(((IkReal(-1.00000000000000))*(x2032)*(x2033))));
evalcond[6]=((IkReal(1.00000000000000))+(((x2033)*(x2043)))+(((IkReal(-1.00000000000000))*(x2034)*(x2038)))+(((r02)*(x2031)))+(((IkReal(-1.00000000000000))*(r10)*(x2033)*(x2035)))+(((IkReal(-1.00000000000000))*(x2032)*(x2042)))+(((x2036)*(x2039))));
evalcond[7]=((((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x2041)))+(((r20)*(x2036))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r10)*(x2035)*(x2038)))+(((x2033)*(x2034)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x2037)))+(((IkReal(-1.00000000000000))*(x2031)*(x2032)))+(((IkReal(-1.00000000000000))*(r00)*(x2033)*(x2035)))+(((x2038)*(x2043))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2044=((cj5)*(r11));
IkReal x2045=((r10)*(sj0));
IkReal x2046=((IkReal(0.707103562373095))*(cj2));
IkReal x2047=((r20)*(sj5));
IkReal x2048=((IkReal(0.707103562373095))*(sj2));
IkReal x2049=((IkReal(0.707109999985348))*(cj2));
IkReal x2050=((cj0)*(r00));
IkReal x2051=((IkReal(0.707109999985348))*(sj2));
IkReal x2052=((cj5)*(r21));
IkReal x2053=((sj0)*(x2048));
IkReal x2054=((sj5)*(x2049));
IkReal x2055=((cj0)*(cj5)*(r01));
if( IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(x2044)*(x2053)))+(((IkReal(-1.00000000000000))*(sj5)*(x2045)*(x2048)))+(((IkReal(-1.00000000000000))*(x2045)*(x2054)))+(((x2047)*(x2051)))+(((IkReal(-1.00000000000000))*(sj5)*(x2048)*(x2050)))+(((IkReal(-1.00000000000000))*(x2046)*(x2052)))+(((IkReal(-1.00000000000000))*(x2048)*(x2055)))+(((IkReal(-1.00000000000000))*(x2049)*(x2055)))+(((IkReal(-1.00000000000000))*(sj0)*(x2044)*(x2049)))+(((IkReal(-1.00000000000000))*(x2050)*(x2054)))+(((x2051)*(x2052)))+(((IkReal(-1.00000000000000))*(x2046)*(x2047))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(sj5)*(x2050)*(x2051)))+(((IkReal(-1.00000000000000))*(sj0)*(x2044)*(x2051)))+(((sj0)*(x2044)*(x2046)))+(((sj5)*(x2046)*(x2050)))+(((IkReal(-1.00000000000000))*(sj5)*(x2045)*(x2051)))+(((IkReal(-1.00000000000000))*(x2048)*(x2052)))+(((IkReal(-1.00000000000000))*(x2049)*(x2052)))+(((sj5)*(x2045)*(x2046)))+(((IkReal(-1.00000000000000))*(x2047)*(x2048)))+(((IkReal(-1.00000000000000))*(x2047)*(x2049)))+(((IkReal(-1.00000000000000))*(x2051)*(x2055)))+(((x2046)*(x2055))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst15)*(((((IkReal(-1.00000000000000))*(x2044)*(x2053)))+(((IkReal(-1.00000000000000))*(sj5)*(x2045)*(x2048)))+(((IkReal(-1.00000000000000))*(x2045)*(x2054)))+(((x2047)*(x2051)))+(((IkReal(-1.00000000000000))*(sj5)*(x2048)*(x2050)))+(((IkReal(-1.00000000000000))*(x2046)*(x2052)))+(((IkReal(-1.00000000000000))*(x2048)*(x2055)))+(((IkReal(-1.00000000000000))*(x2049)*(x2055)))+(((IkReal(-1.00000000000000))*(sj0)*(x2044)*(x2049)))+(((IkReal(-1.00000000000000))*(x2050)*(x2054)))+(((x2051)*(x2052)))+(((IkReal(-1.00000000000000))*(x2046)*(x2047)))))), ((gconst15)*(((((IkReal(-1.00000000000000))*(sj5)*(x2050)*(x2051)))+(((IkReal(-1.00000000000000))*(sj0)*(x2044)*(x2051)))+(((sj0)*(x2044)*(x2046)))+(((sj5)*(x2046)*(x2050)))+(((IkReal(-1.00000000000000))*(sj5)*(x2045)*(x2051)))+(((IkReal(-1.00000000000000))*(x2048)*(x2052)))+(((IkReal(-1.00000000000000))*(x2049)*(x2052)))+(((sj5)*(x2045)*(x2046)))+(((IkReal(-1.00000000000000))*(x2047)*(x2048)))+(((IkReal(-1.00000000000000))*(x2047)*(x2049)))+(((IkReal(-1.00000000000000))*(x2051)*(x2055)))+(((x2046)*(x2055)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2056=IKsin(j1);
IkReal x2057=IKcos(j1);
IkReal x2058=((IkReal(0.707109999985348))*(cj2));
IkReal x2059=((IkReal(1.00000000000000))*(cj0));
IkReal x2060=((IkReal(0.707109999985348))*(sj2));
IkReal x2061=((cj5)*(sj4));
IkReal x2062=((sj4)*(sj5));
IkReal x2063=((IkReal(1.00000000000000))*(sj0));
IkReal x2064=((sj5)*(x2063));
IkReal x2065=((IkReal(0.707103562373095))*(x2057));
IkReal x2066=((IkReal(0.707103562373095))*(x2056));
IkReal x2067=((x2056)*(x2058));
IkReal x2068=((sj2)*(x2066));
IkReal x2069=((x2057)*(x2060));
IkReal x2070=((cj2)*(x2065));
IkReal x2071=((sj2)*(x2065));
IkReal x2072=((cj2)*(x2066));
IkReal x2073=((x2057)*(x2058));
IkReal x2074=((x2056)*(x2060));
IkReal x2075=((x2073)+(x2072)+(x2071));
IkReal x2076=((x2068)+(x2069)+(x2067));
evalcond[0]=((((cj5)*(r21)))+(x2074)+(((IkReal(-1.00000000000000))*(x2075)))+(((r20)*(sj5))));
evalcond[1]=((((r21)*(x2062)))+(((cj4)*(r22)))+(x2076)+(((IkReal(-1.00000000000000))*(x2070)))+(((IkReal(-1.00000000000000))*(r20)*(x2061))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x2064)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2063)))+(x2076)+(((IkReal(-1.00000000000000))*(x2070)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2059)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2059))));
evalcond[3]=((((r10)*(sj0)*(x2061)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2063)))+(x2075)+(((IkReal(-1.00000000000000))*(x2074)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2059)))+(((IkReal(-1.00000000000000))*(r01)*(x2059)*(x2062)))+(((IkReal(-1.00000000000000))*(r11)*(x2062)*(x2063)))+(((cj0)*(r00)*(x2061))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2077=((cj5)*(sj4));
IkReal x2078=((r21)*(sj4));
IkReal x2079=((cj5)*(r21));
IkReal x2080=((IkReal(0.707109999985348))*(cj2));
IkReal x2081=((IkReal(0.707103562373095))*(sj2));
IkReal x2082=((IkReal(0.707109999985348))*(sj2));
IkReal x2083=((cj4)*(r22));
IkReal x2084=((IkReal(0.707103562373095))*(cj2));
IkReal x2085=((r20)*(x2080));
IkReal x2086=((sj5)*(x2084));
IkReal x2087=((sj5)*(x2082));
if( IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(r20)*(x2086)))+(((r20)*(x2087)))+(((x2081)*(x2083)))+(((IkReal(-1.00000000000000))*(x2077)*(x2085)))+(((IkReal(-1.00000000000000))*(r20)*(x2077)*(x2081)))+(((sj5)*(x2078)*(x2081)))+(((sj5)*(x2078)*(x2080)))+(((IkReal(-1.00000000000000))*(x2079)*(x2084)))+(((x2079)*(x2082)))+(((x2080)*(x2083))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2081)))+(((IkReal(-1.00000000000000))*(x2078)*(x2086)))+(((x2078)*(x2087)))+(((IkReal(-1.00000000000000))*(sj5)*(x2085)))+(((r20)*(x2077)*(x2084)))+(((IkReal(-1.00000000000000))*(r20)*(x2077)*(x2082)))+(((IkReal(-1.00000000000000))*(x2083)*(x2084)))+(((x2082)*(x2083)))+(((IkReal(-1.00000000000000))*(x2079)*(x2081)))+(((IkReal(-1.00000000000000))*(x2079)*(x2080))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst14)*(((((IkReal(-1.00000000000000))*(r20)*(x2086)))+(((r20)*(x2087)))+(((x2081)*(x2083)))+(((IkReal(-1.00000000000000))*(x2077)*(x2085)))+(((IkReal(-1.00000000000000))*(r20)*(x2077)*(x2081)))+(((sj5)*(x2078)*(x2081)))+(((sj5)*(x2078)*(x2080)))+(((IkReal(-1.00000000000000))*(x2079)*(x2084)))+(((x2079)*(x2082)))+(((x2080)*(x2083)))))), ((gconst14)*(((((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2081)))+(((IkReal(-1.00000000000000))*(x2078)*(x2086)))+(((x2078)*(x2087)))+(((IkReal(-1.00000000000000))*(sj5)*(x2085)))+(((r20)*(x2077)*(x2084)))+(((IkReal(-1.00000000000000))*(r20)*(x2077)*(x2082)))+(((IkReal(-1.00000000000000))*(x2083)*(x2084)))+(((x2082)*(x2083)))+(((IkReal(-1.00000000000000))*(x2079)*(x2081)))+(((IkReal(-1.00000000000000))*(x2079)*(x2080)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2088=IKsin(j1);
IkReal x2089=IKcos(j1);
IkReal x2090=((IkReal(0.707109999985348))*(cj2));
IkReal x2091=((IkReal(1.00000000000000))*(cj0));
IkReal x2092=((IkReal(0.707109999985348))*(sj2));
IkReal x2093=((cj5)*(sj4));
IkReal x2094=((sj4)*(sj5));
IkReal x2095=((IkReal(1.00000000000000))*(sj0));
IkReal x2096=((sj5)*(x2095));
IkReal x2097=((IkReal(0.707103562373095))*(x2089));
IkReal x2098=((IkReal(0.707103562373095))*(x2088));
IkReal x2099=((x2088)*(x2090));
IkReal x2100=((sj2)*(x2098));
IkReal x2101=((x2089)*(x2092));
IkReal x2102=((cj2)*(x2097));
IkReal x2103=((sj2)*(x2097));
IkReal x2104=((cj2)*(x2098));
IkReal x2105=((x2089)*(x2090));
IkReal x2106=((x2088)*(x2092));
IkReal x2107=((x2103)+(x2105)+(x2104));
IkReal x2108=((x2099)+(x2101)+(x2100));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x2107)))+(x2106)+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x2093)))+(((IkReal(-1.00000000000000))*(x2102)))+(x2108)+(((r21)*(x2094))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2091)))+(((IkReal(-1.00000000000000))*(x2102)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2091)))+(x2108)+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2095)))+(((IkReal(-1.00000000000000))*(r10)*(x2096))));
evalcond[3]=((((cj0)*(r00)*(x2093)))+(((IkReal(-1.00000000000000))*(x2106)))+(((IkReal(-1.00000000000000))*(r01)*(x2091)*(x2094)))+(x2107)+(((r10)*(sj0)*(x2093)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2091)))+(((IkReal(-1.00000000000000))*(r11)*(x2094)*(x2095)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2095))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2109=((sj0)*(sj4));
IkReal x2110=((IkReal(1.00000000000000))*(r12));
IkReal x2111=((cj0)*(cj4));
IkReal x2112=((r01)*(sj5));
IkReal x2113=((IkReal(1.00000000000000))*(cj5));
IkReal x2114=((cj4)*(cj5));
IkReal x2115=((IkReal(1.00000000000000))*(cj0));
IkReal x2116=((cj4)*(sj0));
IkReal x2117=((r00)*(sj0));
IkReal x2118=((npy)*(sj5));
IkReal x2119=((IkReal(1.00000000000000))*(cj4));
IkReal x2120=((cj0)*(sj4));
IkReal x2121=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj0)*(r11)*(x2113)))+(((cj5)*(r01)*(sj0)))+(((sj5)*(x2117)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x2115))));
evalcond[2]=((IkReal(-0.258003287011922))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((sj4)*(x2118)))+(((IkReal(0.165463933124939))*(sj2)))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x2113))));
evalcond[3]=((IkReal(0.0240035672348961))+(((npx)*(sj5)))+(((IkReal(0.207888640466058))*(sj2)))+(((cj5)*(npy)))+(((IkReal(0.165463933124939))*(cj2))));
evalcond[4]=((IkReal(0.00600000000000000))+(((npz)*(sj4)))+(((IkReal(-1.00000000000000))*(x2118)*(x2119)))+(((npx)*(x2114))));
evalcond[5]=((((x2109)*(x2112)))+(((IkReal(-1.00000000000000))*(r00)*(x2109)*(x2113)))+(((r02)*(x2116)))+(((cj5)*(r10)*(x2120)))+(((IkReal(-1.00000000000000))*(x2110)*(x2111)))+(((IkReal(-1.00000000000000))*(sj4)*(x2115)*(x2121))));
evalcond[6]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x2111)*(x2113)))+(((r02)*(x2109)))+(((x2111)*(x2121)))+(((IkReal(-1.00000000000000))*(x2112)*(x2116)))+(((IkReal(-1.00000000000000))*(x2110)*(x2120)))+(((x2114)*(x2117))));
evalcond[7]=((((IkReal(-1.00000000000000))*(r21)*(sj5)*(x2119)))+(((r22)*(sj4)))+(((r20)*(x2114))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r02)*(sj4)*(x2115)))+(((IkReal(-1.00000000000000))*(r10)*(x2113)*(x2116)))+(((x2111)*(x2112)))+(((IkReal(-1.00000000000000))*(x2109)*(x2110)))+(((IkReal(-1.00000000000000))*(r00)*(x2111)*(x2113)))+(((x2116)*(x2121))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2122=((cj5)*(r11));
IkReal x2123=((r10)*(sj0));
IkReal x2124=((IkReal(0.707103562373095))*(cj2));
IkReal x2125=((r20)*(sj5));
IkReal x2126=((IkReal(0.707103562373095))*(sj2));
IkReal x2127=((IkReal(0.707109999985348))*(cj2));
IkReal x2128=((cj0)*(r00));
IkReal x2129=((IkReal(0.707109999985348))*(sj2));
IkReal x2130=((cj5)*(r21));
IkReal x2131=((sj0)*(x2126));
IkReal x2132=((sj5)*(x2127));
IkReal x2133=((cj0)*(cj5)*(r01));
if( IKabs(((gconst17)*(((((sj5)*(x2126)*(x2128)))+(((sj0)*(x2122)*(x2127)))+(((IkReal(-1.00000000000000))*(x2125)*(x2129)))+(((x2124)*(x2130)))+(((x2126)*(x2133)))+(((x2127)*(x2133)))+(((x2128)*(x2132)))+(((IkReal(-1.00000000000000))*(x2129)*(x2130)))+(((x2124)*(x2125)))+(((x2123)*(x2132)))+(((sj5)*(x2123)*(x2126)))+(((x2122)*(x2131))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((x2125)*(x2127)))+(((x2125)*(x2126)))+(((sj0)*(x2122)*(x2129)))+(((IkReal(-1.00000000000000))*(x2124)*(x2133)))+(((IkReal(-1.00000000000000))*(sj5)*(x2123)*(x2124)))+(((x2126)*(x2130)))+(((sj5)*(x2128)*(x2129)))+(((x2127)*(x2130)))+(((IkReal(-1.00000000000000))*(sj0)*(x2122)*(x2124)))+(((x2129)*(x2133)))+(((IkReal(-1.00000000000000))*(sj5)*(x2124)*(x2128)))+(((sj5)*(x2123)*(x2129))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst17)*(((((sj5)*(x2126)*(x2128)))+(((sj0)*(x2122)*(x2127)))+(((IkReal(-1.00000000000000))*(x2125)*(x2129)))+(((x2124)*(x2130)))+(((x2126)*(x2133)))+(((x2127)*(x2133)))+(((x2128)*(x2132)))+(((IkReal(-1.00000000000000))*(x2129)*(x2130)))+(((x2124)*(x2125)))+(((x2123)*(x2132)))+(((sj5)*(x2123)*(x2126)))+(((x2122)*(x2131)))))), ((gconst17)*(((((x2125)*(x2127)))+(((x2125)*(x2126)))+(((sj0)*(x2122)*(x2129)))+(((IkReal(-1.00000000000000))*(x2124)*(x2133)))+(((IkReal(-1.00000000000000))*(sj5)*(x2123)*(x2124)))+(((x2126)*(x2130)))+(((sj5)*(x2128)*(x2129)))+(((x2127)*(x2130)))+(((IkReal(-1.00000000000000))*(sj0)*(x2122)*(x2124)))+(((x2129)*(x2133)))+(((IkReal(-1.00000000000000))*(sj5)*(x2124)*(x2128)))+(((sj5)*(x2123)*(x2129)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2134=IKcos(j1);
IkReal x2135=IKsin(j1);
IkReal x2136=((IkReal(0.707109999985348))*(cj2));
IkReal x2137=((IkReal(1.00000000000000))*(cj0));
IkReal x2138=((IkReal(0.707109999985348))*(sj2));
IkReal x2139=((cj5)*(sj4));
IkReal x2140=((sj4)*(sj5));
IkReal x2141=((IkReal(1.00000000000000))*(sj0));
IkReal x2142=((sj5)*(x2141));
IkReal x2143=((IkReal(0.707103562373095))*(x2134));
IkReal x2144=((IkReal(0.707103562373095))*(x2135));
IkReal x2145=((cj2)*(x2143));
IkReal x2146=((x2135)*(x2136));
IkReal x2147=((sj2)*(x2144));
IkReal x2148=((x2134)*(x2138));
IkReal x2149=((sj2)*(x2143));
IkReal x2150=((cj2)*(x2144));
IkReal x2151=((x2134)*(x2136));
IkReal x2152=((x2135)*(x2138));
IkReal x2153=((x2150)+(x2151)+(x2149));
IkReal x2154=((x2147)+(x2146)+(x2148));
evalcond[0]=((((cj5)*(r21)))+(x2153)+(((IkReal(-1.00000000000000))*(x2152)))+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(x2154)+(((IkReal(-1.00000000000000))*(x2145)))+(((IkReal(-1.00000000000000))*(r20)*(x2139)))+(((r21)*(x2140))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2141)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2137)))+(x2145)+(((IkReal(-1.00000000000000))*(x2154)))+(((IkReal(-1.00000000000000))*(r10)*(x2142)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2137))));
evalcond[3]=((x2153)+(((IkReal(-1.00000000000000))*(r11)*(x2140)*(x2141)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2141)))+(((IkReal(-1.00000000000000))*(x2152)))+(((r10)*(sj0)*(x2139)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2137)))+(((cj0)*(r00)*(x2139)))+(((IkReal(-1.00000000000000))*(r01)*(x2137)*(x2140))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2155=((cj5)*(sj4));
IkReal x2156=((r21)*(sj4));
IkReal x2157=((cj5)*(r21));
IkReal x2158=((IkReal(0.707109999985348))*(cj2));
IkReal x2159=((IkReal(0.707103562373095))*(sj2));
IkReal x2160=((IkReal(0.707109999985348))*(sj2));
IkReal x2161=((cj4)*(r22));
IkReal x2162=((IkReal(0.707103562373095))*(cj2));
IkReal x2163=((r20)*(x2158));
IkReal x2164=((sj5)*(x2162));
IkReal x2165=((sj5)*(x2160));
if( IKabs(((gconst16)*(((((x2157)*(x2160)))+(((r20)*(x2155)*(x2159)))+(((IkReal(-1.00000000000000))*(r20)*(x2164)))+(((IkReal(-1.00000000000000))*(x2157)*(x2162)))+(((r20)*(x2165)))+(((IkReal(-1.00000000000000))*(x2158)*(x2161)))+(((IkReal(-1.00000000000000))*(x2159)*(x2161)))+(((x2155)*(x2163)))+(((IkReal(-1.00000000000000))*(sj5)*(x2156)*(x2159)))+(((IkReal(-1.00000000000000))*(sj5)*(x2156)*(x2158))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((r20)*(x2155)*(x2160)))+(((IkReal(-1.00000000000000))*(r20)*(x2155)*(x2162)))+(((IkReal(-1.00000000000000))*(x2160)*(x2161)))+(((IkReal(-1.00000000000000))*(sj5)*(x2163)))+(((IkReal(-1.00000000000000))*(x2157)*(x2158)))+(((IkReal(-1.00000000000000))*(x2157)*(x2159)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2159)))+(((x2161)*(x2162)))+(((x2156)*(x2164)))+(((IkReal(-1.00000000000000))*(x2156)*(x2165))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst16)*(((((x2157)*(x2160)))+(((r20)*(x2155)*(x2159)))+(((IkReal(-1.00000000000000))*(r20)*(x2164)))+(((IkReal(-1.00000000000000))*(x2157)*(x2162)))+(((r20)*(x2165)))+(((IkReal(-1.00000000000000))*(x2158)*(x2161)))+(((IkReal(-1.00000000000000))*(x2159)*(x2161)))+(((x2155)*(x2163)))+(((IkReal(-1.00000000000000))*(sj5)*(x2156)*(x2159)))+(((IkReal(-1.00000000000000))*(sj5)*(x2156)*(x2158)))))), ((gconst16)*(((((r20)*(x2155)*(x2160)))+(((IkReal(-1.00000000000000))*(r20)*(x2155)*(x2162)))+(((IkReal(-1.00000000000000))*(x2160)*(x2161)))+(((IkReal(-1.00000000000000))*(sj5)*(x2163)))+(((IkReal(-1.00000000000000))*(x2157)*(x2158)))+(((IkReal(-1.00000000000000))*(x2157)*(x2159)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2159)))+(((x2161)*(x2162)))+(((x2156)*(x2164)))+(((IkReal(-1.00000000000000))*(x2156)*(x2165)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2166=IKcos(j1);
IkReal x2167=IKsin(j1);
IkReal x2168=((IkReal(0.707109999985348))*(cj2));
IkReal x2169=((IkReal(1.00000000000000))*(cj0));
IkReal x2170=((IkReal(0.707109999985348))*(sj2));
IkReal x2171=((cj5)*(sj4));
IkReal x2172=((sj4)*(sj5));
IkReal x2173=((IkReal(1.00000000000000))*(sj0));
IkReal x2174=((sj5)*(x2173));
IkReal x2175=((IkReal(0.707103562373095))*(x2166));
IkReal x2176=((IkReal(0.707103562373095))*(x2167));
IkReal x2177=((cj2)*(x2175));
IkReal x2178=((x2167)*(x2168));
IkReal x2179=((sj2)*(x2176));
IkReal x2180=((x2166)*(x2170));
IkReal x2181=((sj2)*(x2175));
IkReal x2182=((cj2)*(x2176));
IkReal x2183=((x2166)*(x2168));
IkReal x2184=((x2167)*(x2170));
IkReal x2185=((x2183)+(x2182)+(x2181));
IkReal x2186=((x2178)+(x2179)+(x2180));
evalcond[0]=((((cj5)*(r21)))+(x2185)+(((IkReal(-1.00000000000000))*(x2184)))+(((r20)*(sj5))));
evalcond[1]=((((r21)*(x2172)))+(((IkReal(-1.00000000000000))*(r20)*(x2171)))+(((cj4)*(r22)))+(x2186)+(((IkReal(-1.00000000000000))*(x2177))));
evalcond[2]=((x2177)+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2169)))+(((IkReal(-1.00000000000000))*(x2186)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2169)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2173)))+(((IkReal(-1.00000000000000))*(r10)*(x2174))));
evalcond[3]=((((cj0)*(r00)*(x2171)))+(((IkReal(-1.00000000000000))*(r11)*(x2172)*(x2173)))+(x2185)+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2169)))+(((IkReal(-1.00000000000000))*(x2184)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2173)))+(((r10)*(sj0)*(x2171)))+(((IkReal(-1.00000000000000))*(r01)*(x2169)*(x2172))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2187=((sj0)*(sj4));
IkReal x2188=((IkReal(1.00000000000000))*(r12));
IkReal x2189=((cj0)*(cj4));
IkReal x2190=((r01)*(sj5));
IkReal x2191=((IkReal(1.00000000000000))*(cj5));
IkReal x2192=((cj4)*(cj5));
IkReal x2193=((IkReal(1.00000000000000))*(cj0));
IkReal x2194=((cj4)*(sj0));
IkReal x2195=((r00)*(sj0));
IkReal x2196=((npy)*(sj5));
IkReal x2197=((IkReal(1.00000000000000))*(cj4));
IkReal x2198=((cj0)*(sj4));
IkReal x2199=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((sj5)*(x2195)))+(((cj5)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x2191)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x2193))));
evalcond[2]=((IkReal(-0.258003287011922))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((sj4)*(x2196)))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x2191)))+(((IkReal(0.165463933124939))*(sj2))));
evalcond[3]=((IkReal(0.0240035672348961))+(((npx)*(sj5)))+(((IkReal(0.207888640466058))*(sj2)))+(((cj5)*(npy)))+(((IkReal(0.165463933124939))*(cj2))));
evalcond[4]=((IkReal(0.00600000000000000))+(((IkReal(-1.00000000000000))*(x2196)*(x2197)))+(((npz)*(sj4)))+(((npx)*(x2192))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x2187)*(x2191)))+(((IkReal(-1.00000000000000))*(x2188)*(x2189)))+(((cj5)*(r10)*(x2198)))+(((x2187)*(x2190)))+(((IkReal(-1.00000000000000))*(sj4)*(x2193)*(x2199)))+(((r02)*(x2194))));
evalcond[6]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x2190)*(x2194)))+(((x2192)*(x2195)))+(((IkReal(-1.00000000000000))*(r10)*(x2189)*(x2191)))+(((IkReal(-1.00000000000000))*(x2188)*(x2198)))+(((x2189)*(x2199)))+(((r02)*(x2187))));
evalcond[7]=((((IkReal(-1.00000000000000))*(r21)*(sj5)*(x2197)))+(((r22)*(sj4)))+(((r20)*(x2192))));
evalcond[8]=((((x2194)*(x2199)))+(((IkReal(-1.00000000000000))*(x2187)*(x2188)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x2193)))+(((IkReal(-1.00000000000000))*(r10)*(x2191)*(x2194)))+(((x2189)*(x2190)))+(((IkReal(-1.00000000000000))*(r00)*(x2189)*(x2191))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst18;
gconst18=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst19;
gconst19=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2200=((cj5)*(r11));
IkReal x2201=((r10)*(sj0));
IkReal x2202=((IkReal(0.707103562373095))*(cj2));
IkReal x2203=((r20)*(sj5));
IkReal x2204=((IkReal(0.707103562373095))*(sj2));
IkReal x2205=((IkReal(0.707109999985348))*(cj2));
IkReal x2206=((cj0)*(r00));
IkReal x2207=((IkReal(0.707109999985348))*(sj2));
IkReal x2208=((cj5)*(r21));
IkReal x2209=((sj0)*(x2204));
IkReal x2210=((sj5)*(x2205));
IkReal x2211=((cj0)*(cj5)*(r01));
if( IKabs(((gconst19)*(((((x2202)*(x2203)))+(((x2202)*(x2208)))+(((IkReal(-1.00000000000000))*(x2203)*(x2207)))+(((IkReal(-1.00000000000000))*(x2207)*(x2208)))+(((x2206)*(x2210)))+(((x2200)*(x2209)))+(((x2205)*(x2211)))+(((sj5)*(x2201)*(x2204)))+(((x2201)*(x2210)))+(((x2204)*(x2211)))+(((sj0)*(x2200)*(x2205)))+(((sj5)*(x2204)*(x2206))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((sj5)*(x2206)*(x2207)))+(((IkReal(-1.00000000000000))*(sj0)*(x2200)*(x2202)))+(((IkReal(-1.00000000000000))*(sj5)*(x2201)*(x2202)))+(((IkReal(-1.00000000000000))*(x2202)*(x2211)))+(((x2203)*(x2204)))+(((x2203)*(x2205)))+(((IkReal(-1.00000000000000))*(sj5)*(x2202)*(x2206)))+(((sj5)*(x2201)*(x2207)))+(((x2204)*(x2208)))+(((x2205)*(x2208)))+(((x2207)*(x2211)))+(((sj0)*(x2200)*(x2207))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst19)*(((((x2202)*(x2203)))+(((x2202)*(x2208)))+(((IkReal(-1.00000000000000))*(x2203)*(x2207)))+(((IkReal(-1.00000000000000))*(x2207)*(x2208)))+(((x2206)*(x2210)))+(((x2200)*(x2209)))+(((x2205)*(x2211)))+(((sj5)*(x2201)*(x2204)))+(((x2201)*(x2210)))+(((x2204)*(x2211)))+(((sj0)*(x2200)*(x2205)))+(((sj5)*(x2204)*(x2206)))))), ((gconst19)*(((((sj5)*(x2206)*(x2207)))+(((IkReal(-1.00000000000000))*(sj0)*(x2200)*(x2202)))+(((IkReal(-1.00000000000000))*(sj5)*(x2201)*(x2202)))+(((IkReal(-1.00000000000000))*(x2202)*(x2211)))+(((x2203)*(x2204)))+(((x2203)*(x2205)))+(((IkReal(-1.00000000000000))*(sj5)*(x2202)*(x2206)))+(((sj5)*(x2201)*(x2207)))+(((x2204)*(x2208)))+(((x2205)*(x2208)))+(((x2207)*(x2211)))+(((sj0)*(x2200)*(x2207)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2212=IKcos(j1);
IkReal x2213=IKsin(j1);
IkReal x2214=((IkReal(0.707109999985348))*(cj2));
IkReal x2215=((IkReal(1.00000000000000))*(cj0));
IkReal x2216=((IkReal(0.707109999985348))*(sj2));
IkReal x2217=((cj5)*(sj4));
IkReal x2218=((sj4)*(sj5));
IkReal x2219=((IkReal(1.00000000000000))*(sj0));
IkReal x2220=((sj5)*(x2219));
IkReal x2221=((IkReal(0.707103562373095))*(x2212));
IkReal x2222=((IkReal(0.707103562373095))*(x2213));
IkReal x2223=((cj2)*(x2221));
IkReal x2224=((x2213)*(x2214));
IkReal x2225=((sj2)*(x2222));
IkReal x2226=((x2212)*(x2216));
IkReal x2227=((sj2)*(x2221));
IkReal x2228=((cj2)*(x2222));
IkReal x2229=((x2212)*(x2214));
IkReal x2230=((x2213)*(x2216));
IkReal x2231=((x2228)+(x2229)+(x2227));
IkReal x2232=((x2226)+(x2224)+(x2225));
evalcond[0]=((((cj5)*(r21)))+(x2231)+(((IkReal(-1.00000000000000))*(x2230)))+(((r20)*(sj5))));
evalcond[1]=((x2232)+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x2223)))+(((r21)*(x2218)))+(((IkReal(-1.00000000000000))*(r20)*(x2217))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2219)))+(((IkReal(-1.00000000000000))*(r10)*(x2220)))+(x2223)+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2215)))+(((IkReal(-1.00000000000000))*(x2232)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2215))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x2215)*(x2218)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2219)))+(x2231)+(((r10)*(sj0)*(x2217)))+(((IkReal(-1.00000000000000))*(x2230)))+(((IkReal(-1.00000000000000))*(r11)*(x2218)*(x2219)))+(((cj0)*(r00)*(x2217)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2215))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2233=((cj5)*(sj4));
IkReal x2234=((r21)*(sj4));
IkReal x2235=((cj5)*(r21));
IkReal x2236=((IkReal(0.707109999985348))*(cj2));
IkReal x2237=((IkReal(0.707103562373095))*(sj2));
IkReal x2238=((IkReal(0.707109999985348))*(sj2));
IkReal x2239=((cj4)*(r22));
IkReal x2240=((IkReal(0.707103562373095))*(cj2));
IkReal x2241=((r20)*(x2236));
IkReal x2242=((sj5)*(x2240));
IkReal x2243=((sj5)*(x2238));
if( IKabs(((gconst18)*(((((x2235)*(x2238)))+(((IkReal(-1.00000000000000))*(x2237)*(x2239)))+(((x2233)*(x2241)))+(((IkReal(-1.00000000000000))*(x2236)*(x2239)))+(((r20)*(x2233)*(x2237)))+(((r20)*(x2243)))+(((IkReal(-1.00000000000000))*(r20)*(x2242)))+(((IkReal(-1.00000000000000))*(x2235)*(x2240)))+(((IkReal(-1.00000000000000))*(sj5)*(x2234)*(x2236)))+(((IkReal(-1.00000000000000))*(sj5)*(x2234)*(x2237))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(sj5)*(x2241)))+(((IkReal(-1.00000000000000))*(x2234)*(x2243)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2237)))+(((IkReal(-1.00000000000000))*(x2235)*(x2236)))+(((IkReal(-1.00000000000000))*(x2235)*(x2237)))+(((x2234)*(x2242)))+(((IkReal(-1.00000000000000))*(x2238)*(x2239)))+(((r20)*(x2233)*(x2238)))+(((IkReal(-1.00000000000000))*(r20)*(x2233)*(x2240)))+(((x2239)*(x2240))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst18)*(((((x2235)*(x2238)))+(((IkReal(-1.00000000000000))*(x2237)*(x2239)))+(((x2233)*(x2241)))+(((IkReal(-1.00000000000000))*(x2236)*(x2239)))+(((r20)*(x2233)*(x2237)))+(((r20)*(x2243)))+(((IkReal(-1.00000000000000))*(r20)*(x2242)))+(((IkReal(-1.00000000000000))*(x2235)*(x2240)))+(((IkReal(-1.00000000000000))*(sj5)*(x2234)*(x2236)))+(((IkReal(-1.00000000000000))*(sj5)*(x2234)*(x2237)))))), ((gconst18)*(((((IkReal(-1.00000000000000))*(sj5)*(x2241)))+(((IkReal(-1.00000000000000))*(x2234)*(x2243)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2237)))+(((IkReal(-1.00000000000000))*(x2235)*(x2236)))+(((IkReal(-1.00000000000000))*(x2235)*(x2237)))+(((x2234)*(x2242)))+(((IkReal(-1.00000000000000))*(x2238)*(x2239)))+(((r20)*(x2233)*(x2238)))+(((IkReal(-1.00000000000000))*(r20)*(x2233)*(x2240)))+(((x2239)*(x2240)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2244=IKcos(j1);
IkReal x2245=IKsin(j1);
IkReal x2246=((IkReal(0.707109999985348))*(cj2));
IkReal x2247=((IkReal(1.00000000000000))*(cj0));
IkReal x2248=((IkReal(0.707109999985348))*(sj2));
IkReal x2249=((cj5)*(sj4));
IkReal x2250=((sj4)*(sj5));
IkReal x2251=((IkReal(1.00000000000000))*(sj0));
IkReal x2252=((sj5)*(x2251));
IkReal x2253=((IkReal(0.707103562373095))*(x2244));
IkReal x2254=((IkReal(0.707103562373095))*(x2245));
IkReal x2255=((cj2)*(x2253));
IkReal x2256=((x2245)*(x2246));
IkReal x2257=((sj2)*(x2254));
IkReal x2258=((x2244)*(x2248));
IkReal x2259=((sj2)*(x2253));
IkReal x2260=((cj2)*(x2254));
IkReal x2261=((x2244)*(x2246));
IkReal x2262=((x2245)*(x2248));
IkReal x2263=((x2260)+(x2261)+(x2259));
IkReal x2264=((x2258)+(x2257)+(x2256));
evalcond[0]=((((cj5)*(r21)))+(x2263)+(((IkReal(-1.00000000000000))*(x2262)))+(((r20)*(sj5))));
evalcond[1]=((x2264)+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x2249)))+(((IkReal(-1.00000000000000))*(x2255)))+(((r21)*(x2250))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2247)))+(x2255)+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2247)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2251)))+(((IkReal(-1.00000000000000))*(r10)*(x2252)))+(((IkReal(-1.00000000000000))*(x2264))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2247)))+(x2263)+(((IkReal(-1.00000000000000))*(r11)*(x2250)*(x2251)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2251)))+(((r10)*(sj0)*(x2249)))+(((cj0)*(r00)*(x2249)))+(((IkReal(-1.00000000000000))*(x2262)))+(((IkReal(-1.00000000000000))*(r01)*(x2247)*(x2250))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2265=((IkReal(0.707109999985348))*(sj2));
IkReal x2266=((r22)*(sj4));
IkReal x2267=((cj5)*(r20));
IkReal x2268=((r21)*(sj5));
IkReal x2269=((IkReal(0.707109999985348))*(cj2));
IkReal x2270=((cj3)*(r22));
IkReal x2271=((cj3)*(sj4));
IkReal x2272=((IkReal(0.707103562373095))*(cj4)*(sj2));
IkReal x2273=((IkReal(0.707103562373095))*(x2271));
IkReal x2274=((IkReal(0.707103562373095))*(cj2)*(cj4));
if( IKabs(((gconst11)*(((((x2270)*(x2272)))+(((IkReal(-1.00000000000000))*(cj4)*(x2265)*(x2267)))+(((cj4)*(x2269)*(x2270)))+(((cj4)*(x2265)*(x2268)))+(((IkReal(-1.00000000000000))*(sj2)*(x2267)*(x2273)))+(((IkReal(0.707103562373095))*(cj2)*(x2266)))+(((IkReal(-1.00000000000000))*(x2267)*(x2269)*(x2271)))+(((IkReal(-1.00000000000000))*(x2268)*(x2274)))+(((sj2)*(x2268)*(x2273)))+(((x2267)*(x2274)))+(((x2268)*(x2269)*(x2271)))+(((IkReal(-1.00000000000000))*(x2265)*(x2266))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(cj4)*(x2268)*(x2269)))+(((IkReal(0.707103562373095))*(sj2)*(x2266)))+(((x2265)*(x2268)*(x2271)))+(((cj2)*(x2267)*(x2273)))+(((cj4)*(x2267)*(x2269)))+(((IkReal(-1.00000000000000))*(x2270)*(x2274)))+(((cj4)*(x2265)*(x2270)))+(((IkReal(-1.00000000000000))*(x2265)*(x2267)*(x2271)))+(((IkReal(-1.00000000000000))*(cj2)*(x2268)*(x2273)))+(((IkReal(-1.00000000000000))*(x2268)*(x2272)))+(((x2267)*(x2272)))+(((x2266)*(x2269))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst11)*(((((x2270)*(x2272)))+(((IkReal(-1.00000000000000))*(cj4)*(x2265)*(x2267)))+(((cj4)*(x2269)*(x2270)))+(((cj4)*(x2265)*(x2268)))+(((IkReal(-1.00000000000000))*(sj2)*(x2267)*(x2273)))+(((IkReal(0.707103562373095))*(cj2)*(x2266)))+(((IkReal(-1.00000000000000))*(x2267)*(x2269)*(x2271)))+(((IkReal(-1.00000000000000))*(x2268)*(x2274)))+(((sj2)*(x2268)*(x2273)))+(((x2267)*(x2274)))+(((x2268)*(x2269)*(x2271)))+(((IkReal(-1.00000000000000))*(x2265)*(x2266)))))), ((gconst11)*(((((IkReal(-1.00000000000000))*(cj4)*(x2268)*(x2269)))+(((IkReal(0.707103562373095))*(sj2)*(x2266)))+(((x2265)*(x2268)*(x2271)))+(((cj2)*(x2267)*(x2273)))+(((cj4)*(x2267)*(x2269)))+(((IkReal(-1.00000000000000))*(x2270)*(x2274)))+(((cj4)*(x2265)*(x2270)))+(((IkReal(-1.00000000000000))*(x2265)*(x2267)*(x2271)))+(((IkReal(-1.00000000000000))*(cj2)*(x2268)*(x2273)))+(((IkReal(-1.00000000000000))*(x2268)*(x2272)))+(((x2267)*(x2272)))+(((x2266)*(x2269)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x2275=IKcos(j1);
IkReal x2276=IKsin(j1);
IkReal x2277=((cj0)*(cj4));
IkReal x2278=((r01)*(sj5));
IkReal x2279=((IkReal(1.00000000000000))*(cj4));
IkReal x2280=((IkReal(1.00000000000000))*(r02));
IkReal x2281=((IkReal(0.707109999985348))*(sj3));
IkReal x2282=((IkReal(0.707103562373095))*(sj3));
IkReal x2283=((IkReal(1.00000000000000))*(sj4));
IkReal x2284=((cj5)*(r20));
IkReal x2285=((cj5)*(sj0));
IkReal x2286=((IkReal(1.00000000000000))*(cj0));
IkReal x2287=((r12)*(sj0));
IkReal x2288=((cj2)*(cj3));
IkReal x2289=((IkReal(0.707103562373095))*(cj3));
IkReal x2290=((r21)*(sj5));
IkReal x2291=((IkReal(0.707109999985348))*(cj3));
IkReal x2292=((IkReal(1.00000000000000))*(sj0)*(sj5));
IkReal x2293=((sj2)*(x2275));
IkReal x2294=((cj2)*(x2275));
IkReal x2295=((cj0)*(cj5)*(r00));
IkReal x2296=((IkReal(0.707103562373095))*(x2276));
IkReal x2297=((cj2)*(x2276));
IkReal x2298=((IkReal(0.707109999985348))*(sj2)*(x2276));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x2282)*(x2293)))+(((IkReal(-1.00000000000000))*(x2282)*(x2297)))+(((sj2)*(x2276)*(x2281)))+(((IkReal(-1.00000000000000))*(x2281)*(x2294)))+(((r20)*(sj5))));
evalcond[1]=((((IkReal(-0.707103562373095))*(x2294)))+(((sj4)*(x2290)))+(((cj4)*(r22)))+(((IkReal(0.707109999985348))*(x2297)))+(((IkReal(0.707109999985348))*(x2293)))+(((sj2)*(x2296)))+(((IkReal(-1.00000000000000))*(x2283)*(x2284))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2279)*(x2290)))+(((r22)*(sj4)))+(((IkReal(0.707109999985348))*(x2275)*(x2288)))+(((IkReal(-1.00000000000000))*(sj2)*(x2276)*(x2291)))+(((x2289)*(x2293)))+(((cj4)*(x2284)))+(((x2288)*(x2296))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2286)))+(((IkReal(-1.00000000000000))*(x2282)*(x2294)))+(((sj2)*(x2276)*(x2282)))+(((x2281)*(x2293)))+(((x2281)*(x2297)))+(((IkReal(-1.00000000000000))*(r11)*(x2285)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2286)))+(((IkReal(-1.00000000000000))*(r10)*(x2292))));
evalcond[4]=((((sj4)*(x2295)))+(((cj2)*(x2296)))+(((IkReal(-1.00000000000000))*(x2277)*(x2280)))+(((r10)*(sj4)*(x2285)))+(((IkReal(0.707109999985348))*(x2294)))+(((IkReal(0.707103562373095))*(x2293)))+(((IkReal(-1.00000000000000))*(x2279)*(x2287)))+(((IkReal(-1.00000000000000))*(cj0)*(x2278)*(x2283)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj5)*(x2283)))+(((IkReal(-1.00000000000000))*(x2298))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj5)*(r00)*(x2277)))+(((IkReal(0.707103562373095))*(x2275)*(x2288)))+(((IkReal(-0.707109999985348))*(x2276)*(x2288)))+(((cj4)*(r11)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(cj0)*(sj4)*(x2280)))+(((IkReal(-1.00000000000000))*(x2291)*(x2293)))+(((x2277)*(x2278)))+(((IkReal(-1.00000000000000))*(x2283)*(x2287)))+(((IkReal(-1.00000000000000))*(sj2)*(x2276)*(x2289)))+(((IkReal(-1.00000000000000))*(r10)*(x2279)*(x2285))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2299=((sj2)*(sj3));
IkReal x2300=((cj4)*(r22));
IkReal x2301=((r20)*(sj5));
IkReal x2302=((IkReal(0.707103562373095))*(cj2));
IkReal x2303=((IkReal(0.707109999985348))*(sj2));
IkReal x2304=((IkReal(0.707109999985348))*(cj2));
IkReal x2305=((cj5)*(r21));
IkReal x2306=((IkReal(0.707103562373095))*(sj2));
IkReal x2307=((r21)*(sj4)*(sj5));
IkReal x2308=((cj5)*(r20)*(sj4));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(x2301)*(x2302)))+(((x2303)*(x2305)))+(((IkReal(0.707103562373095))*(x2299)*(x2300)))+(((IkReal(0.707103562373095))*(x2299)*(x2307)))+(((IkReal(-1.00000000000000))*(sj3)*(x2304)*(x2308)))+(((IkReal(-0.707103562373095))*(x2299)*(x2308)))+(((x2301)*(x2303)))+(((sj3)*(x2304)*(x2307)))+(((IkReal(-1.00000000000000))*(x2302)*(x2305)))+(((sj3)*(x2300)*(x2304))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(x2301)*(x2306)))+(((IkReal(-1.00000000000000))*(x2301)*(x2304)))+(((IkReal(-0.707109999985348))*(x2299)*(x2308)))+(((IkReal(-1.00000000000000))*(sj3)*(x2300)*(x2302)))+(((IkReal(-1.00000000000000))*(x2304)*(x2305)))+(((IkReal(0.707109999985348))*(x2299)*(x2307)))+(((IkReal(0.707109999985348))*(x2299)*(x2300)))+(((sj3)*(x2302)*(x2308)))+(((IkReal(-1.00000000000000))*(sj3)*(x2302)*(x2307)))+(((IkReal(-1.00000000000000))*(x2305)*(x2306))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(x2301)*(x2302)))+(((x2303)*(x2305)))+(((IkReal(0.707103562373095))*(x2299)*(x2300)))+(((IkReal(0.707103562373095))*(x2299)*(x2307)))+(((IkReal(-1.00000000000000))*(sj3)*(x2304)*(x2308)))+(((IkReal(-0.707103562373095))*(x2299)*(x2308)))+(((x2301)*(x2303)))+(((sj3)*(x2304)*(x2307)))+(((IkReal(-1.00000000000000))*(x2302)*(x2305)))+(((sj3)*(x2300)*(x2304)))))), ((gconst10)*(((((IkReal(-1.00000000000000))*(x2301)*(x2306)))+(((IkReal(-1.00000000000000))*(x2301)*(x2304)))+(((IkReal(-0.707109999985348))*(x2299)*(x2308)))+(((IkReal(-1.00000000000000))*(sj3)*(x2300)*(x2302)))+(((IkReal(-1.00000000000000))*(x2304)*(x2305)))+(((IkReal(0.707109999985348))*(x2299)*(x2307)))+(((IkReal(0.707109999985348))*(x2299)*(x2300)))+(((sj3)*(x2302)*(x2308)))+(((IkReal(-1.00000000000000))*(sj3)*(x2302)*(x2307)))+(((IkReal(-1.00000000000000))*(x2305)*(x2306)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x2309=IKcos(j1);
IkReal x2310=IKsin(j1);
IkReal x2311=((cj0)*(cj4));
IkReal x2312=((r01)*(sj5));
IkReal x2313=((IkReal(1.00000000000000))*(cj4));
IkReal x2314=((IkReal(1.00000000000000))*(r02));
IkReal x2315=((IkReal(0.707109999985348))*(sj3));
IkReal x2316=((IkReal(0.707103562373095))*(sj3));
IkReal x2317=((IkReal(1.00000000000000))*(sj4));
IkReal x2318=((cj5)*(r20));
IkReal x2319=((cj5)*(sj0));
IkReal x2320=((IkReal(1.00000000000000))*(cj0));
IkReal x2321=((r12)*(sj0));
IkReal x2322=((cj2)*(cj3));
IkReal x2323=((IkReal(0.707103562373095))*(cj3));
IkReal x2324=((r21)*(sj5));
IkReal x2325=((IkReal(0.707109999985348))*(cj3));
IkReal x2326=((IkReal(1.00000000000000))*(sj0)*(sj5));
IkReal x2327=((sj2)*(x2309));
IkReal x2328=((cj2)*(x2309));
IkReal x2329=((cj0)*(cj5)*(r00));
IkReal x2330=((IkReal(0.707103562373095))*(x2310));
IkReal x2331=((cj2)*(x2310));
IkReal x2332=((IkReal(0.707109999985348))*(sj2)*(x2310));
evalcond[0]=((((cj5)*(r21)))+(((sj2)*(x2310)*(x2315)))+(((IkReal(-1.00000000000000))*(x2315)*(x2328)))+(((IkReal(-1.00000000000000))*(x2316)*(x2331)))+(((IkReal(-1.00000000000000))*(x2316)*(x2327)))+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((sj2)*(x2330)))+(((IkReal(-0.707103562373095))*(x2328)))+(((IkReal(0.707109999985348))*(x2331)))+(((sj4)*(x2324)))+(((IkReal(0.707109999985348))*(x2327)))+(((IkReal(-1.00000000000000))*(x2317)*(x2318))));
evalcond[2]=((((r22)*(sj4)))+(((x2322)*(x2330)))+(((cj4)*(x2318)))+(((IkReal(-1.00000000000000))*(x2313)*(x2324)))+(((x2323)*(x2327)))+(((IkReal(0.707109999985348))*(x2309)*(x2322)))+(((IkReal(-1.00000000000000))*(sj2)*(x2310)*(x2325))));
evalcond[3]=((((x2315)*(x2331)))+(((x2315)*(x2327)))+(((sj2)*(x2310)*(x2316)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2320)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2320)))+(((IkReal(-1.00000000000000))*(r11)*(x2319)))+(((IkReal(-1.00000000000000))*(r10)*(x2326)))+(((IkReal(-1.00000000000000))*(x2316)*(x2328))));
evalcond[4]=((((r10)*(sj4)*(x2319)))+(((IkReal(-1.00000000000000))*(x2332)))+(((IkReal(0.707103562373095))*(x2327)))+(((cj2)*(x2330)))+(((IkReal(-1.00000000000000))*(x2311)*(x2314)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj5)*(x2317)))+(((sj4)*(x2329)))+(((IkReal(-1.00000000000000))*(x2313)*(x2321)))+(((IkReal(0.707109999985348))*(x2328)))+(((IkReal(-1.00000000000000))*(cj0)*(x2312)*(x2317))));
evalcond[5]=((((x2311)*(x2312)))+(((IkReal(-0.707109999985348))*(x2310)*(x2322)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x2311)))+(((cj4)*(r11)*(sj0)*(sj5)))+(((IkReal(0.707103562373095))*(x2309)*(x2322)))+(((IkReal(-1.00000000000000))*(x2317)*(x2321)))+(((IkReal(-1.00000000000000))*(r10)*(x2313)*(x2319)))+(((IkReal(-1.00000000000000))*(x2325)*(x2327)))+(((IkReal(-1.00000000000000))*(cj0)*(sj4)*(x2314)))+(((IkReal(-1.00000000000000))*(sj2)*(x2310)*(x2323))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2333=((cj5)*(sj3));
IkReal x2334=((IkReal(1.00000000000000))*(cj3));
IkReal x2335=((cj4)*(cj5));
IkReal x2336=((sj3)*(sj5));
IkReal x2337=((cj3)*(cj4)*(sj5));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(r12)*(sj4)*(x2334)))+(((r11)*(x2337)))+(((r11)*(x2333)))+(((IkReal(-1.00000000000000))*(r10)*(x2334)*(x2335)))+(((r10)*(x2336))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(r02)*(sj4)*(x2334)))+(((r01)*(x2337)))+(((r01)*(x2333)))+(((r00)*(x2336)))+(((IkReal(-1.00000000000000))*(r00)*(x2334)*(x2335))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(r12)*(sj4)*(x2334)))+(((r11)*(x2337)))+(((r11)*(x2333)))+(((IkReal(-1.00000000000000))*(r10)*(x2334)*(x2335)))+(((r10)*(x2336)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(r02)*(sj4)*(x2334)))+(((r01)*(x2337)))+(((r01)*(x2333)))+(((r00)*(x2336)))+(((IkReal(-1.00000000000000))*(r00)*(x2334)*(x2335)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x2338=IKsin(j0);
IkReal x2339=IKcos(j0);
IkReal x2340=((cj5)*(r00));
IkReal x2341=((r01)*(sj5));
IkReal x2342=((cj5)*(r10));
IkReal x2343=((IkReal(1.00000000000000))*(r12));
IkReal x2344=((r11)*(sj5));
IkReal x2345=((cj4)*(x2338));
IkReal x2346=((sj4)*(x2338));
IkReal x2347=((sj4)*(x2339));
IkReal x2348=((cj4)*(x2339));
IkReal x2349=((IkReal(1.00000000000000))*(x2339));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2349)))+(cj3)+(((cj5)*(r01)*(x2338)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x2349)))+(((r00)*(sj5)*(x2338))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2344)*(x2347)))+(((x2341)*(x2346)))+(((IkReal(-1.00000000000000))*(x2340)*(x2346)))+(((IkReal(-1.00000000000000))*(x2343)*(x2348)))+(((x2342)*(x2347)))+(((r02)*(x2345))));
evalcond[2]=((sj3)+(((x2340)*(x2345)))+(((IkReal(-1.00000000000000))*(x2341)*(x2345)))+(((x2344)*(x2348)))+(((IkReal(-1.00000000000000))*(x2343)*(x2347)))+(((r02)*(x2346)))+(((IkReal(-1.00000000000000))*(x2342)*(x2348))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst34;
gconst34=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst35;
gconst35=IKsign(cj3);
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2350=((sj0)*(sj4));
IkReal x2351=((IkReal(1.00000000000000))*(r12));
IkReal x2352=((IkReal(1.00000000000000))*(cj0));
IkReal x2353=((cj4)*(cj5));
IkReal x2354=((r11)*(sj5));
IkReal x2355=((cj4)*(sj0));
IkReal x2356=((IkReal(1.00000000000000))*(sj5));
IkReal x2357=((cj0)*(cj4));
IkReal x2358=((r00)*(sj0));
IkReal x2359=((cj0)*(sj4));
IkReal x2360=((r01)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2352)))+(((cj5)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x2352)))+(((sj5)*(x2358))));
evalcond[2]=((IkReal(-0.00600000000000000))+(((npz)*(sj4)))+(((npx)*(x2353)))+(((IkReal(-1.00000000000000))*(cj4)*(npy)*(x2356))));
evalcond[3]=((((cj5)*(r10)*(x2359)))+(((IkReal(-1.00000000000000))*(sj4)*(x2352)*(x2354)))+(((x2350)*(x2360)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x2350)))+(((IkReal(-1.00000000000000))*(x2351)*(x2357)))+(((r02)*(x2355))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x2352)*(x2353)))+(((x2354)*(x2357)))+(((x2353)*(x2358)))+(((IkReal(-1.00000000000000))*(r01)*(x2355)*(x2356)))+(((IkReal(-1.00000000000000))*(x2351)*(x2359)))+(((r02)*(x2350))));
evalcond[5]=((((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(r21)*(x2356)))+(((r20)*(x2353))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r10)*(sj0)*(x2353)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x2352)))+(((x2354)*(x2355)))+(((IkReal(-1.00000000000000))*(x2350)*(x2351)))+(((x2357)*(x2360)))+(((IkReal(-1.00000000000000))*(r00)*(x2352)*(x2353))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2361=((cj4)*(npz));
IkReal x2362=((IkReal(2.94476514910275))*(cj5));
IkReal x2363=((npx)*(sj4));
IkReal x2364=((IkReal(2.34381456633434))*(sj5));
IkReal x2365=((npy)*(sj4));
IkReal x2366=((IkReal(2.94476514910275))*(sj5));
IkReal x2367=((IkReal(2.34381456633434))*(cj5));
if( IKabs(((IkReal(0.498689812223981))+(((npx)*(x2366)))+(((IkReal(-2.34381456633434))*(x2361)))+(((IkReal(-1.00000000000000))*(x2364)*(x2365)))+(((x2363)*(x2367)))+(((npy)*(x2362))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.844144773271807))+(((npx)*(x2364)))+(((x2365)*(x2366)))+(((IkReal(-1.00000000000000))*(x2362)*(x2363)))+(((npy)*(x2367)))+(((IkReal(2.94476514910275))*(x2361))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.498689812223981))+(((npx)*(x2366)))+(((IkReal(-2.34381456633434))*(x2361)))+(((IkReal(-1.00000000000000))*(x2364)*(x2365)))+(((x2363)*(x2367)))+(((npy)*(x2362)))))+IKsqr(((IkReal(-0.844144773271807))+(((npx)*(x2364)))+(((x2365)*(x2366)))+(((IkReal(-1.00000000000000))*(x2362)*(x2363)))+(((npy)*(x2367)))+(((IkReal(2.94476514910275))*(x2361)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((IkReal(0.498689812223981))+(((npx)*(x2366)))+(((IkReal(-2.34381456633434))*(x2361)))+(((IkReal(-1.00000000000000))*(x2364)*(x2365)))+(((x2363)*(x2367)))+(((npy)*(x2362)))), ((IkReal(-0.844144773271807))+(((npx)*(x2364)))+(((x2365)*(x2366)))+(((IkReal(-1.00000000000000))*(x2362)*(x2363)))+(((npy)*(x2367)))+(((IkReal(2.94476514910275))*(x2361)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x2368=IKcos(j2);
IkReal x2369=IKsin(j2);
evalcond[0]=((IkReal(-0.258003287011922))+(((IkReal(-1.00000000000000))*(cj5)*(npx)*(sj4)))+(((npy)*(sj4)*(sj5)))+(((cj4)*(npz)))+(((IkReal(-0.207888640466058))*(x2368)))+(((IkReal(0.165463933124939))*(x2369))));
evalcond[1]=((IkReal(-0.0360035672348961))+(((npx)*(sj5)))+(((IkReal(-0.165463933124939))*(x2368)))+(((cj5)*(npy)))+(((IkReal(-0.207888640466058))*(x2369))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2370=((cj5)*(r11));
IkReal x2371=((r10)*(sj0));
IkReal x2372=((IkReal(0.707103562373095))*(cj2));
IkReal x2373=((r20)*(sj5));
IkReal x2374=((IkReal(0.707103562373095))*(sj2));
IkReal x2375=((IkReal(0.707109999985348))*(cj2));
IkReal x2376=((IkReal(0.707109999985348))*(sj2));
IkReal x2377=((cj5)*(r21));
IkReal x2378=((sj0)*(x2374));
IkReal x2379=((sj5)*(x2375));
IkReal x2380=((cj0)*(cj5)*(r01));
IkReal x2381=((cj0)*(r00)*(sj5));
if( IKabs(((gconst47)*(((((x2373)*(x2376)))+(((IkReal(-1.00000000000000))*(x2374)*(x2381)))+(((IkReal(-1.00000000000000))*(x2374)*(x2380)))+(((IkReal(-1.00000000000000))*(x2375)*(x2380)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)*(x2379)))+(((IkReal(-1.00000000000000))*(x2372)*(x2377)))+(((IkReal(-1.00000000000000))*(x2372)*(x2373)))+(((IkReal(-1.00000000000000))*(x2370)*(x2378)))+(((IkReal(-1.00000000000000))*(x2371)*(x2379)))+(((x2376)*(x2377)))+(((IkReal(-1.00000000000000))*(sj0)*(x2370)*(x2375)))+(((IkReal(-1.00000000000000))*(sj5)*(x2371)*(x2374))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((sj0)*(x2370)*(x2372)))+(((IkReal(-1.00000000000000))*(x2376)*(x2381)))+(((IkReal(-1.00000000000000))*(x2376)*(x2380)))+(((sj5)*(x2371)*(x2372)))+(((IkReal(-1.00000000000000))*(x2375)*(x2377)))+(((IkReal(-1.00000000000000))*(x2374)*(x2377)))+(((IkReal(-1.00000000000000))*(x2373)*(x2374)))+(((IkReal(-1.00000000000000))*(x2373)*(x2375)))+(((x2372)*(x2380)))+(((x2372)*(x2381)))+(((IkReal(-1.00000000000000))*(sj0)*(x2370)*(x2376)))+(((IkReal(-1.00000000000000))*(sj5)*(x2371)*(x2376))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst47)*(((((x2373)*(x2376)))+(((IkReal(-1.00000000000000))*(x2374)*(x2381)))+(((IkReal(-1.00000000000000))*(x2374)*(x2380)))+(((IkReal(-1.00000000000000))*(x2375)*(x2380)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)*(x2379)))+(((IkReal(-1.00000000000000))*(x2372)*(x2377)))+(((IkReal(-1.00000000000000))*(x2372)*(x2373)))+(((IkReal(-1.00000000000000))*(x2370)*(x2378)))+(((IkReal(-1.00000000000000))*(x2371)*(x2379)))+(((x2376)*(x2377)))+(((IkReal(-1.00000000000000))*(sj0)*(x2370)*(x2375)))+(((IkReal(-1.00000000000000))*(sj5)*(x2371)*(x2374)))))), ((gconst47)*(((((sj0)*(x2370)*(x2372)))+(((IkReal(-1.00000000000000))*(x2376)*(x2381)))+(((IkReal(-1.00000000000000))*(x2376)*(x2380)))+(((sj5)*(x2371)*(x2372)))+(((IkReal(-1.00000000000000))*(x2375)*(x2377)))+(((IkReal(-1.00000000000000))*(x2374)*(x2377)))+(((IkReal(-1.00000000000000))*(x2373)*(x2374)))+(((IkReal(-1.00000000000000))*(x2373)*(x2375)))+(((x2372)*(x2380)))+(((x2372)*(x2381)))+(((IkReal(-1.00000000000000))*(sj0)*(x2370)*(x2376)))+(((IkReal(-1.00000000000000))*(sj5)*(x2371)*(x2376)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2382=IKsin(j1);
IkReal x2383=IKcos(j1);
IkReal x2384=((IkReal(0.707109999985348))*(cj2));
IkReal x2385=((IkReal(1.00000000000000))*(cj0));
IkReal x2386=((IkReal(0.707109999985348))*(sj2));
IkReal x2387=((cj5)*(sj4));
IkReal x2388=((sj4)*(sj5));
IkReal x2389=((IkReal(1.00000000000000))*(sj0));
IkReal x2390=((sj5)*(x2389));
IkReal x2391=((IkReal(0.707103562373095))*(x2383));
IkReal x2392=((IkReal(0.707103562373095))*(x2382));
IkReal x2393=((x2382)*(x2384));
IkReal x2394=((sj2)*(x2392));
IkReal x2395=((x2383)*(x2386));
IkReal x2396=((cj2)*(x2391));
IkReal x2397=((sj2)*(x2391));
IkReal x2398=((cj2)*(x2392));
IkReal x2399=((x2383)*(x2384));
IkReal x2400=((x2382)*(x2386));
IkReal x2401=((x2397)+(x2398)+(x2399));
IkReal x2402=((x2394)+(x2395)+(x2393));
evalcond[0]=((((cj5)*(r21)))+(x2400)+(((IkReal(-1.00000000000000))*(x2401)))+(((r20)*(sj5))));
evalcond[1]=((x2402)+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x2396)))+(((IkReal(-1.00000000000000))*(r20)*(x2387)))+(((r21)*(x2388))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x2390)))+(x2402)+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2385)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2389)))+(((IkReal(-1.00000000000000))*(x2396)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2385))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x2385)*(x2388)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2389)))+(x2401)+(((IkReal(-1.00000000000000))*(x2400)))+(((IkReal(-1.00000000000000))*(r11)*(x2388)*(x2389)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2385)))+(((r10)*(sj0)*(x2387)))+(((cj0)*(r00)*(x2387))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2403=((cj5)*(sj4));
IkReal x2404=((r21)*(sj4));
IkReal x2405=((cj5)*(r21));
IkReal x2406=((IkReal(0.707109999985348))*(cj2));
IkReal x2407=((IkReal(0.707103562373095))*(sj2));
IkReal x2408=((IkReal(0.707109999985348))*(sj2));
IkReal x2409=((cj4)*(r22));
IkReal x2410=((IkReal(0.707103562373095))*(cj2));
IkReal x2411=((r20)*(x2406));
IkReal x2412=((sj5)*(x2410));
IkReal x2413=((sj5)*(x2408));
if( IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(r20)*(x2412)))+(((IkReal(-1.00000000000000))*(r20)*(x2403)*(x2407)))+(((sj5)*(x2404)*(x2407)))+(((sj5)*(x2404)*(x2406)))+(((IkReal(-1.00000000000000))*(x2405)*(x2410)))+(((r20)*(x2413)))+(((x2405)*(x2408)))+(((IkReal(-1.00000000000000))*(x2403)*(x2411)))+(((x2406)*(x2409)))+(((x2407)*(x2409))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(x2405)*(x2407)))+(((IkReal(-1.00000000000000))*(x2405)*(x2406)))+(((x2408)*(x2409)))+(((IkReal(-1.00000000000000))*(r20)*(x2403)*(x2408)))+(((x2404)*(x2413)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2407)))+(((IkReal(-1.00000000000000))*(x2404)*(x2412)))+(((r20)*(x2403)*(x2410)))+(((IkReal(-1.00000000000000))*(sj5)*(x2411)))+(((IkReal(-1.00000000000000))*(x2409)*(x2410))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst46)*(((((IkReal(-1.00000000000000))*(r20)*(x2412)))+(((IkReal(-1.00000000000000))*(r20)*(x2403)*(x2407)))+(((sj5)*(x2404)*(x2407)))+(((sj5)*(x2404)*(x2406)))+(((IkReal(-1.00000000000000))*(x2405)*(x2410)))+(((r20)*(x2413)))+(((x2405)*(x2408)))+(((IkReal(-1.00000000000000))*(x2403)*(x2411)))+(((x2406)*(x2409)))+(((x2407)*(x2409)))))), ((gconst46)*(((((IkReal(-1.00000000000000))*(x2405)*(x2407)))+(((IkReal(-1.00000000000000))*(x2405)*(x2406)))+(((x2408)*(x2409)))+(((IkReal(-1.00000000000000))*(r20)*(x2403)*(x2408)))+(((x2404)*(x2413)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2407)))+(((IkReal(-1.00000000000000))*(x2404)*(x2412)))+(((r20)*(x2403)*(x2410)))+(((IkReal(-1.00000000000000))*(sj5)*(x2411)))+(((IkReal(-1.00000000000000))*(x2409)*(x2410)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2414=IKsin(j1);
IkReal x2415=IKcos(j1);
IkReal x2416=((IkReal(0.707109999985348))*(cj2));
IkReal x2417=((IkReal(1.00000000000000))*(cj0));
IkReal x2418=((IkReal(0.707109999985348))*(sj2));
IkReal x2419=((cj5)*(sj4));
IkReal x2420=((sj4)*(sj5));
IkReal x2421=((IkReal(1.00000000000000))*(sj0));
IkReal x2422=((sj5)*(x2421));
IkReal x2423=((IkReal(0.707103562373095))*(x2415));
IkReal x2424=((IkReal(0.707103562373095))*(x2414));
IkReal x2425=((x2414)*(x2416));
IkReal x2426=((sj2)*(x2424));
IkReal x2427=((x2415)*(x2418));
IkReal x2428=((cj2)*(x2423));
IkReal x2429=((sj2)*(x2423));
IkReal x2430=((cj2)*(x2424));
IkReal x2431=((x2415)*(x2416));
IkReal x2432=((x2414)*(x2418));
IkReal x2433=((x2431)+(x2430)+(x2429));
IkReal x2434=((x2425)+(x2426)+(x2427));
evalcond[0]=((((cj5)*(r21)))+(x2432)+(((IkReal(-1.00000000000000))*(x2433)))+(((r20)*(sj5))));
evalcond[1]=((x2434)+(((r21)*(x2420)))+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x2419)))+(((IkReal(-1.00000000000000))*(x2428))));
evalcond[2]=((x2434)+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2417)))+(((IkReal(-1.00000000000000))*(r10)*(x2422)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2421)))+(((IkReal(-1.00000000000000))*(x2428)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2417))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x2420)*(x2421)))+(x2433)+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2421)))+(((cj0)*(r00)*(x2419)))+(((IkReal(-1.00000000000000))*(x2432)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2417)))+(((r10)*(sj0)*(x2419)))+(((IkReal(-1.00000000000000))*(r01)*(x2417)*(x2420))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2435=((sj0)*(sj4));
IkReal x2436=((IkReal(1.00000000000000))*(r12));
IkReal x2437=((IkReal(1.00000000000000))*(cj0));
IkReal x2438=((cj4)*(cj5));
IkReal x2439=((r11)*(sj5));
IkReal x2440=((cj4)*(sj0));
IkReal x2441=((IkReal(1.00000000000000))*(sj5));
IkReal x2442=((cj0)*(cj4));
IkReal x2443=((r00)*(sj0));
IkReal x2444=((cj0)*(sj4));
IkReal x2445=((r01)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((sj5)*(x2443)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2437)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x2437)))+(((cj5)*(r01)*(sj0))));
evalcond[2]=((IkReal(-0.00600000000000000))+(((npx)*(x2438)))+(((IkReal(-1.00000000000000))*(cj4)*(npy)*(x2441)))+(((npz)*(sj4))));
evalcond[3]=((((r02)*(x2440)))+(((IkReal(-1.00000000000000))*(sj4)*(x2437)*(x2439)))+(((cj5)*(r10)*(x2444)))+(((IkReal(-1.00000000000000))*(x2436)*(x2442)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x2435)))+(((x2435)*(x2445))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r01)*(x2440)*(x2441)))+(((IkReal(-1.00000000000000))*(x2436)*(x2444)))+(((r02)*(x2435)))+(((IkReal(-1.00000000000000))*(r10)*(x2437)*(x2438)))+(((x2439)*(x2442)))+(((x2438)*(x2443))));
evalcond[5]=((((r20)*(x2438)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(r21)*(x2441))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r10)*(sj0)*(x2438)))+(((x2442)*(x2445)))+(((IkReal(-1.00000000000000))*(r00)*(x2437)*(x2438)))+(((IkReal(-1.00000000000000))*(x2435)*(x2436)))+(((x2439)*(x2440)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x2437))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2446=((cj4)*(npz));
IkReal x2447=((IkReal(2.94476514910275))*(cj5));
IkReal x2448=((npx)*(sj4));
IkReal x2449=((IkReal(2.34381456633434))*(sj5));
IkReal x2450=((npy)*(sj4));
IkReal x2451=((IkReal(2.94476514910275))*(sj5));
IkReal x2452=((IkReal(2.34381456633434))*(cj5));
if( IKabs(((IkReal(0.498689812223981))+(((IkReal(-1.00000000000000))*(x2449)*(x2450)))+(((x2448)*(x2452)))+(((npx)*(x2451)))+(((npy)*(x2447)))+(((IkReal(-2.34381456633434))*(x2446))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.844144773271807))+(((x2450)*(x2451)))+(((IkReal(-1.00000000000000))*(x2447)*(x2448)))+(((npx)*(x2449)))+(((npy)*(x2452)))+(((IkReal(2.94476514910275))*(x2446))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.498689812223981))+(((IkReal(-1.00000000000000))*(x2449)*(x2450)))+(((x2448)*(x2452)))+(((npx)*(x2451)))+(((npy)*(x2447)))+(((IkReal(-2.34381456633434))*(x2446)))))+IKsqr(((IkReal(-0.844144773271807))+(((x2450)*(x2451)))+(((IkReal(-1.00000000000000))*(x2447)*(x2448)))+(((npx)*(x2449)))+(((npy)*(x2452)))+(((IkReal(2.94476514910275))*(x2446)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((IkReal(0.498689812223981))+(((IkReal(-1.00000000000000))*(x2449)*(x2450)))+(((x2448)*(x2452)))+(((npx)*(x2451)))+(((npy)*(x2447)))+(((IkReal(-2.34381456633434))*(x2446)))), ((IkReal(-0.844144773271807))+(((x2450)*(x2451)))+(((IkReal(-1.00000000000000))*(x2447)*(x2448)))+(((npx)*(x2449)))+(((npy)*(x2452)))+(((IkReal(2.94476514910275))*(x2446)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x2453=IKcos(j2);
IkReal x2454=IKsin(j2);
evalcond[0]=((IkReal(-0.258003287011922))+(((IkReal(-0.207888640466058))*(x2453)))+(((IkReal(-1.00000000000000))*(cj5)*(npx)*(sj4)))+(((npy)*(sj4)*(sj5)))+(((cj4)*(npz)))+(((IkReal(0.165463933124939))*(x2454))));
evalcond[1]=((IkReal(-0.0360035672348961))+(((IkReal(-0.165463933124939))*(x2453)))+(((npx)*(sj5)))+(((IkReal(-0.207888640466058))*(x2454)))+(((cj5)*(npy))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2455=((cj5)*(r11));
IkReal x2456=((r10)*(sj0));
IkReal x2457=((IkReal(0.707103562373095))*(cj2));
IkReal x2458=((r20)*(sj5));
IkReal x2459=((IkReal(0.707103562373095))*(sj2));
IkReal x2460=((IkReal(0.707109999985348))*(cj2));
IkReal x2461=((cj0)*(r00));
IkReal x2462=((IkReal(0.707109999985348))*(sj2));
IkReal x2463=((cj5)*(r21));
IkReal x2464=((sj0)*(x2459));
IkReal x2465=((sj5)*(x2460));
IkReal x2466=((cj0)*(cj5)*(r01));
if( IKabs(((gconst49)*(((((x2458)*(x2462)))+(((IkReal(-1.00000000000000))*(x2457)*(x2463)))+(((IkReal(-1.00000000000000))*(sj5)*(x2459)*(x2461)))+(((IkReal(-1.00000000000000))*(x2456)*(x2465)))+(((IkReal(-1.00000000000000))*(sj5)*(x2456)*(x2459)))+(((x2462)*(x2463)))+(((IkReal(-1.00000000000000))*(x2457)*(x2458)))+(((IkReal(-1.00000000000000))*(x2455)*(x2464)))+(((IkReal(-1.00000000000000))*(sj0)*(x2455)*(x2460)))+(((IkReal(-1.00000000000000))*(x2460)*(x2466)))+(((IkReal(-1.00000000000000))*(x2461)*(x2465)))+(((IkReal(-1.00000000000000))*(x2459)*(x2466))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((sj5)*(x2457)*(x2461)))+(((IkReal(-1.00000000000000))*(sj5)*(x2461)*(x2462)))+(((sj0)*(x2455)*(x2457)))+(((IkReal(-1.00000000000000))*(x2458)*(x2459)))+(((x2457)*(x2466)))+(((IkReal(-1.00000000000000))*(sj0)*(x2455)*(x2462)))+(((IkReal(-1.00000000000000))*(x2460)*(x2463)))+(((sj5)*(x2456)*(x2457)))+(((IkReal(-1.00000000000000))*(sj5)*(x2456)*(x2462)))+(((IkReal(-1.00000000000000))*(x2459)*(x2463)))+(((IkReal(-1.00000000000000))*(x2458)*(x2460)))+(((IkReal(-1.00000000000000))*(x2462)*(x2466))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst49)*(((((x2458)*(x2462)))+(((IkReal(-1.00000000000000))*(x2457)*(x2463)))+(((IkReal(-1.00000000000000))*(sj5)*(x2459)*(x2461)))+(((IkReal(-1.00000000000000))*(x2456)*(x2465)))+(((IkReal(-1.00000000000000))*(sj5)*(x2456)*(x2459)))+(((x2462)*(x2463)))+(((IkReal(-1.00000000000000))*(x2457)*(x2458)))+(((IkReal(-1.00000000000000))*(x2455)*(x2464)))+(((IkReal(-1.00000000000000))*(sj0)*(x2455)*(x2460)))+(((IkReal(-1.00000000000000))*(x2460)*(x2466)))+(((IkReal(-1.00000000000000))*(x2461)*(x2465)))+(((IkReal(-1.00000000000000))*(x2459)*(x2466)))))), ((gconst49)*(((((sj5)*(x2457)*(x2461)))+(((IkReal(-1.00000000000000))*(sj5)*(x2461)*(x2462)))+(((sj0)*(x2455)*(x2457)))+(((IkReal(-1.00000000000000))*(x2458)*(x2459)))+(((x2457)*(x2466)))+(((IkReal(-1.00000000000000))*(sj0)*(x2455)*(x2462)))+(((IkReal(-1.00000000000000))*(x2460)*(x2463)))+(((sj5)*(x2456)*(x2457)))+(((IkReal(-1.00000000000000))*(sj5)*(x2456)*(x2462)))+(((IkReal(-1.00000000000000))*(x2459)*(x2463)))+(((IkReal(-1.00000000000000))*(x2458)*(x2460)))+(((IkReal(-1.00000000000000))*(x2462)*(x2466)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2467=IKsin(j1);
IkReal x2468=IKcos(j1);
IkReal x2469=((IkReal(0.707109999985348))*(cj2));
IkReal x2470=((IkReal(1.00000000000000))*(cj0));
IkReal x2471=((IkReal(0.707109999985348))*(sj2));
IkReal x2472=((cj5)*(sj4));
IkReal x2473=((sj4)*(sj5));
IkReal x2474=((IkReal(1.00000000000000))*(sj0));
IkReal x2475=((sj5)*(x2474));
IkReal x2476=((IkReal(0.707103562373095))*(x2468));
IkReal x2477=((IkReal(0.707103562373095))*(x2467));
IkReal x2478=((x2467)*(x2469));
IkReal x2479=((sj2)*(x2477));
IkReal x2480=((x2468)*(x2471));
IkReal x2481=((cj2)*(x2476));
IkReal x2482=((sj2)*(x2476));
IkReal x2483=((cj2)*(x2477));
IkReal x2484=((x2468)*(x2469));
IkReal x2485=((x2467)*(x2471));
IkReal x2486=((x2484)+(x2482)+(x2483));
IkReal x2487=((x2480)+(x2479)+(x2478));
evalcond[0]=((((cj5)*(r21)))+(x2485)+(((IkReal(-1.00000000000000))*(x2486)))+(((r20)*(sj5))));
evalcond[1]=((x2487)+(((cj4)*(r22)))+(((r21)*(x2473)))+(((IkReal(-1.00000000000000))*(x2481)))+(((IkReal(-1.00000000000000))*(r20)*(x2472))));
evalcond[2]=((x2487)+(((IkReal(-1.00000000000000))*(x2481)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2470)))+(((IkReal(-1.00000000000000))*(r10)*(x2475)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2470)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2474))));
evalcond[3]=((((cj0)*(r00)*(x2472)))+(x2486)+(((r10)*(sj0)*(x2472)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2474)))+(((IkReal(-1.00000000000000))*(x2485)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2470)))+(((IkReal(-1.00000000000000))*(r01)*(x2470)*(x2473)))+(((IkReal(-1.00000000000000))*(r11)*(x2473)*(x2474))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2488=((cj5)*(sj4));
IkReal x2489=((r21)*(sj4));
IkReal x2490=((cj5)*(r21));
IkReal x2491=((IkReal(0.707109999985348))*(cj2));
IkReal x2492=((IkReal(0.707103562373095))*(sj2));
IkReal x2493=((IkReal(0.707109999985348))*(sj2));
IkReal x2494=((cj4)*(r22));
IkReal x2495=((IkReal(0.707103562373095))*(cj2));
IkReal x2496=((r20)*(x2491));
IkReal x2497=((sj5)*(x2495));
IkReal x2498=((sj5)*(x2493));
if( IKabs(((gconst48)*(((((x2492)*(x2494)))+(((IkReal(-1.00000000000000))*(r20)*(x2488)*(x2492)))+(((IkReal(-1.00000000000000))*(x2490)*(x2495)))+(((x2490)*(x2493)))+(((IkReal(-1.00000000000000))*(r20)*(x2497)))+(((IkReal(-1.00000000000000))*(x2488)*(x2496)))+(((sj5)*(x2489)*(x2491)))+(((sj5)*(x2489)*(x2492)))+(((x2491)*(x2494)))+(((r20)*(x2498))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((IkReal(-1.00000000000000))*(r20)*(x2488)*(x2493)))+(((IkReal(-1.00000000000000))*(x2490)*(x2492)))+(((IkReal(-1.00000000000000))*(x2490)*(x2491)))+(((IkReal(-1.00000000000000))*(x2494)*(x2495)))+(((x2493)*(x2494)))+(((r20)*(x2488)*(x2495)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2492)))+(((IkReal(-1.00000000000000))*(x2489)*(x2497)))+(((IkReal(-1.00000000000000))*(sj5)*(x2496)))+(((x2489)*(x2498))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst48)*(((((x2492)*(x2494)))+(((IkReal(-1.00000000000000))*(r20)*(x2488)*(x2492)))+(((IkReal(-1.00000000000000))*(x2490)*(x2495)))+(((x2490)*(x2493)))+(((IkReal(-1.00000000000000))*(r20)*(x2497)))+(((IkReal(-1.00000000000000))*(x2488)*(x2496)))+(((sj5)*(x2489)*(x2491)))+(((sj5)*(x2489)*(x2492)))+(((x2491)*(x2494)))+(((r20)*(x2498)))))), ((gconst48)*(((((IkReal(-1.00000000000000))*(r20)*(x2488)*(x2493)))+(((IkReal(-1.00000000000000))*(x2490)*(x2492)))+(((IkReal(-1.00000000000000))*(x2490)*(x2491)))+(((IkReal(-1.00000000000000))*(x2494)*(x2495)))+(((x2493)*(x2494)))+(((r20)*(x2488)*(x2495)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2492)))+(((IkReal(-1.00000000000000))*(x2489)*(x2497)))+(((IkReal(-1.00000000000000))*(sj5)*(x2496)))+(((x2489)*(x2498)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2499=IKsin(j1);
IkReal x2500=IKcos(j1);
IkReal x2501=((IkReal(0.707109999985348))*(cj2));
IkReal x2502=((IkReal(1.00000000000000))*(cj0));
IkReal x2503=((IkReal(0.707109999985348))*(sj2));
IkReal x2504=((cj5)*(sj4));
IkReal x2505=((sj4)*(sj5));
IkReal x2506=((IkReal(1.00000000000000))*(sj0));
IkReal x2507=((sj5)*(x2506));
IkReal x2508=((IkReal(0.707103562373095))*(x2500));
IkReal x2509=((IkReal(0.707103562373095))*(x2499));
IkReal x2510=((x2499)*(x2501));
IkReal x2511=((sj2)*(x2509));
IkReal x2512=((x2500)*(x2503));
IkReal x2513=((cj2)*(x2508));
IkReal x2514=((sj2)*(x2508));
IkReal x2515=((cj2)*(x2509));
IkReal x2516=((x2500)*(x2501));
IkReal x2517=((x2499)*(x2503));
IkReal x2518=((x2514)+(x2515)+(x2516));
IkReal x2519=((x2510)+(x2511)+(x2512));
evalcond[0]=((((cj5)*(r21)))+(x2517)+(((IkReal(-1.00000000000000))*(x2518)))+(((r20)*(sj5))));
evalcond[1]=((x2519)+(((IkReal(-1.00000000000000))*(x2513)))+(((cj4)*(r22)))+(((r21)*(x2505)))+(((IkReal(-1.00000000000000))*(r20)*(x2504))));
evalcond[2]=((x2519)+(((IkReal(-1.00000000000000))*(x2513)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2502)))+(((IkReal(-1.00000000000000))*(r10)*(x2507)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2502)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2506))));
evalcond[3]=((((r10)*(sj0)*(x2504)))+(x2518)+(((IkReal(-1.00000000000000))*(x2517)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2502)))+(((IkReal(-1.00000000000000))*(r11)*(x2505)*(x2506)))+(((cj0)*(r00)*(x2504)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2506)))+(((IkReal(-1.00000000000000))*(r01)*(x2502)*(x2505))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2520=((sj0)*(sj4));
IkReal x2521=((IkReal(1.00000000000000))*(r12));
IkReal x2522=((IkReal(1.00000000000000))*(cj0));
IkReal x2523=((cj4)*(cj5));
IkReal x2524=((r11)*(sj5));
IkReal x2525=((cj4)*(sj0));
IkReal x2526=((IkReal(1.00000000000000))*(sj5));
IkReal x2527=((cj0)*(cj4));
IkReal x2528=((r00)*(sj0));
IkReal x2529=((cj0)*(sj4));
IkReal x2530=((r01)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((cj5)*(r01)*(sj0)))+(((sj5)*(x2528)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2522)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x2522))));
evalcond[2]=((IkReal(0.00600000000000000))+(((IkReal(-1.00000000000000))*(cj4)*(npy)*(x2526)))+(((npx)*(x2523)))+(((npz)*(sj4))));
evalcond[3]=((((r02)*(x2525)))+(((IkReal(-1.00000000000000))*(sj4)*(x2522)*(x2524)))+(((x2520)*(x2530)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x2520)))+(((cj5)*(r10)*(x2529)))+(((IkReal(-1.00000000000000))*(x2521)*(x2527))));
evalcond[4]=((IkReal(-1.00000000000000))+(((r02)*(x2520)))+(((IkReal(-1.00000000000000))*(r01)*(x2525)*(x2526)))+(((IkReal(-1.00000000000000))*(r10)*(x2522)*(x2523)))+(((x2523)*(x2528)))+(((x2524)*(x2527)))+(((IkReal(-1.00000000000000))*(x2521)*(x2529))));
evalcond[5]=((((r22)*(sj4)))+(((r20)*(x2523)))+(((IkReal(-1.00000000000000))*(cj4)*(r21)*(x2526))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2520)*(x2521)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x2522)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x2523)))+(((x2527)*(x2530)))+(((x2524)*(x2525)))+(((IkReal(-1.00000000000000))*(r00)*(x2522)*(x2523))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2531=((cj4)*(npz));
IkReal x2532=((IkReal(2.94476514910275))*(cj5));
IkReal x2533=((npx)*(sj4));
IkReal x2534=((IkReal(2.34381456633434))*(sj5));
IkReal x2535=((npy)*(sj4));
IkReal x2536=((IkReal(2.94476514910275))*(sj5));
IkReal x2537=((IkReal(2.34381456633434))*(cj5));
if( IKabs(((IkReal(0.534026994013214))+(((IkReal(-2.34381456633434))*(x2531)))+(((IkReal(-1.00000000000000))*(x2534)*(x2535)))+(((IkReal(-1.00000000000000))*(npx)*(x2536)))+(((x2533)*(x2537)))+(((IkReal(-1.00000000000000))*(npy)*(x2532))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.816018998475795))+(((IkReal(2.94476514910275))*(x2531)))+(((IkReal(-1.00000000000000))*(npx)*(x2534)))+(((IkReal(-1.00000000000000))*(npy)*(x2537)))+(((IkReal(-1.00000000000000))*(x2532)*(x2533)))+(((x2535)*(x2536))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.534026994013214))+(((IkReal(-2.34381456633434))*(x2531)))+(((IkReal(-1.00000000000000))*(x2534)*(x2535)))+(((IkReal(-1.00000000000000))*(npx)*(x2536)))+(((x2533)*(x2537)))+(((IkReal(-1.00000000000000))*(npy)*(x2532)))))+IKsqr(((IkReal(-0.816018998475795))+(((IkReal(2.94476514910275))*(x2531)))+(((IkReal(-1.00000000000000))*(npx)*(x2534)))+(((IkReal(-1.00000000000000))*(npy)*(x2537)))+(((IkReal(-1.00000000000000))*(x2532)*(x2533)))+(((x2535)*(x2536)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((IkReal(0.534026994013214))+(((IkReal(-2.34381456633434))*(x2531)))+(((IkReal(-1.00000000000000))*(x2534)*(x2535)))+(((IkReal(-1.00000000000000))*(npx)*(x2536)))+(((x2533)*(x2537)))+(((IkReal(-1.00000000000000))*(npy)*(x2532)))), ((IkReal(-0.816018998475795))+(((IkReal(2.94476514910275))*(x2531)))+(((IkReal(-1.00000000000000))*(npx)*(x2534)))+(((IkReal(-1.00000000000000))*(npy)*(x2537)))+(((IkReal(-1.00000000000000))*(x2532)*(x2533)))+(((x2535)*(x2536)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x2538=IKcos(j2);
IkReal x2539=IKsin(j2);
evalcond[0]=((IkReal(-0.258003287011922))+(((IkReal(-1.00000000000000))*(cj5)*(npx)*(sj4)))+(((IkReal(0.165463933124939))*(x2539)))+(((npy)*(sj4)*(sj5)))+(((cj4)*(npz)))+(((IkReal(-0.207888640466058))*(x2538))));
evalcond[1]=((IkReal(0.0240035672348961))+(((npx)*(sj5)))+(((IkReal(0.165463933124939))*(x2538)))+(((cj5)*(npy)))+(((IkReal(0.207888640466058))*(x2539))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2540=((cj5)*(r11));
IkReal x2541=((r10)*(sj0));
IkReal x2542=((IkReal(0.707103562373095))*(cj2));
IkReal x2543=((r20)*(sj5));
IkReal x2544=((IkReal(0.707103562373095))*(sj2));
IkReal x2545=((IkReal(0.707109999985348))*(cj2));
IkReal x2546=((cj0)*(r00));
IkReal x2547=((IkReal(0.707109999985348))*(sj2));
IkReal x2548=((cj5)*(r21));
IkReal x2549=((sj0)*(x2544));
IkReal x2550=((sj5)*(x2545));
IkReal x2551=((cj0)*(cj5)*(r01));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(x2543)*(x2547)))+(((sj5)*(x2544)*(x2546)))+(((sj0)*(x2540)*(x2545)))+(((x2542)*(x2548)))+(((x2542)*(x2543)))+(((sj5)*(x2541)*(x2544)))+(((x2541)*(x2550)))+(((x2540)*(x2549)))+(((x2544)*(x2551)))+(((x2545)*(x2551)))+(((IkReal(-1.00000000000000))*(x2547)*(x2548)))+(((x2546)*(x2550))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(sj5)*(x2541)*(x2542)))+(((sj5)*(x2546)*(x2547)))+(((IkReal(-1.00000000000000))*(x2542)*(x2551)))+(((x2547)*(x2551)))+(((IkReal(-1.00000000000000))*(sj5)*(x2542)*(x2546)))+(((x2543)*(x2544)))+(((x2543)*(x2545)))+(((sj0)*(x2540)*(x2547)))+(((sj5)*(x2541)*(x2547)))+(((x2545)*(x2548)))+(((IkReal(-1.00000000000000))*(sj0)*(x2540)*(x2542)))+(((x2544)*(x2548))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(x2543)*(x2547)))+(((sj5)*(x2544)*(x2546)))+(((sj0)*(x2540)*(x2545)))+(((x2542)*(x2548)))+(((x2542)*(x2543)))+(((sj5)*(x2541)*(x2544)))+(((x2541)*(x2550)))+(((x2540)*(x2549)))+(((x2544)*(x2551)))+(((x2545)*(x2551)))+(((IkReal(-1.00000000000000))*(x2547)*(x2548)))+(((x2546)*(x2550)))))), ((gconst51)*(((((IkReal(-1.00000000000000))*(sj5)*(x2541)*(x2542)))+(((sj5)*(x2546)*(x2547)))+(((IkReal(-1.00000000000000))*(x2542)*(x2551)))+(((x2547)*(x2551)))+(((IkReal(-1.00000000000000))*(sj5)*(x2542)*(x2546)))+(((x2543)*(x2544)))+(((x2543)*(x2545)))+(((sj0)*(x2540)*(x2547)))+(((sj5)*(x2541)*(x2547)))+(((x2545)*(x2548)))+(((IkReal(-1.00000000000000))*(sj0)*(x2540)*(x2542)))+(((x2544)*(x2548)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2552=IKcos(j1);
IkReal x2553=IKsin(j1);
IkReal x2554=((IkReal(0.707109999985348))*(cj2));
IkReal x2555=((IkReal(1.00000000000000))*(cj0));
IkReal x2556=((IkReal(0.707109999985348))*(sj2));
IkReal x2557=((cj5)*(sj4));
IkReal x2558=((sj4)*(sj5));
IkReal x2559=((IkReal(1.00000000000000))*(sj0));
IkReal x2560=((sj5)*(x2559));
IkReal x2561=((IkReal(0.707103562373095))*(x2552));
IkReal x2562=((IkReal(0.707103562373095))*(x2553));
IkReal x2563=((cj2)*(x2561));
IkReal x2564=((x2553)*(x2554));
IkReal x2565=((sj2)*(x2562));
IkReal x2566=((x2552)*(x2556));
IkReal x2567=((sj2)*(x2561));
IkReal x2568=((cj2)*(x2562));
IkReal x2569=((x2552)*(x2554));
IkReal x2570=((x2553)*(x2556));
IkReal x2571=((x2569)+(x2568)+(x2567));
IkReal x2572=((x2565)+(x2564)+(x2566));
evalcond[0]=((((cj5)*(r21)))+(x2571)+(((IkReal(-1.00000000000000))*(x2570)))+(((r20)*(sj5))));
evalcond[1]=((x2572)+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x2557)))+(((IkReal(-1.00000000000000))*(x2563)))+(((r21)*(x2558))));
evalcond[2]=((x2563)+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2559)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2555)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2555)))+(((IkReal(-1.00000000000000))*(x2572)))+(((IkReal(-1.00000000000000))*(r10)*(x2560))));
evalcond[3]=((x2571)+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2559)))+(((cj0)*(r00)*(x2557)))+(((IkReal(-1.00000000000000))*(x2570)))+(((IkReal(-1.00000000000000))*(r01)*(x2555)*(x2558)))+(((r10)*(sj0)*(x2557)))+(((IkReal(-1.00000000000000))*(r11)*(x2558)*(x2559)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2555))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2573=((cj5)*(sj4));
IkReal x2574=((r21)*(sj4));
IkReal x2575=((cj5)*(r21));
IkReal x2576=((IkReal(0.707109999985348))*(cj2));
IkReal x2577=((IkReal(0.707103562373095))*(sj2));
IkReal x2578=((IkReal(0.707109999985348))*(sj2));
IkReal x2579=((cj4)*(r22));
IkReal x2580=((IkReal(0.707103562373095))*(cj2));
IkReal x2581=((r20)*(x2576));
IkReal x2582=((sj5)*(x2580));
IkReal x2583=((sj5)*(x2578));
if( IKabs(((gconst50)*(((((r20)*(x2573)*(x2577)))+(((x2575)*(x2578)))+(((IkReal(-1.00000000000000))*(r20)*(x2582)))+(((r20)*(x2583)))+(((IkReal(-1.00000000000000))*(sj5)*(x2574)*(x2576)))+(((IkReal(-1.00000000000000))*(sj5)*(x2574)*(x2577)))+(((x2573)*(x2581)))+(((IkReal(-1.00000000000000))*(x2575)*(x2580)))+(((IkReal(-1.00000000000000))*(x2577)*(x2579)))+(((IkReal(-1.00000000000000))*(x2576)*(x2579))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((IkReal(-1.00000000000000))*(x2575)*(x2577)))+(((IkReal(-1.00000000000000))*(x2575)*(x2576)))+(((r20)*(x2573)*(x2578)))+(((x2574)*(x2582)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2577)))+(((IkReal(-1.00000000000000))*(sj5)*(x2581)))+(((IkReal(-1.00000000000000))*(x2578)*(x2579)))+(((IkReal(-1.00000000000000))*(r20)*(x2573)*(x2580)))+(((x2579)*(x2580)))+(((IkReal(-1.00000000000000))*(x2574)*(x2583))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst50)*(((((r20)*(x2573)*(x2577)))+(((x2575)*(x2578)))+(((IkReal(-1.00000000000000))*(r20)*(x2582)))+(((r20)*(x2583)))+(((IkReal(-1.00000000000000))*(sj5)*(x2574)*(x2576)))+(((IkReal(-1.00000000000000))*(sj5)*(x2574)*(x2577)))+(((x2573)*(x2581)))+(((IkReal(-1.00000000000000))*(x2575)*(x2580)))+(((IkReal(-1.00000000000000))*(x2577)*(x2579)))+(((IkReal(-1.00000000000000))*(x2576)*(x2579)))))), ((gconst50)*(((((IkReal(-1.00000000000000))*(x2575)*(x2577)))+(((IkReal(-1.00000000000000))*(x2575)*(x2576)))+(((r20)*(x2573)*(x2578)))+(((x2574)*(x2582)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2577)))+(((IkReal(-1.00000000000000))*(sj5)*(x2581)))+(((IkReal(-1.00000000000000))*(x2578)*(x2579)))+(((IkReal(-1.00000000000000))*(r20)*(x2573)*(x2580)))+(((x2579)*(x2580)))+(((IkReal(-1.00000000000000))*(x2574)*(x2583)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2584=IKcos(j1);
IkReal x2585=IKsin(j1);
IkReal x2586=((IkReal(0.707109999985348))*(cj2));
IkReal x2587=((IkReal(1.00000000000000))*(cj0));
IkReal x2588=((IkReal(0.707109999985348))*(sj2));
IkReal x2589=((cj5)*(sj4));
IkReal x2590=((sj4)*(sj5));
IkReal x2591=((IkReal(1.00000000000000))*(sj0));
IkReal x2592=((sj5)*(x2591));
IkReal x2593=((IkReal(0.707103562373095))*(x2584));
IkReal x2594=((IkReal(0.707103562373095))*(x2585));
IkReal x2595=((cj2)*(x2593));
IkReal x2596=((x2585)*(x2586));
IkReal x2597=((sj2)*(x2594));
IkReal x2598=((x2584)*(x2588));
IkReal x2599=((sj2)*(x2593));
IkReal x2600=((cj2)*(x2594));
IkReal x2601=((x2584)*(x2586));
IkReal x2602=((x2585)*(x2588));
IkReal x2603=((x2599)+(x2600)+(x2601));
IkReal x2604=((x2596)+(x2597)+(x2598));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x2602)))+(((r20)*(sj5)))+(x2603));
evalcond[1]=((((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x2595)))+(((IkReal(-1.00000000000000))*(r20)*(x2589)))+(x2604)+(((r21)*(x2590))));
evalcond[2]=((x2595)+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2591)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2587)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2587)))+(((IkReal(-1.00000000000000))*(x2604)))+(((IkReal(-1.00000000000000))*(r10)*(x2592))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2591)))+(((IkReal(-1.00000000000000))*(r01)*(x2587)*(x2590)))+(((IkReal(-1.00000000000000))*(r11)*(x2590)*(x2591)))+(((cj0)*(r00)*(x2589)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2587)))+(((IkReal(-1.00000000000000))*(x2602)))+(((r10)*(sj0)*(x2589)))+(x2603));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2605=((sj0)*(sj4));
IkReal x2606=((IkReal(1.00000000000000))*(r12));
IkReal x2607=((IkReal(1.00000000000000))*(cj0));
IkReal x2608=((cj4)*(cj5));
IkReal x2609=((r11)*(sj5));
IkReal x2610=((cj4)*(sj0));
IkReal x2611=((IkReal(1.00000000000000))*(sj5));
IkReal x2612=((cj0)*(cj4));
IkReal x2613=((r00)*(sj0));
IkReal x2614=((cj0)*(sj4));
IkReal x2615=((r01)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((sj5)*(x2613)))+(((cj5)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2607)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x2607))));
evalcond[2]=((IkReal(0.00600000000000000))+(((npx)*(x2608)))+(((IkReal(-1.00000000000000))*(cj4)*(npy)*(x2611)))+(((npz)*(sj4))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2606)*(x2612)))+(((cj5)*(r10)*(x2614)))+(((r02)*(x2610)))+(((x2605)*(x2615)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x2605)))+(((IkReal(-1.00000000000000))*(sj4)*(x2607)*(x2609))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x2606)*(x2614)))+(((IkReal(-1.00000000000000))*(r01)*(x2610)*(x2611)))+(((x2608)*(x2613)))+(((r02)*(x2605)))+(((x2609)*(x2612)))+(((IkReal(-1.00000000000000))*(r10)*(x2607)*(x2608))));
evalcond[5]=((((r20)*(x2608)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(r21)*(x2611))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r02)*(sj4)*(x2607)))+(((x2609)*(x2610)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x2608)))+(((IkReal(-1.00000000000000))*(r00)*(x2607)*(x2608)))+(((x2612)*(x2615)))+(((IkReal(-1.00000000000000))*(x2605)*(x2606))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2616=((cj4)*(npz));
IkReal x2617=((IkReal(2.94476514910275))*(cj5));
IkReal x2618=((npx)*(sj4));
IkReal x2619=((IkReal(2.34381456633434))*(sj5));
IkReal x2620=((npy)*(sj4));
IkReal x2621=((IkReal(2.94476514910275))*(sj5));
IkReal x2622=((IkReal(2.34381456633434))*(cj5));
if( IKabs(((IkReal(0.534026994013214))+(((IkReal(-1.00000000000000))*(x2619)*(x2620)))+(((IkReal(-1.00000000000000))*(npx)*(x2621)))+(((IkReal(-1.00000000000000))*(npy)*(x2617)))+(((x2618)*(x2622)))+(((IkReal(-2.34381456633434))*(x2616))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.816018998475795))+(((IkReal(-1.00000000000000))*(x2617)*(x2618)))+(((IkReal(-1.00000000000000))*(npx)*(x2619)))+(((IkReal(-1.00000000000000))*(npy)*(x2622)))+(((x2620)*(x2621)))+(((IkReal(2.94476514910275))*(x2616))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.534026994013214))+(((IkReal(-1.00000000000000))*(x2619)*(x2620)))+(((IkReal(-1.00000000000000))*(npx)*(x2621)))+(((IkReal(-1.00000000000000))*(npy)*(x2617)))+(((x2618)*(x2622)))+(((IkReal(-2.34381456633434))*(x2616)))))+IKsqr(((IkReal(-0.816018998475795))+(((IkReal(-1.00000000000000))*(x2617)*(x2618)))+(((IkReal(-1.00000000000000))*(npx)*(x2619)))+(((IkReal(-1.00000000000000))*(npy)*(x2622)))+(((x2620)*(x2621)))+(((IkReal(2.94476514910275))*(x2616)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((IkReal(0.534026994013214))+(((IkReal(-1.00000000000000))*(x2619)*(x2620)))+(((IkReal(-1.00000000000000))*(npx)*(x2621)))+(((IkReal(-1.00000000000000))*(npy)*(x2617)))+(((x2618)*(x2622)))+(((IkReal(-2.34381456633434))*(x2616)))), ((IkReal(-0.816018998475795))+(((IkReal(-1.00000000000000))*(x2617)*(x2618)))+(((IkReal(-1.00000000000000))*(npx)*(x2619)))+(((IkReal(-1.00000000000000))*(npy)*(x2622)))+(((x2620)*(x2621)))+(((IkReal(2.94476514910275))*(x2616)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x2623=IKcos(j2);
IkReal x2624=IKsin(j2);
evalcond[0]=((IkReal(-0.258003287011922))+(((IkReal(-0.207888640466058))*(x2623)))+(((IkReal(-1.00000000000000))*(cj5)*(npx)*(sj4)))+(((IkReal(0.165463933124939))*(x2624)))+(((npy)*(sj4)*(sj5)))+(((cj4)*(npz))));
evalcond[1]=((IkReal(0.0240035672348961))+(((npx)*(sj5)))+(((IkReal(0.165463933124939))*(x2623)))+(((cj5)*(npy)))+(((IkReal(0.207888640466058))*(x2624))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2625=((cj5)*(r11));
IkReal x2626=((r10)*(sj0));
IkReal x2627=((IkReal(0.707103562373095))*(cj2));
IkReal x2628=((r20)*(sj5));
IkReal x2629=((IkReal(0.707103562373095))*(sj2));
IkReal x2630=((IkReal(0.707109999985348))*(cj2));
IkReal x2631=((cj0)*(r00));
IkReal x2632=((IkReal(0.707109999985348))*(sj2));
IkReal x2633=((cj5)*(r21));
IkReal x2634=((sj0)*(x2629));
IkReal x2635=((sj5)*(x2630));
IkReal x2636=((cj0)*(cj5)*(r01));
if( IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(x2628)*(x2632)))+(((sj0)*(x2625)*(x2630)))+(((x2627)*(x2628)))+(((x2625)*(x2634)))+(((sj5)*(x2629)*(x2631)))+(((IkReal(-1.00000000000000))*(x2632)*(x2633)))+(((x2630)*(x2636)))+(((sj5)*(x2626)*(x2629)))+(((x2631)*(x2635)))+(((x2627)*(x2633)))+(((x2626)*(x2635)))+(((x2629)*(x2636))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((x2628)*(x2629)))+(((IkReal(-1.00000000000000))*(sj5)*(x2626)*(x2627)))+(((IkReal(-1.00000000000000))*(sj0)*(x2625)*(x2627)))+(((sj5)*(x2626)*(x2632)))+(((sj0)*(x2625)*(x2632)))+(((sj5)*(x2631)*(x2632)))+(((x2632)*(x2636)))+(((x2628)*(x2630)))+(((IkReal(-1.00000000000000))*(sj5)*(x2627)*(x2631)))+(((x2630)*(x2633)))+(((x2629)*(x2633)))+(((IkReal(-1.00000000000000))*(x2627)*(x2636))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst53)*(((((IkReal(-1.00000000000000))*(x2628)*(x2632)))+(((sj0)*(x2625)*(x2630)))+(((x2627)*(x2628)))+(((x2625)*(x2634)))+(((sj5)*(x2629)*(x2631)))+(((IkReal(-1.00000000000000))*(x2632)*(x2633)))+(((x2630)*(x2636)))+(((sj5)*(x2626)*(x2629)))+(((x2631)*(x2635)))+(((x2627)*(x2633)))+(((x2626)*(x2635)))+(((x2629)*(x2636)))))), ((gconst53)*(((((x2628)*(x2629)))+(((IkReal(-1.00000000000000))*(sj5)*(x2626)*(x2627)))+(((IkReal(-1.00000000000000))*(sj0)*(x2625)*(x2627)))+(((sj5)*(x2626)*(x2632)))+(((sj0)*(x2625)*(x2632)))+(((sj5)*(x2631)*(x2632)))+(((x2632)*(x2636)))+(((x2628)*(x2630)))+(((IkReal(-1.00000000000000))*(sj5)*(x2627)*(x2631)))+(((x2630)*(x2633)))+(((x2629)*(x2633)))+(((IkReal(-1.00000000000000))*(x2627)*(x2636)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2637=IKcos(j1);
IkReal x2638=IKsin(j1);
IkReal x2639=((IkReal(0.707109999985348))*(cj2));
IkReal x2640=((IkReal(1.00000000000000))*(cj0));
IkReal x2641=((IkReal(0.707109999985348))*(sj2));
IkReal x2642=((cj5)*(sj4));
IkReal x2643=((sj4)*(sj5));
IkReal x2644=((IkReal(1.00000000000000))*(sj0));
IkReal x2645=((sj5)*(x2644));
IkReal x2646=((IkReal(0.707103562373095))*(x2637));
IkReal x2647=((IkReal(0.707103562373095))*(x2638));
IkReal x2648=((cj2)*(x2646));
IkReal x2649=((x2638)*(x2639));
IkReal x2650=((sj2)*(x2647));
IkReal x2651=((x2637)*(x2641));
IkReal x2652=((sj2)*(x2646));
IkReal x2653=((cj2)*(x2647));
IkReal x2654=((x2637)*(x2639));
IkReal x2655=((x2638)*(x2641));
IkReal x2656=((x2653)+(x2652)+(x2654));
IkReal x2657=((x2649)+(x2651)+(x2650));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x2655)))+(((r20)*(sj5)))+(x2656));
evalcond[1]=((((r21)*(x2643)))+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x2648)))+(((IkReal(-1.00000000000000))*(r20)*(x2642)))+(x2657));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2640)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2644)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2640)))+(((IkReal(-1.00000000000000))*(x2657)))+(((IkReal(-1.00000000000000))*(r10)*(x2645)))+(x2648));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x2640)*(x2643)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2644)))+(((IkReal(-1.00000000000000))*(r11)*(x2643)*(x2644)))+(((cj0)*(r00)*(x2642)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2640)))+(((IkReal(-1.00000000000000))*(x2655)))+(((r10)*(sj0)*(x2642)))+(x2656));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2658=((cj5)*(sj4));
IkReal x2659=((r21)*(sj4));
IkReal x2660=((cj5)*(r21));
IkReal x2661=((IkReal(0.707109999985348))*(cj2));
IkReal x2662=((IkReal(0.707103562373095))*(sj2));
IkReal x2663=((IkReal(0.707109999985348))*(sj2));
IkReal x2664=((cj4)*(r22));
IkReal x2665=((IkReal(0.707103562373095))*(cj2));
IkReal x2666=((r20)*(x2661));
IkReal x2667=((sj5)*(x2665));
IkReal x2668=((sj5)*(x2663));
if( IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(x2660)*(x2665)))+(((x2658)*(x2666)))+(((IkReal(-1.00000000000000))*(sj5)*(x2659)*(x2662)))+(((IkReal(-1.00000000000000))*(sj5)*(x2659)*(x2661)))+(((r20)*(x2658)*(x2662)))+(((IkReal(-1.00000000000000))*(x2662)*(x2664)))+(((IkReal(-1.00000000000000))*(r20)*(x2667)))+(((x2660)*(x2663)))+(((r20)*(x2668)))+(((IkReal(-1.00000000000000))*(x2661)*(x2664))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(x2660)*(x2662)))+(((IkReal(-1.00000000000000))*(x2660)*(x2661)))+(((x2659)*(x2667)))+(((IkReal(-1.00000000000000))*(r20)*(x2658)*(x2665)))+(((r20)*(x2658)*(x2663)))+(((x2664)*(x2665)))+(((IkReal(-1.00000000000000))*(x2663)*(x2664)))+(((IkReal(-1.00000000000000))*(x2659)*(x2668)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2662)))+(((IkReal(-1.00000000000000))*(sj5)*(x2666))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst52)*(((((IkReal(-1.00000000000000))*(x2660)*(x2665)))+(((x2658)*(x2666)))+(((IkReal(-1.00000000000000))*(sj5)*(x2659)*(x2662)))+(((IkReal(-1.00000000000000))*(sj5)*(x2659)*(x2661)))+(((r20)*(x2658)*(x2662)))+(((IkReal(-1.00000000000000))*(x2662)*(x2664)))+(((IkReal(-1.00000000000000))*(r20)*(x2667)))+(((x2660)*(x2663)))+(((r20)*(x2668)))+(((IkReal(-1.00000000000000))*(x2661)*(x2664)))))), ((gconst52)*(((((IkReal(-1.00000000000000))*(x2660)*(x2662)))+(((IkReal(-1.00000000000000))*(x2660)*(x2661)))+(((x2659)*(x2667)))+(((IkReal(-1.00000000000000))*(r20)*(x2658)*(x2665)))+(((r20)*(x2658)*(x2663)))+(((x2664)*(x2665)))+(((IkReal(-1.00000000000000))*(x2663)*(x2664)))+(((IkReal(-1.00000000000000))*(x2659)*(x2668)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2662)))+(((IkReal(-1.00000000000000))*(sj5)*(x2666)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2669=IKcos(j1);
IkReal x2670=IKsin(j1);
IkReal x2671=((IkReal(0.707109999985348))*(cj2));
IkReal x2672=((IkReal(1.00000000000000))*(cj0));
IkReal x2673=((IkReal(0.707109999985348))*(sj2));
IkReal x2674=((cj5)*(sj4));
IkReal x2675=((sj4)*(sj5));
IkReal x2676=((IkReal(1.00000000000000))*(sj0));
IkReal x2677=((sj5)*(x2676));
IkReal x2678=((IkReal(0.707103562373095))*(x2669));
IkReal x2679=((IkReal(0.707103562373095))*(x2670));
IkReal x2680=((cj2)*(x2678));
IkReal x2681=((x2670)*(x2671));
IkReal x2682=((sj2)*(x2679));
IkReal x2683=((x2669)*(x2673));
IkReal x2684=((sj2)*(x2678));
IkReal x2685=((cj2)*(x2679));
IkReal x2686=((x2669)*(x2671));
IkReal x2687=((x2670)*(x2673));
IkReal x2688=((x2684)+(x2685)+(x2686));
IkReal x2689=((x2681)+(x2682)+(x2683));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x2687)))+(((r20)*(sj5)))+(x2688));
evalcond[1]=((((cj4)*(r22)))+(((r21)*(x2675)))+(((IkReal(-1.00000000000000))*(x2680)))+(((IkReal(-1.00000000000000))*(r20)*(x2674)))+(x2689));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2676)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2672)))+(((IkReal(-1.00000000000000))*(x2689)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2672)))+(((IkReal(-1.00000000000000))*(r10)*(x2677)))+(x2680));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x2672)*(x2675)))+(((IkReal(-1.00000000000000))*(x2687)))+(((r10)*(sj0)*(x2674)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2672)))+(((IkReal(-1.00000000000000))*(r11)*(x2675)*(x2676)))+(((cj0)*(r00)*(x2674)))+(x2688)+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2676))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2690=((cj5)*(npx));
IkReal x2691=((IkReal(8.66210554726807e+23))*(cj4));
IkReal x2692=((npz)*(sj4));
IkReal x2693=((IkReal(6.89439331452234e+23))*(cj3));
IkReal x2694=((npy)*(sj5));
IkReal x2695=((IkReal(6.89439331452234e+23))*(cj4));
IkReal x2696=((IkReal(8.66210554726807e+23))*(cj3)*(sj4));
if( IKabs(((gconst35)*(((((IkReal(-1.00000000000000))*(cj4)*(npz)*(x2693)))+(((x2691)*(x2694)))+(((IkReal(5.19726332836084e+21))*(sj3)))+(((sj4)*(x2690)*(x2693)))+(((IkReal(-1.00000000000000))*(sj4)*(x2693)*(x2694)))+(((IkReal(-8.66210554726807e+23))*(x2692)))+(((IkReal(-1.00000000000000))*(x2690)*(x2691)))+(((IkReal(1.51888207091656e+23))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*(((((IkReal(-6.89439331452234e+23))*(x2692)))+(((IkReal(-2.44170809699545e+23))*(cj3)))+(((cj3)*(npz)*(x2691)))+(((IkReal(4.13663598871341e+21))*(sj3)))+(((x2694)*(x2695)))+(((x2694)*(x2696)))+(((IkReal(-1.00000000000000))*(x2690)*(x2696)))+(((IkReal(-1.00000000000000))*(x2690)*(x2695))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst35)*(((((IkReal(-1.00000000000000))*(cj4)*(npz)*(x2693)))+(((x2691)*(x2694)))+(((IkReal(5.19726332836084e+21))*(sj3)))+(((sj4)*(x2690)*(x2693)))+(((IkReal(-1.00000000000000))*(sj4)*(x2693)*(x2694)))+(((IkReal(-8.66210554726807e+23))*(x2692)))+(((IkReal(-1.00000000000000))*(x2690)*(x2691)))+(((IkReal(1.51888207091656e+23))*(cj3)))))), ((gconst35)*(((((IkReal(-6.89439331452234e+23))*(x2692)))+(((IkReal(-2.44170809699545e+23))*(cj3)))+(((cj3)*(npz)*(x2691)))+(((IkReal(4.13663598871341e+21))*(sj3)))+(((x2694)*(x2695)))+(((x2694)*(x2696)))+(((IkReal(-1.00000000000000))*(x2690)*(x2696)))+(((IkReal(-1.00000000000000))*(x2690)*(x2695)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[3];
IkReal x2697=IKsin(j2);
IkReal x2698=IKcos(j2);
IkReal x2699=((cj5)*(npx));
IkReal x2700=((npy)*(sj5));
IkReal x2701=((IkReal(0.165463933124939))*(x2698));
IkReal x2702=((IkReal(0.207888640466058))*(x2697));
evalcond[0]=((IkReal(-0.258003287011922))+(((IkReal(-1.00000000000000))*(sj4)*(x2699)))+(((sj4)*(x2700)))+(((IkReal(0.165463933124939))*(x2697)))+(((cj4)*(npz)))+(((IkReal(-0.207888640466058))*(x2698))));
evalcond[1]=((IkReal(-0.00600000000000000))+(((IkReal(-0.0300035672348961))*(sj3)))+(((npx)*(sj5)))+(((IkReal(-0.00600000000000000))*(cj3)))+(((cj5)*(npy)))+(((IkReal(-1.00000000000000))*(sj3)*(x2702)))+(((IkReal(-1.00000000000000))*(sj3)*(x2701))));
evalcond[2]=((((npz)*(sj4)))+(((cj4)*(x2699)))+(((IkReal(-0.00600000000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(cj4)*(x2700)))+(((cj3)*(x2701)))+(((cj3)*(x2702)))+(((IkReal(0.0300035672348961))*(cj3))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst36;
IkReal x2703=((IkReal(1.00000000000000))*(sj3));
gconst36=IKsign(((((IkReal(-1.00000000000000))*(x2703)*((sj2)*(sj2))))+(((IkReal(-1.00000000000000))*(x2703)*((cj2)*(cj2))))));
IkReal x2704=((IkReal(1.00000000000000))*(sj3));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x2704)*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*(x2704)*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst37;
IkReal x2705=((IkReal(1.00000000000000))*(cj3));
gconst37=IKsign(((((IkReal(-1.00000000000000))*(x2705)*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*(x2705)*((sj2)*(sj2))))));
IkReal x2706=((IkReal(1.00000000000000))*(cj3));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x2706)*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*(x2706)*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2707=((sj0)*(sj4));
IkReal x2708=((IkReal(1.00000000000000))*(r12));
IkReal x2709=((cj0)*(cj4));
IkReal x2710=((r01)*(sj5));
IkReal x2711=((IkReal(1.00000000000000))*(cj5));
IkReal x2712=((cj4)*(cj5));
IkReal x2713=((IkReal(1.00000000000000))*(cj0));
IkReal x2714=((cj4)*(sj0));
IkReal x2715=((r00)*(sj0));
IkReal x2716=((npy)*(sj5));
IkReal x2717=((IkReal(1.00000000000000))*(cj4));
IkReal x2718=((cj0)*(sj4));
IkReal x2719=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((cj5)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x2713)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x2711)))+(((sj5)*(x2715))));
evalcond[2]=((IkReal(-0.258003287011922))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x2711)))+(((sj4)*(x2716)))+(((IkReal(0.165463933124939))*(sj2))));
evalcond[3]=((IkReal(-0.0360035672348961))+(((npx)*(sj5)))+(((IkReal(-0.165463933124939))*(cj2)))+(((cj5)*(npy)))+(((IkReal(-0.207888640466058))*(sj2))));
evalcond[4]=((IkReal(-0.00600000000000000))+(((npz)*(sj4)))+(((IkReal(-1.00000000000000))*(x2716)*(x2717)))+(((npx)*(x2712))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2708)*(x2709)))+(((cj5)*(r10)*(x2718)))+(((x2707)*(x2710)))+(((r02)*(x2714)))+(((IkReal(-1.00000000000000))*(sj4)*(x2713)*(x2719)))+(((IkReal(-1.00000000000000))*(r00)*(x2707)*(x2711))));
evalcond[6]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x2709)*(x2711)))+(((x2712)*(x2715)))+(((x2709)*(x2719)))+(((IkReal(-1.00000000000000))*(x2710)*(x2714)))+(((IkReal(-1.00000000000000))*(x2708)*(x2718)))+(((r02)*(x2707))));
evalcond[7]=((((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x2717)))+(((r20)*(x2712))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r00)*(x2709)*(x2711)))+(((x2709)*(x2710)))+(((IkReal(-1.00000000000000))*(x2707)*(x2708)))+(((IkReal(-1.00000000000000))*(r10)*(x2711)*(x2714)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x2713)))+(((x2714)*(x2719))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst38;
gconst38=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst39;
gconst39=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2720=((cj5)*(r11));
IkReal x2721=((r10)*(sj0));
IkReal x2722=((IkReal(0.707103562373095))*(cj2));
IkReal x2723=((r20)*(sj5));
IkReal x2724=((IkReal(0.707103562373095))*(sj2));
IkReal x2725=((IkReal(0.707109999985348))*(cj2));
IkReal x2726=((cj0)*(r00));
IkReal x2727=((IkReal(0.707109999985348))*(sj2));
IkReal x2728=((cj5)*(r21));
IkReal x2729=((sj0)*(x2724));
IkReal x2730=((sj5)*(x2725));
IkReal x2731=((cj0)*(cj5)*(r01));
if( IKabs(((gconst39)*(((((IkReal(-1.00000000000000))*(x2726)*(x2730)))+(((IkReal(-1.00000000000000))*(x2724)*(x2731)))+(((IkReal(-1.00000000000000))*(sj5)*(x2721)*(x2724)))+(((IkReal(-1.00000000000000))*(x2725)*(x2731)))+(((IkReal(-1.00000000000000))*(x2722)*(x2728)))+(((IkReal(-1.00000000000000))*(x2722)*(x2723)))+(((IkReal(-1.00000000000000))*(x2720)*(x2729)))+(((x2727)*(x2728)))+(((IkReal(-1.00000000000000))*(sj5)*(x2724)*(x2726)))+(((IkReal(-1.00000000000000))*(x2721)*(x2730)))+(((x2723)*(x2727)))+(((IkReal(-1.00000000000000))*(sj0)*(x2720)*(x2725))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst39)*(((((IkReal(-1.00000000000000))*(x2725)*(x2728)))+(((IkReal(-1.00000000000000))*(x2724)*(x2728)))+(((IkReal(-1.00000000000000))*(x2727)*(x2731)))+(((IkReal(-1.00000000000000))*(sj5)*(x2721)*(x2727)))+(((sj5)*(x2721)*(x2722)))+(((sj0)*(x2720)*(x2722)))+(((IkReal(-1.00000000000000))*(x2723)*(x2724)))+(((IkReal(-1.00000000000000))*(x2723)*(x2725)))+(((sj5)*(x2722)*(x2726)))+(((x2722)*(x2731)))+(((IkReal(-1.00000000000000))*(sj5)*(x2726)*(x2727)))+(((IkReal(-1.00000000000000))*(sj0)*(x2720)*(x2727))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst39)*(((((IkReal(-1.00000000000000))*(x2726)*(x2730)))+(((IkReal(-1.00000000000000))*(x2724)*(x2731)))+(((IkReal(-1.00000000000000))*(sj5)*(x2721)*(x2724)))+(((IkReal(-1.00000000000000))*(x2725)*(x2731)))+(((IkReal(-1.00000000000000))*(x2722)*(x2728)))+(((IkReal(-1.00000000000000))*(x2722)*(x2723)))+(((IkReal(-1.00000000000000))*(x2720)*(x2729)))+(((x2727)*(x2728)))+(((IkReal(-1.00000000000000))*(sj5)*(x2724)*(x2726)))+(((IkReal(-1.00000000000000))*(x2721)*(x2730)))+(((x2723)*(x2727)))+(((IkReal(-1.00000000000000))*(sj0)*(x2720)*(x2725)))))), ((gconst39)*(((((IkReal(-1.00000000000000))*(x2725)*(x2728)))+(((IkReal(-1.00000000000000))*(x2724)*(x2728)))+(((IkReal(-1.00000000000000))*(x2727)*(x2731)))+(((IkReal(-1.00000000000000))*(sj5)*(x2721)*(x2727)))+(((sj5)*(x2721)*(x2722)))+(((sj0)*(x2720)*(x2722)))+(((IkReal(-1.00000000000000))*(x2723)*(x2724)))+(((IkReal(-1.00000000000000))*(x2723)*(x2725)))+(((sj5)*(x2722)*(x2726)))+(((x2722)*(x2731)))+(((IkReal(-1.00000000000000))*(sj5)*(x2726)*(x2727)))+(((IkReal(-1.00000000000000))*(sj0)*(x2720)*(x2727)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2732=IKsin(j1);
IkReal x2733=IKcos(j1);
IkReal x2734=((IkReal(0.707109999985348))*(cj2));
IkReal x2735=((IkReal(1.00000000000000))*(cj0));
IkReal x2736=((IkReal(0.707109999985348))*(sj2));
IkReal x2737=((cj5)*(sj4));
IkReal x2738=((sj4)*(sj5));
IkReal x2739=((IkReal(1.00000000000000))*(sj0));
IkReal x2740=((sj5)*(x2739));
IkReal x2741=((IkReal(0.707103562373095))*(x2733));
IkReal x2742=((IkReal(0.707103562373095))*(x2732));
IkReal x2743=((x2732)*(x2734));
IkReal x2744=((sj2)*(x2742));
IkReal x2745=((x2733)*(x2736));
IkReal x2746=((cj2)*(x2741));
IkReal x2747=((sj2)*(x2741));
IkReal x2748=((cj2)*(x2742));
IkReal x2749=((x2733)*(x2734));
IkReal x2750=((x2732)*(x2736));
IkReal x2751=((x2747)+(x2749)+(x2748));
IkReal x2752=((x2743)+(x2745)+(x2744));
evalcond[0]=((x2750)+(((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x2751)))+(((r20)*(sj5))));
evalcond[1]=((x2752)+(((cj4)*(r22)))+(((r21)*(x2738)))+(((IkReal(-1.00000000000000))*(r20)*(x2737)))+(((IkReal(-1.00000000000000))*(x2746))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2739)))+(x2752)+(((IkReal(-1.00000000000000))*(r10)*(x2740)))+(((IkReal(-1.00000000000000))*(x2746)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2735)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2735))));
evalcond[3]=((x2751)+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2739)))+(((IkReal(-1.00000000000000))*(r11)*(x2738)*(x2739)))+(((cj0)*(r00)*(x2737)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2735)))+(((IkReal(-1.00000000000000))*(x2750)))+(((IkReal(-1.00000000000000))*(r01)*(x2735)*(x2738)))+(((r10)*(sj0)*(x2737))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2753=((cj5)*(sj4));
IkReal x2754=((r21)*(sj4));
IkReal x2755=((cj5)*(r21));
IkReal x2756=((IkReal(0.707109999985348))*(cj2));
IkReal x2757=((IkReal(0.707103562373095))*(sj2));
IkReal x2758=((IkReal(0.707109999985348))*(sj2));
IkReal x2759=((cj4)*(r22));
IkReal x2760=((IkReal(0.707103562373095))*(cj2));
IkReal x2761=((r20)*(x2756));
IkReal x2762=((sj5)*(x2760));
IkReal x2763=((sj5)*(x2758));
if( IKabs(((gconst38)*(((((IkReal(-1.00000000000000))*(x2755)*(x2760)))+(((sj5)*(x2754)*(x2756)))+(((sj5)*(x2754)*(x2757)))+(((x2756)*(x2759)))+(((x2757)*(x2759)))+(((r20)*(x2763)))+(((x2755)*(x2758)))+(((IkReal(-1.00000000000000))*(x2753)*(x2761)))+(((IkReal(-1.00000000000000))*(r20)*(x2753)*(x2757)))+(((IkReal(-1.00000000000000))*(r20)*(x2762))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst38)*(((((x2754)*(x2763)))+(((x2758)*(x2759)))+(((IkReal(-1.00000000000000))*(x2759)*(x2760)))+(((r20)*(x2753)*(x2760)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2757)))+(((IkReal(-1.00000000000000))*(r20)*(x2753)*(x2758)))+(((IkReal(-1.00000000000000))*(x2755)*(x2757)))+(((IkReal(-1.00000000000000))*(x2755)*(x2756)))+(((IkReal(-1.00000000000000))*(sj5)*(x2761)))+(((IkReal(-1.00000000000000))*(x2754)*(x2762))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst38)*(((((IkReal(-1.00000000000000))*(x2755)*(x2760)))+(((sj5)*(x2754)*(x2756)))+(((sj5)*(x2754)*(x2757)))+(((x2756)*(x2759)))+(((x2757)*(x2759)))+(((r20)*(x2763)))+(((x2755)*(x2758)))+(((IkReal(-1.00000000000000))*(x2753)*(x2761)))+(((IkReal(-1.00000000000000))*(r20)*(x2753)*(x2757)))+(((IkReal(-1.00000000000000))*(r20)*(x2762)))))), ((gconst38)*(((((x2754)*(x2763)))+(((x2758)*(x2759)))+(((IkReal(-1.00000000000000))*(x2759)*(x2760)))+(((r20)*(x2753)*(x2760)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2757)))+(((IkReal(-1.00000000000000))*(r20)*(x2753)*(x2758)))+(((IkReal(-1.00000000000000))*(x2755)*(x2757)))+(((IkReal(-1.00000000000000))*(x2755)*(x2756)))+(((IkReal(-1.00000000000000))*(sj5)*(x2761)))+(((IkReal(-1.00000000000000))*(x2754)*(x2762)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2764=IKsin(j1);
IkReal x2765=IKcos(j1);
IkReal x2766=((IkReal(0.707109999985348))*(cj2));
IkReal x2767=((IkReal(1.00000000000000))*(cj0));
IkReal x2768=((IkReal(0.707109999985348))*(sj2));
IkReal x2769=((cj5)*(sj4));
IkReal x2770=((sj4)*(sj5));
IkReal x2771=((IkReal(1.00000000000000))*(sj0));
IkReal x2772=((sj5)*(x2771));
IkReal x2773=((IkReal(0.707103562373095))*(x2765));
IkReal x2774=((IkReal(0.707103562373095))*(x2764));
IkReal x2775=((x2764)*(x2766));
IkReal x2776=((sj2)*(x2774));
IkReal x2777=((x2765)*(x2768));
IkReal x2778=((cj2)*(x2773));
IkReal x2779=((sj2)*(x2773));
IkReal x2780=((cj2)*(x2774));
IkReal x2781=((x2765)*(x2766));
IkReal x2782=((x2764)*(x2768));
IkReal x2783=((x2779)+(x2781)+(x2780));
IkReal x2784=((x2775)+(x2776)+(x2777));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2783)))+(x2782)+(((cj5)*(r21)))+(((r20)*(sj5))));
evalcond[1]=((x2784)+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x2778)))+(((r21)*(x2770)))+(((IkReal(-1.00000000000000))*(r20)*(x2769))));
evalcond[2]=((x2784)+(((IkReal(-1.00000000000000))*(r10)*(x2772)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2771)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2767)))+(((IkReal(-1.00000000000000))*(x2778)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2767))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2782)))+(x2783)+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2767)))+(((cj0)*(r00)*(x2769)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2771)))+(((r10)*(sj0)*(x2769)))+(((IkReal(-1.00000000000000))*(r11)*(x2770)*(x2771)))+(((IkReal(-1.00000000000000))*(r01)*(x2767)*(x2770))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2785=((sj0)*(sj4));
IkReal x2786=((IkReal(1.00000000000000))*(r12));
IkReal x2787=((cj0)*(cj4));
IkReal x2788=((r01)*(sj5));
IkReal x2789=((IkReal(1.00000000000000))*(cj5));
IkReal x2790=((cj4)*(cj5));
IkReal x2791=((IkReal(1.00000000000000))*(cj0));
IkReal x2792=((cj4)*(sj0));
IkReal x2793=((r00)*(sj0));
IkReal x2794=((npy)*(sj5));
IkReal x2795=((IkReal(1.00000000000000))*(cj4));
IkReal x2796=((cj0)*(sj4));
IkReal x2797=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((cj5)*(r01)*(sj0)))+(((sj5)*(x2793)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x2789)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x2791))));
evalcond[2]=((IkReal(-0.258003287011922))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x2789)))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((sj4)*(x2794)))+(((IkReal(0.165463933124939))*(sj2))));
evalcond[3]=((IkReal(-0.0360035672348961))+(((npx)*(sj5)))+(((IkReal(-0.165463933124939))*(cj2)))+(((cj5)*(npy)))+(((IkReal(-0.207888640466058))*(sj2))));
evalcond[4]=((IkReal(-0.00600000000000000))+(((npx)*(x2790)))+(((npz)*(sj4)))+(((IkReal(-1.00000000000000))*(x2794)*(x2795))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x2785)*(x2789)))+(((IkReal(-1.00000000000000))*(x2786)*(x2787)))+(((x2785)*(x2788)))+(((cj5)*(r10)*(x2796)))+(((r02)*(x2792)))+(((IkReal(-1.00000000000000))*(sj4)*(x2791)*(x2797))));
evalcond[6]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x2787)*(x2789)))+(((IkReal(-1.00000000000000))*(x2786)*(x2796)))+(((IkReal(-1.00000000000000))*(x2788)*(x2792)))+(((x2787)*(x2797)))+(((r02)*(x2785)))+(((x2790)*(x2793))));
evalcond[7]=((((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x2795)))+(((r20)*(x2790))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r00)*(x2787)*(x2789)))+(((IkReal(-1.00000000000000))*(r10)*(x2789)*(x2792)))+(((x2787)*(x2788)))+(((x2792)*(x2797)))+(((IkReal(-1.00000000000000))*(x2785)*(x2786)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x2791))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst40;
gconst40=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst41;
gconst41=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2798=((cj5)*(r11));
IkReal x2799=((r10)*(sj0));
IkReal x2800=((IkReal(0.707103562373095))*(cj2));
IkReal x2801=((r20)*(sj5));
IkReal x2802=((IkReal(0.707103562373095))*(sj2));
IkReal x2803=((IkReal(0.707109999985348))*(cj2));
IkReal x2804=((cj0)*(r00));
IkReal x2805=((IkReal(0.707109999985348))*(sj2));
IkReal x2806=((cj5)*(r21));
IkReal x2807=((sj0)*(x2802));
IkReal x2808=((sj5)*(x2803));
IkReal x2809=((cj0)*(cj5)*(r01));
if( IKabs(((gconst41)*(((((IkReal(-1.00000000000000))*(sj5)*(x2799)*(x2802)))+(((IkReal(-1.00000000000000))*(sj5)*(x2802)*(x2804)))+(((x2805)*(x2806)))+(((IkReal(-1.00000000000000))*(sj0)*(x2798)*(x2803)))+(((IkReal(-1.00000000000000))*(x2800)*(x2801)))+(((IkReal(-1.00000000000000))*(x2800)*(x2806)))+(((IkReal(-1.00000000000000))*(x2803)*(x2809)))+(((IkReal(-1.00000000000000))*(x2802)*(x2809)))+(((x2801)*(x2805)))+(((IkReal(-1.00000000000000))*(x2799)*(x2808)))+(((IkReal(-1.00000000000000))*(x2804)*(x2808)))+(((IkReal(-1.00000000000000))*(x2798)*(x2807))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst41)*(((((IkReal(-1.00000000000000))*(sj5)*(x2799)*(x2805)))+(((sj5)*(x2799)*(x2800)))+(((IkReal(-1.00000000000000))*(x2805)*(x2809)))+(((IkReal(-1.00000000000000))*(sj0)*(x2798)*(x2805)))+(((IkReal(-1.00000000000000))*(x2803)*(x2806)))+(((IkReal(-1.00000000000000))*(x2802)*(x2806)))+(((sj0)*(x2798)*(x2800)))+(((IkReal(-1.00000000000000))*(sj5)*(x2804)*(x2805)))+(((x2800)*(x2809)))+(((sj5)*(x2800)*(x2804)))+(((IkReal(-1.00000000000000))*(x2801)*(x2802)))+(((IkReal(-1.00000000000000))*(x2801)*(x2803))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst41)*(((((IkReal(-1.00000000000000))*(sj5)*(x2799)*(x2802)))+(((IkReal(-1.00000000000000))*(sj5)*(x2802)*(x2804)))+(((x2805)*(x2806)))+(((IkReal(-1.00000000000000))*(sj0)*(x2798)*(x2803)))+(((IkReal(-1.00000000000000))*(x2800)*(x2801)))+(((IkReal(-1.00000000000000))*(x2800)*(x2806)))+(((IkReal(-1.00000000000000))*(x2803)*(x2809)))+(((IkReal(-1.00000000000000))*(x2802)*(x2809)))+(((x2801)*(x2805)))+(((IkReal(-1.00000000000000))*(x2799)*(x2808)))+(((IkReal(-1.00000000000000))*(x2804)*(x2808)))+(((IkReal(-1.00000000000000))*(x2798)*(x2807)))))), ((gconst41)*(((((IkReal(-1.00000000000000))*(sj5)*(x2799)*(x2805)))+(((sj5)*(x2799)*(x2800)))+(((IkReal(-1.00000000000000))*(x2805)*(x2809)))+(((IkReal(-1.00000000000000))*(sj0)*(x2798)*(x2805)))+(((IkReal(-1.00000000000000))*(x2803)*(x2806)))+(((IkReal(-1.00000000000000))*(x2802)*(x2806)))+(((sj0)*(x2798)*(x2800)))+(((IkReal(-1.00000000000000))*(sj5)*(x2804)*(x2805)))+(((x2800)*(x2809)))+(((sj5)*(x2800)*(x2804)))+(((IkReal(-1.00000000000000))*(x2801)*(x2802)))+(((IkReal(-1.00000000000000))*(x2801)*(x2803)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2810=IKsin(j1);
IkReal x2811=IKcos(j1);
IkReal x2812=((IkReal(0.707109999985348))*(cj2));
IkReal x2813=((IkReal(1.00000000000000))*(cj0));
IkReal x2814=((IkReal(0.707109999985348))*(sj2));
IkReal x2815=((cj5)*(sj4));
IkReal x2816=((sj4)*(sj5));
IkReal x2817=((IkReal(1.00000000000000))*(sj0));
IkReal x2818=((sj5)*(x2817));
IkReal x2819=((IkReal(0.707103562373095))*(x2811));
IkReal x2820=((IkReal(0.707103562373095))*(x2810));
IkReal x2821=((x2810)*(x2812));
IkReal x2822=((sj2)*(x2820));
IkReal x2823=((x2811)*(x2814));
IkReal x2824=((cj2)*(x2819));
IkReal x2825=((sj2)*(x2819));
IkReal x2826=((cj2)*(x2820));
IkReal x2827=((x2811)*(x2812));
IkReal x2828=((x2810)*(x2814));
IkReal x2829=((x2825)+(x2826)+(x2827));
IkReal x2830=((x2821)+(x2822)+(x2823));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x2829)))+(x2828)+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((r21)*(x2816)))+(((IkReal(-1.00000000000000))*(r20)*(x2815)))+(((IkReal(-1.00000000000000))*(x2824)))+(x2830));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2813)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2817)))+(((IkReal(-1.00000000000000))*(x2824)))+(x2830)+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2813)))+(((IkReal(-1.00000000000000))*(r10)*(x2818))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x2813)*(x2816)))+(((IkReal(-1.00000000000000))*(r11)*(x2816)*(x2817)))+(((r10)*(sj0)*(x2815)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2817)))+(((cj0)*(r00)*(x2815)))+(((IkReal(-1.00000000000000))*(x2828)))+(x2829)+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2813))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2831=((cj5)*(sj4));
IkReal x2832=((r21)*(sj4));
IkReal x2833=((cj5)*(r21));
IkReal x2834=((IkReal(0.707109999985348))*(cj2));
IkReal x2835=((IkReal(0.707103562373095))*(sj2));
IkReal x2836=((IkReal(0.707109999985348))*(sj2));
IkReal x2837=((cj4)*(r22));
IkReal x2838=((IkReal(0.707103562373095))*(cj2));
IkReal x2839=((r20)*(x2834));
IkReal x2840=((sj5)*(x2838));
IkReal x2841=((sj5)*(x2836));
if( IKabs(((gconst40)*(((((x2834)*(x2837)))+(((IkReal(-1.00000000000000))*(r20)*(x2840)))+(((r20)*(x2841)))+(((IkReal(-1.00000000000000))*(r20)*(x2831)*(x2835)))+(((IkReal(-1.00000000000000))*(x2833)*(x2838)))+(((sj5)*(x2832)*(x2835)))+(((sj5)*(x2832)*(x2834)))+(((x2835)*(x2837)))+(((x2833)*(x2836)))+(((IkReal(-1.00000000000000))*(x2831)*(x2839))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst40)*(((((x2836)*(x2837)))+(((r20)*(x2831)*(x2838)))+(((IkReal(-1.00000000000000))*(sj5)*(x2839)))+(((IkReal(-1.00000000000000))*(r20)*(x2831)*(x2836)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2835)))+(((IkReal(-1.00000000000000))*(x2833)*(x2834)))+(((IkReal(-1.00000000000000))*(x2833)*(x2835)))+(((IkReal(-1.00000000000000))*(x2837)*(x2838)))+(((x2832)*(x2841)))+(((IkReal(-1.00000000000000))*(x2832)*(x2840))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst40)*(((((x2834)*(x2837)))+(((IkReal(-1.00000000000000))*(r20)*(x2840)))+(((r20)*(x2841)))+(((IkReal(-1.00000000000000))*(r20)*(x2831)*(x2835)))+(((IkReal(-1.00000000000000))*(x2833)*(x2838)))+(((sj5)*(x2832)*(x2835)))+(((sj5)*(x2832)*(x2834)))+(((x2835)*(x2837)))+(((x2833)*(x2836)))+(((IkReal(-1.00000000000000))*(x2831)*(x2839)))))), ((gconst40)*(((((x2836)*(x2837)))+(((r20)*(x2831)*(x2838)))+(((IkReal(-1.00000000000000))*(sj5)*(x2839)))+(((IkReal(-1.00000000000000))*(r20)*(x2831)*(x2836)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2835)))+(((IkReal(-1.00000000000000))*(x2833)*(x2834)))+(((IkReal(-1.00000000000000))*(x2833)*(x2835)))+(((IkReal(-1.00000000000000))*(x2837)*(x2838)))+(((x2832)*(x2841)))+(((IkReal(-1.00000000000000))*(x2832)*(x2840)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2842=IKsin(j1);
IkReal x2843=IKcos(j1);
IkReal x2844=((IkReal(0.707109999985348))*(cj2));
IkReal x2845=((IkReal(1.00000000000000))*(cj0));
IkReal x2846=((IkReal(0.707109999985348))*(sj2));
IkReal x2847=((cj5)*(sj4));
IkReal x2848=((sj4)*(sj5));
IkReal x2849=((IkReal(1.00000000000000))*(sj0));
IkReal x2850=((sj5)*(x2849));
IkReal x2851=((IkReal(0.707103562373095))*(x2843));
IkReal x2852=((IkReal(0.707103562373095))*(x2842));
IkReal x2853=((x2842)*(x2844));
IkReal x2854=((sj2)*(x2852));
IkReal x2855=((x2843)*(x2846));
IkReal x2856=((cj2)*(x2851));
IkReal x2857=((sj2)*(x2851));
IkReal x2858=((cj2)*(x2852));
IkReal x2859=((x2843)*(x2844));
IkReal x2860=((x2842)*(x2846));
IkReal x2861=((x2859)+(x2858)+(x2857));
IkReal x2862=((x2853)+(x2855)+(x2854));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x2861)))+(x2860)+(((r20)*(sj5))));
evalcond[1]=((((r21)*(x2848)))+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x2847)))+(x2862)+(((IkReal(-1.00000000000000))*(x2856))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2845)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2849)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2845)))+(((IkReal(-1.00000000000000))*(r10)*(x2850)))+(x2862)+(((IkReal(-1.00000000000000))*(x2856))));
evalcond[3]=((((cj0)*(r00)*(x2847)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2849)))+(((IkReal(-1.00000000000000))*(r11)*(x2848)*(x2849)))+(((IkReal(-1.00000000000000))*(x2860)))+(((r10)*(sj0)*(x2847)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2845)))+(x2861)+(((IkReal(-1.00000000000000))*(r01)*(x2845)*(x2848))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2863=((sj0)*(sj4));
IkReal x2864=((IkReal(1.00000000000000))*(r12));
IkReal x2865=((cj0)*(cj4));
IkReal x2866=((r01)*(sj5));
IkReal x2867=((IkReal(1.00000000000000))*(cj5));
IkReal x2868=((cj4)*(cj5));
IkReal x2869=((IkReal(1.00000000000000))*(cj0));
IkReal x2870=((cj4)*(sj0));
IkReal x2871=((r00)*(sj0));
IkReal x2872=((npy)*(sj5));
IkReal x2873=((IkReal(1.00000000000000))*(cj4));
IkReal x2874=((cj0)*(sj4));
IkReal x2875=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((sj5)*(x2871)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x2867)))+(((cj5)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x2869))));
evalcond[2]=((IkReal(-0.258003287011922))+(((sj4)*(x2872)))+(((IkReal(-0.207888640466058))*(cj2)))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x2867)))+(((cj4)*(npz)))+(((IkReal(0.165463933124939))*(sj2))));
evalcond[3]=((IkReal(0.0240035672348961))+(((npx)*(sj5)))+(((IkReal(0.207888640466058))*(sj2)))+(((cj5)*(npy)))+(((IkReal(0.165463933124939))*(cj2))));
evalcond[4]=((IkReal(0.00600000000000000))+(((npx)*(x2868)))+(((npz)*(sj4)))+(((IkReal(-1.00000000000000))*(x2872)*(x2873))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2864)*(x2865)))+(((x2863)*(x2866)))+(((r02)*(x2870)))+(((IkReal(-1.00000000000000))*(r00)*(x2863)*(x2867)))+(((IkReal(-1.00000000000000))*(sj4)*(x2869)*(x2875)))+(((cj5)*(r10)*(x2874))));
evalcond[6]=((IkReal(-1.00000000000000))+(((x2865)*(x2875)))+(((x2868)*(x2871)))+(((IkReal(-1.00000000000000))*(x2864)*(x2874)))+(((r02)*(x2863)))+(((IkReal(-1.00000000000000))*(r10)*(x2865)*(x2867)))+(((IkReal(-1.00000000000000))*(x2866)*(x2870))));
evalcond[7]=((((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x2873)))+(((r20)*(x2868))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r10)*(x2867)*(x2870)))+(((x2865)*(x2866)))+(((x2870)*(x2875)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x2869)))+(((IkReal(-1.00000000000000))*(r00)*(x2865)*(x2867)))+(((IkReal(-1.00000000000000))*(x2863)*(x2864))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst42;
gconst42=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst43;
gconst43=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2876=((cj5)*(r11));
IkReal x2877=((r10)*(sj0));
IkReal x2878=((IkReal(0.707103562373095))*(cj2));
IkReal x2879=((r20)*(sj5));
IkReal x2880=((IkReal(0.707103562373095))*(sj2));
IkReal x2881=((IkReal(0.707109999985348))*(cj2));
IkReal x2882=((cj0)*(r00));
IkReal x2883=((IkReal(0.707109999985348))*(sj2));
IkReal x2884=((cj5)*(r21));
IkReal x2885=((sj0)*(x2880));
IkReal x2886=((sj5)*(x2881));
IkReal x2887=((cj0)*(cj5)*(r01));
if( IKabs(((gconst43)*(((((x2877)*(x2886)))+(((IkReal(-1.00000000000000))*(x2883)*(x2884)))+(((sj5)*(x2880)*(x2882)))+(((x2880)*(x2887)))+(((sj0)*(x2876)*(x2881)))+(((x2876)*(x2885)))+(((IkReal(-1.00000000000000))*(x2879)*(x2883)))+(((x2878)*(x2884)))+(((x2881)*(x2887)))+(((x2878)*(x2879)))+(((sj5)*(x2877)*(x2880)))+(((x2882)*(x2886))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((x2880)*(x2884)))+(((sj0)*(x2876)*(x2883)))+(((x2879)*(x2881)))+(((x2879)*(x2880)))+(((IkReal(-1.00000000000000))*(sj5)*(x2878)*(x2882)))+(((IkReal(-1.00000000000000))*(sj0)*(x2876)*(x2878)))+(((x2881)*(x2884)))+(((IkReal(-1.00000000000000))*(sj5)*(x2877)*(x2878)))+(((IkReal(-1.00000000000000))*(x2878)*(x2887)))+(((sj5)*(x2877)*(x2883)))+(((sj5)*(x2882)*(x2883)))+(((x2883)*(x2887))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst43)*(((((x2877)*(x2886)))+(((IkReal(-1.00000000000000))*(x2883)*(x2884)))+(((sj5)*(x2880)*(x2882)))+(((x2880)*(x2887)))+(((sj0)*(x2876)*(x2881)))+(((x2876)*(x2885)))+(((IkReal(-1.00000000000000))*(x2879)*(x2883)))+(((x2878)*(x2884)))+(((x2881)*(x2887)))+(((x2878)*(x2879)))+(((sj5)*(x2877)*(x2880)))+(((x2882)*(x2886)))))), ((gconst43)*(((((x2880)*(x2884)))+(((sj0)*(x2876)*(x2883)))+(((x2879)*(x2881)))+(((x2879)*(x2880)))+(((IkReal(-1.00000000000000))*(sj5)*(x2878)*(x2882)))+(((IkReal(-1.00000000000000))*(sj0)*(x2876)*(x2878)))+(((x2881)*(x2884)))+(((IkReal(-1.00000000000000))*(sj5)*(x2877)*(x2878)))+(((IkReal(-1.00000000000000))*(x2878)*(x2887)))+(((sj5)*(x2877)*(x2883)))+(((sj5)*(x2882)*(x2883)))+(((x2883)*(x2887)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2888=IKcos(j1);
IkReal x2889=IKsin(j1);
IkReal x2890=((IkReal(0.707109999985348))*(cj2));
IkReal x2891=((IkReal(1.00000000000000))*(cj0));
IkReal x2892=((IkReal(0.707109999985348))*(sj2));
IkReal x2893=((cj5)*(sj4));
IkReal x2894=((sj4)*(sj5));
IkReal x2895=((IkReal(1.00000000000000))*(sj0));
IkReal x2896=((sj5)*(x2895));
IkReal x2897=((IkReal(0.707103562373095))*(x2888));
IkReal x2898=((IkReal(0.707103562373095))*(x2889));
IkReal x2899=((cj2)*(x2897));
IkReal x2900=((x2889)*(x2890));
IkReal x2901=((sj2)*(x2898));
IkReal x2902=((x2888)*(x2892));
IkReal x2903=((sj2)*(x2897));
IkReal x2904=((cj2)*(x2898));
IkReal x2905=((x2888)*(x2890));
IkReal x2906=((x2889)*(x2892));
IkReal x2907=((x2903)+(x2905)+(x2904));
IkReal x2908=((x2902)+(x2901)+(x2900));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x2906)))+(((r20)*(sj5)))+(x2907));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x2893)))+(((cj4)*(r22)))+(((r21)*(x2894)))+(((IkReal(-1.00000000000000))*(x2899)))+(x2908));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2908)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2895)))+(x2899)+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2891)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2891)))+(((IkReal(-1.00000000000000))*(r10)*(x2896))));
evalcond[3]=((((r10)*(sj0)*(x2893)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2895)))+(((IkReal(-1.00000000000000))*(x2906)))+(((cj0)*(r00)*(x2893)))+(((IkReal(-1.00000000000000))*(r01)*(x2891)*(x2894)))+(x2907)+(((IkReal(-1.00000000000000))*(r11)*(x2894)*(x2895)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2891))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2909=((cj5)*(sj4));
IkReal x2910=((r21)*(sj4));
IkReal x2911=((cj5)*(r21));
IkReal x2912=((IkReal(0.707109999985348))*(cj2));
IkReal x2913=((IkReal(0.707103562373095))*(sj2));
IkReal x2914=((IkReal(0.707109999985348))*(sj2));
IkReal x2915=((cj4)*(r22));
IkReal x2916=((IkReal(0.707103562373095))*(cj2));
IkReal x2917=((r20)*(x2912));
IkReal x2918=((sj5)*(x2916));
IkReal x2919=((sj5)*(x2914));
if( IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(x2913)*(x2915)))+(((IkReal(-1.00000000000000))*(x2912)*(x2915)))+(((r20)*(x2919)))+(((x2909)*(x2917)))+(((r20)*(x2909)*(x2913)))+(((IkReal(-1.00000000000000))*(sj5)*(x2910)*(x2913)))+(((IkReal(-1.00000000000000))*(sj5)*(x2910)*(x2912)))+(((IkReal(-1.00000000000000))*(x2911)*(x2916)))+(((x2911)*(x2914)))+(((IkReal(-1.00000000000000))*(r20)*(x2918))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2913)))+(((IkReal(-1.00000000000000))*(sj5)*(x2917)))+(((r20)*(x2909)*(x2914)))+(((IkReal(-1.00000000000000))*(x2914)*(x2915)))+(((x2915)*(x2916)))+(((IkReal(-1.00000000000000))*(x2911)*(x2913)))+(((IkReal(-1.00000000000000))*(x2911)*(x2912)))+(((IkReal(-1.00000000000000))*(x2910)*(x2919)))+(((x2910)*(x2918)))+(((IkReal(-1.00000000000000))*(r20)*(x2909)*(x2916))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst42)*(((((IkReal(-1.00000000000000))*(x2913)*(x2915)))+(((IkReal(-1.00000000000000))*(x2912)*(x2915)))+(((r20)*(x2919)))+(((x2909)*(x2917)))+(((r20)*(x2909)*(x2913)))+(((IkReal(-1.00000000000000))*(sj5)*(x2910)*(x2913)))+(((IkReal(-1.00000000000000))*(sj5)*(x2910)*(x2912)))+(((IkReal(-1.00000000000000))*(x2911)*(x2916)))+(((x2911)*(x2914)))+(((IkReal(-1.00000000000000))*(r20)*(x2918)))))), ((gconst42)*(((((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2913)))+(((IkReal(-1.00000000000000))*(sj5)*(x2917)))+(((r20)*(x2909)*(x2914)))+(((IkReal(-1.00000000000000))*(x2914)*(x2915)))+(((x2915)*(x2916)))+(((IkReal(-1.00000000000000))*(x2911)*(x2913)))+(((IkReal(-1.00000000000000))*(x2911)*(x2912)))+(((IkReal(-1.00000000000000))*(x2910)*(x2919)))+(((x2910)*(x2918)))+(((IkReal(-1.00000000000000))*(r20)*(x2909)*(x2916)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2920=IKcos(j1);
IkReal x2921=IKsin(j1);
IkReal x2922=((IkReal(0.707109999985348))*(cj2));
IkReal x2923=((IkReal(1.00000000000000))*(cj0));
IkReal x2924=((IkReal(0.707109999985348))*(sj2));
IkReal x2925=((cj5)*(sj4));
IkReal x2926=((sj4)*(sj5));
IkReal x2927=((IkReal(1.00000000000000))*(sj0));
IkReal x2928=((sj5)*(x2927));
IkReal x2929=((IkReal(0.707103562373095))*(x2920));
IkReal x2930=((IkReal(0.707103562373095))*(x2921));
IkReal x2931=((cj2)*(x2929));
IkReal x2932=((x2921)*(x2922));
IkReal x2933=((sj2)*(x2930));
IkReal x2934=((x2920)*(x2924));
IkReal x2935=((sj2)*(x2929));
IkReal x2936=((cj2)*(x2930));
IkReal x2937=((x2920)*(x2922));
IkReal x2938=((x2921)*(x2924));
IkReal x2939=((x2936)+(x2937)+(x2935));
IkReal x2940=((x2934)+(x2932)+(x2933));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x2938)))+(((r20)*(sj5)))+(x2939));
evalcond[1]=((((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x2931)))+(((r21)*(x2926)))+(((IkReal(-1.00000000000000))*(r20)*(x2925)))+(x2940));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2927)))+(((IkReal(-1.00000000000000))*(r10)*(x2928)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2923)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2923)))+(((IkReal(-1.00000000000000))*(x2940)))+(x2931));
evalcond[3]=((((cj0)*(r00)*(x2925)))+(((r10)*(sj0)*(x2925)))+(((IkReal(-1.00000000000000))*(x2938)))+(((IkReal(-1.00000000000000))*(r01)*(x2923)*(x2926)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2927)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2923)))+(((IkReal(-1.00000000000000))*(r11)*(x2926)*(x2927)))+(x2939));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2941=((sj0)*(sj4));
IkReal x2942=((IkReal(1.00000000000000))*(r12));
IkReal x2943=((cj0)*(cj4));
IkReal x2944=((r01)*(sj5));
IkReal x2945=((IkReal(1.00000000000000))*(cj5));
IkReal x2946=((cj4)*(cj5));
IkReal x2947=((IkReal(1.00000000000000))*(cj0));
IkReal x2948=((cj4)*(sj0));
IkReal x2949=((r00)*(sj0));
IkReal x2950=((npy)*(sj5));
IkReal x2951=((IkReal(1.00000000000000))*(cj4));
IkReal x2952=((cj0)*(sj4));
IkReal x2953=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(sj5)*(x2947)))+(((cj5)*(r01)*(sj0)))+(((sj5)*(x2949)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x2945))));
evalcond[2]=((IkReal(-0.258003287011922))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((IkReal(0.165463933124939))*(sj2)))+(((sj4)*(x2950)))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x2945))));
evalcond[3]=((IkReal(0.0240035672348961))+(((npx)*(sj5)))+(((IkReal(0.207888640466058))*(sj2)))+(((cj5)*(npy)))+(((IkReal(0.165463933124939))*(cj2))));
evalcond[4]=((IkReal(0.00600000000000000))+(((npz)*(sj4)))+(((npx)*(x2946)))+(((IkReal(-1.00000000000000))*(x2950)*(x2951))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x2941)*(x2945)))+(((x2941)*(x2944)))+(((r02)*(x2948)))+(((IkReal(-1.00000000000000))*(x2942)*(x2943)))+(((IkReal(-1.00000000000000))*(sj4)*(x2947)*(x2953)))+(((cj5)*(r10)*(x2952))));
evalcond[6]=((IkReal(-1.00000000000000))+(((x2946)*(x2949)))+(((IkReal(-1.00000000000000))*(r10)*(x2943)*(x2945)))+(((IkReal(-1.00000000000000))*(x2942)*(x2952)))+(((IkReal(-1.00000000000000))*(x2944)*(x2948)))+(((r02)*(x2941)))+(((x2943)*(x2953))));
evalcond[7]=((((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x2951)))+(((r20)*(x2946))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r02)*(sj4)*(x2947)))+(((IkReal(-1.00000000000000))*(r00)*(x2943)*(x2945)))+(((x2948)*(x2953)))+(((IkReal(-1.00000000000000))*(r10)*(x2945)*(x2948)))+(((x2943)*(x2944)))+(((IkReal(-1.00000000000000))*(x2941)*(x2942))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst44;
gconst44=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst45;
gconst45=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2954=((cj5)*(r11));
IkReal x2955=((r10)*(sj0));
IkReal x2956=((IkReal(0.707103562373095))*(cj2));
IkReal x2957=((r20)*(sj5));
IkReal x2958=((IkReal(0.707103562373095))*(sj2));
IkReal x2959=((IkReal(0.707109999985348))*(cj2));
IkReal x2960=((cj0)*(r00));
IkReal x2961=((IkReal(0.707109999985348))*(sj2));
IkReal x2962=((cj5)*(r21));
IkReal x2963=((sj0)*(x2958));
IkReal x2964=((sj5)*(x2959));
IkReal x2965=((cj0)*(cj5)*(r01));
if( IKabs(((gconst45)*(((((IkReal(-1.00000000000000))*(x2957)*(x2961)))+(((x2956)*(x2962)))+(((x2954)*(x2963)))+(((x2955)*(x2964)))+(((x2960)*(x2964)))+(((x2959)*(x2965)))+(((sj5)*(x2958)*(x2960)))+(((sj0)*(x2954)*(x2959)))+(((IkReal(-1.00000000000000))*(x2961)*(x2962)))+(((x2958)*(x2965)))+(((x2956)*(x2957)))+(((sj5)*(x2955)*(x2958))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst45)*(((((sj5)*(x2960)*(x2961)))+(((IkReal(-1.00000000000000))*(sj5)*(x2956)*(x2960)))+(((IkReal(-1.00000000000000))*(sj0)*(x2954)*(x2956)))+(((x2957)*(x2959)))+(((x2957)*(x2958)))+(((sj5)*(x2955)*(x2961)))+(((IkReal(-1.00000000000000))*(sj5)*(x2955)*(x2956)))+(((x2961)*(x2965)))+(((x2959)*(x2962)))+(((sj0)*(x2954)*(x2961)))+(((x2958)*(x2962)))+(((IkReal(-1.00000000000000))*(x2956)*(x2965))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst45)*(((((IkReal(-1.00000000000000))*(x2957)*(x2961)))+(((x2956)*(x2962)))+(((x2954)*(x2963)))+(((x2955)*(x2964)))+(((x2960)*(x2964)))+(((x2959)*(x2965)))+(((sj5)*(x2958)*(x2960)))+(((sj0)*(x2954)*(x2959)))+(((IkReal(-1.00000000000000))*(x2961)*(x2962)))+(((x2958)*(x2965)))+(((x2956)*(x2957)))+(((sj5)*(x2955)*(x2958)))))), ((gconst45)*(((((sj5)*(x2960)*(x2961)))+(((IkReal(-1.00000000000000))*(sj5)*(x2956)*(x2960)))+(((IkReal(-1.00000000000000))*(sj0)*(x2954)*(x2956)))+(((x2957)*(x2959)))+(((x2957)*(x2958)))+(((sj5)*(x2955)*(x2961)))+(((IkReal(-1.00000000000000))*(sj5)*(x2955)*(x2956)))+(((x2961)*(x2965)))+(((x2959)*(x2962)))+(((sj0)*(x2954)*(x2961)))+(((x2958)*(x2962)))+(((IkReal(-1.00000000000000))*(x2956)*(x2965)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2966=IKcos(j1);
IkReal x2967=IKsin(j1);
IkReal x2968=((IkReal(0.707109999985348))*(cj2));
IkReal x2969=((IkReal(1.00000000000000))*(cj0));
IkReal x2970=((IkReal(0.707109999985348))*(sj2));
IkReal x2971=((cj5)*(sj4));
IkReal x2972=((sj4)*(sj5));
IkReal x2973=((IkReal(1.00000000000000))*(sj0));
IkReal x2974=((sj5)*(x2973));
IkReal x2975=((IkReal(0.707103562373095))*(x2966));
IkReal x2976=((IkReal(0.707103562373095))*(x2967));
IkReal x2977=((cj2)*(x2975));
IkReal x2978=((x2967)*(x2968));
IkReal x2979=((sj2)*(x2976));
IkReal x2980=((x2966)*(x2970));
IkReal x2981=((sj2)*(x2975));
IkReal x2982=((cj2)*(x2976));
IkReal x2983=((x2966)*(x2968));
IkReal x2984=((x2967)*(x2970));
IkReal x2985=((x2983)+(x2982)+(x2981));
IkReal x2986=((x2980)+(x2978)+(x2979));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x2984)))+(((r20)*(sj5)))+(x2985));
evalcond[1]=((((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x2977)))+(((IkReal(-1.00000000000000))*(r20)*(x2971)))+(x2986)+(((r21)*(x2972))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x2973)))+(((IkReal(-1.00000000000000))*(x2986)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2969)))+(((IkReal(-1.00000000000000))*(r10)*(x2974)))+(x2977)+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2969))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x2972)*(x2973)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x2973)))+(((IkReal(-1.00000000000000))*(x2984)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x2969)))+(((cj0)*(r00)*(x2971)))+(((IkReal(-1.00000000000000))*(r01)*(x2969)*(x2972)))+(((r10)*(sj0)*(x2971)))+(x2985));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2987=((cj5)*(sj4));
IkReal x2988=((r21)*(sj4));
IkReal x2989=((cj5)*(r21));
IkReal x2990=((IkReal(0.707109999985348))*(cj2));
IkReal x2991=((IkReal(0.707103562373095))*(sj2));
IkReal x2992=((IkReal(0.707109999985348))*(sj2));
IkReal x2993=((cj4)*(r22));
IkReal x2994=((IkReal(0.707103562373095))*(cj2));
IkReal x2995=((r20)*(x2990));
IkReal x2996=((sj5)*(x2994));
IkReal x2997=((sj5)*(x2992));
if( IKabs(((gconst44)*(((((x2987)*(x2995)))+(((r20)*(x2997)))+(((r20)*(x2987)*(x2991)))+(((IkReal(-1.00000000000000))*(x2989)*(x2994)))+(((IkReal(-1.00000000000000))*(sj5)*(x2988)*(x2990)))+(((IkReal(-1.00000000000000))*(sj5)*(x2988)*(x2991)))+(((IkReal(-1.00000000000000))*(x2991)*(x2993)))+(((x2989)*(x2992)))+(((IkReal(-1.00000000000000))*(r20)*(x2996)))+(((IkReal(-1.00000000000000))*(x2990)*(x2993))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst44)*(((((IkReal(-1.00000000000000))*(x2992)*(x2993)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2991)))+(((r20)*(x2987)*(x2992)))+(((IkReal(-1.00000000000000))*(sj5)*(x2995)))+(((IkReal(-1.00000000000000))*(x2989)*(x2990)))+(((IkReal(-1.00000000000000))*(x2989)*(x2991)))+(((IkReal(-1.00000000000000))*(x2988)*(x2997)))+(((IkReal(-1.00000000000000))*(r20)*(x2987)*(x2994)))+(((x2993)*(x2994)))+(((x2988)*(x2996))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst44)*(((((x2987)*(x2995)))+(((r20)*(x2997)))+(((r20)*(x2987)*(x2991)))+(((IkReal(-1.00000000000000))*(x2989)*(x2994)))+(((IkReal(-1.00000000000000))*(sj5)*(x2988)*(x2990)))+(((IkReal(-1.00000000000000))*(sj5)*(x2988)*(x2991)))+(((IkReal(-1.00000000000000))*(x2991)*(x2993)))+(((x2989)*(x2992)))+(((IkReal(-1.00000000000000))*(r20)*(x2996)))+(((IkReal(-1.00000000000000))*(x2990)*(x2993)))))), ((gconst44)*(((((IkReal(-1.00000000000000))*(x2992)*(x2993)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x2991)))+(((r20)*(x2987)*(x2992)))+(((IkReal(-1.00000000000000))*(sj5)*(x2995)))+(((IkReal(-1.00000000000000))*(x2989)*(x2990)))+(((IkReal(-1.00000000000000))*(x2989)*(x2991)))+(((IkReal(-1.00000000000000))*(x2988)*(x2997)))+(((IkReal(-1.00000000000000))*(r20)*(x2987)*(x2994)))+(((x2993)*(x2994)))+(((x2988)*(x2996)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2998=IKcos(j1);
IkReal x2999=IKsin(j1);
IkReal x3000=((IkReal(0.707109999985348))*(cj2));
IkReal x3001=((IkReal(1.00000000000000))*(cj0));
IkReal x3002=((IkReal(0.707109999985348))*(sj2));
IkReal x3003=((cj5)*(sj4));
IkReal x3004=((sj4)*(sj5));
IkReal x3005=((IkReal(1.00000000000000))*(sj0));
IkReal x3006=((sj5)*(x3005));
IkReal x3007=((IkReal(0.707103562373095))*(x2998));
IkReal x3008=((IkReal(0.707103562373095))*(x2999));
IkReal x3009=((cj2)*(x3007));
IkReal x3010=((x2999)*(x3000));
IkReal x3011=((sj2)*(x3008));
IkReal x3012=((x2998)*(x3002));
IkReal x3013=((sj2)*(x3007));
IkReal x3014=((cj2)*(x3008));
IkReal x3015=((x2998)*(x3000));
IkReal x3016=((x2999)*(x3002));
IkReal x3017=((x3013)+(x3014)+(x3015));
IkReal x3018=((x3012)+(x3010)+(x3011));
evalcond[0]=((((cj5)*(r21)))+(x3017)+(((IkReal(-1.00000000000000))*(x3016)))+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(x3018)+(((IkReal(-1.00000000000000))*(x3009)))+(((IkReal(-1.00000000000000))*(r20)*(x3003)))+(((r21)*(x3004))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x3006)))+(x3009)+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3001)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3001)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3005)))+(((IkReal(-1.00000000000000))*(x3018))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3001)))+(x3017)+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3005)))+(((cj0)*(r00)*(x3003)))+(((IkReal(-1.00000000000000))*(x3016)))+(((r10)*(sj0)*(x3003)))+(((IkReal(-1.00000000000000))*(r11)*(x3004)*(x3005)))+(((IkReal(-1.00000000000000))*(r01)*(x3001)*(x3004))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3019=((IkReal(0.707109999985348))*(sj2));
IkReal x3020=((r22)*(sj4));
IkReal x3021=((cj5)*(r20));
IkReal x3022=((r21)*(sj5));
IkReal x3023=((IkReal(0.707109999985348))*(cj2));
IkReal x3024=((cj3)*(r22));
IkReal x3025=((cj3)*(sj4));
IkReal x3026=((IkReal(0.707103562373095))*(cj4)*(sj2));
IkReal x3027=((IkReal(0.707103562373095))*(x3025));
IkReal x3028=((IkReal(0.707103562373095))*(cj2)*(cj4));
if( IKabs(((gconst37)*(((((IkReal(0.707103562373095))*(cj2)*(x3020)))+(((sj2)*(x3022)*(x3027)))+(((IkReal(-1.00000000000000))*(x3019)*(x3020)))+(((IkReal(-1.00000000000000))*(sj2)*(x3021)*(x3027)))+(((x3021)*(x3028)))+(((IkReal(-1.00000000000000))*(x3021)*(x3023)*(x3025)))+(((cj4)*(x3023)*(x3024)))+(((IkReal(-1.00000000000000))*(cj4)*(x3019)*(x3021)))+(((x3022)*(x3023)*(x3025)))+(((IkReal(-1.00000000000000))*(x3022)*(x3028)))+(((x3024)*(x3026)))+(((cj4)*(x3019)*(x3022))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst37)*(((((IkReal(-1.00000000000000))*(cj2)*(x3022)*(x3027)))+(((x3021)*(x3026)))+(((x3019)*(x3022)*(x3025)))+(((x3020)*(x3023)))+(((cj4)*(x3021)*(x3023)))+(((IkReal(-1.00000000000000))*(cj4)*(x3022)*(x3023)))+(((cj2)*(x3021)*(x3027)))+(((IkReal(0.707103562373095))*(sj2)*(x3020)))+(((IkReal(-1.00000000000000))*(x3024)*(x3028)))+(((IkReal(-1.00000000000000))*(x3022)*(x3026)))+(((cj4)*(x3019)*(x3024)))+(((IkReal(-1.00000000000000))*(x3019)*(x3021)*(x3025))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst37)*(((((IkReal(0.707103562373095))*(cj2)*(x3020)))+(((sj2)*(x3022)*(x3027)))+(((IkReal(-1.00000000000000))*(x3019)*(x3020)))+(((IkReal(-1.00000000000000))*(sj2)*(x3021)*(x3027)))+(((x3021)*(x3028)))+(((IkReal(-1.00000000000000))*(x3021)*(x3023)*(x3025)))+(((cj4)*(x3023)*(x3024)))+(((IkReal(-1.00000000000000))*(cj4)*(x3019)*(x3021)))+(((x3022)*(x3023)*(x3025)))+(((IkReal(-1.00000000000000))*(x3022)*(x3028)))+(((x3024)*(x3026)))+(((cj4)*(x3019)*(x3022)))))), ((gconst37)*(((((IkReal(-1.00000000000000))*(cj2)*(x3022)*(x3027)))+(((x3021)*(x3026)))+(((x3019)*(x3022)*(x3025)))+(((x3020)*(x3023)))+(((cj4)*(x3021)*(x3023)))+(((IkReal(-1.00000000000000))*(cj4)*(x3022)*(x3023)))+(((cj2)*(x3021)*(x3027)))+(((IkReal(0.707103562373095))*(sj2)*(x3020)))+(((IkReal(-1.00000000000000))*(x3024)*(x3028)))+(((IkReal(-1.00000000000000))*(x3022)*(x3026)))+(((cj4)*(x3019)*(x3024)))+(((IkReal(-1.00000000000000))*(x3019)*(x3021)*(x3025)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x3029=IKcos(j1);
IkReal x3030=IKsin(j1);
IkReal x3031=((cj0)*(cj4));
IkReal x3032=((r01)*(sj5));
IkReal x3033=((IkReal(1.00000000000000))*(cj4));
IkReal x3034=((IkReal(1.00000000000000))*(r02));
IkReal x3035=((IkReal(0.707109999985348))*(sj3));
IkReal x3036=((IkReal(0.707103562373095))*(sj3));
IkReal x3037=((IkReal(1.00000000000000))*(sj4));
IkReal x3038=((cj5)*(r20));
IkReal x3039=((cj5)*(sj0));
IkReal x3040=((IkReal(1.00000000000000))*(cj0));
IkReal x3041=((r12)*(sj0));
IkReal x3042=((cj2)*(cj3));
IkReal x3043=((IkReal(0.707103562373095))*(cj3));
IkReal x3044=((r21)*(sj5));
IkReal x3045=((IkReal(0.707109999985348))*(cj3));
IkReal x3046=((IkReal(1.00000000000000))*(sj0)*(sj5));
IkReal x3047=((sj2)*(x3029));
IkReal x3048=((cj2)*(x3029));
IkReal x3049=((cj0)*(cj5)*(r00));
IkReal x3050=((IkReal(0.707103562373095))*(x3030));
IkReal x3051=((cj2)*(x3030));
IkReal x3052=((IkReal(0.707109999985348))*(sj2)*(x3030));
evalcond[0]=((((cj5)*(r21)))+(((sj2)*(x3030)*(x3035)))+(((IkReal(-1.00000000000000))*(x3036)*(x3051)))+(((IkReal(-1.00000000000000))*(x3035)*(x3048)))+(((IkReal(-1.00000000000000))*(x3036)*(x3047)))+(((r20)*(sj5))));
evalcond[1]=((((IkReal(0.707109999985348))*(x3051)))+(((cj4)*(r22)))+(((IkReal(-0.707103562373095))*(x3048)))+(((IkReal(-1.00000000000000))*(x3037)*(x3038)))+(((IkReal(0.707109999985348))*(x3047)))+(((sj4)*(x3044)))+(((sj2)*(x3050))));
evalcond[2]=((((x3043)*(x3047)))+(((IkReal(-1.00000000000000))*(x3033)*(x3044)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(sj2)*(x3030)*(x3045)))+(((IkReal(0.707109999985348))*(x3029)*(x3042)))+(((x3042)*(x3050)))+(((cj4)*(x3038))));
evalcond[3]=((((sj2)*(x3030)*(x3036)))+(((x3035)*(x3051)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3040)))+(((IkReal(-1.00000000000000))*(r10)*(x3046)))+(((IkReal(-1.00000000000000))*(r11)*(x3039)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3040)))+(((IkReal(-1.00000000000000))*(x3036)*(x3048)))+(((x3035)*(x3047))));
evalcond[4]=((((r10)*(sj4)*(x3039)))+(((IkReal(-1.00000000000000))*(x3033)*(x3041)))+(((IkReal(0.707103562373095))*(x3047)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj5)*(x3037)))+(((cj2)*(x3050)))+(((IkReal(-1.00000000000000))*(cj0)*(x3032)*(x3037)))+(((IkReal(0.707109999985348))*(x3048)))+(((sj4)*(x3049)))+(((IkReal(-1.00000000000000))*(x3031)*(x3034)))+(((IkReal(-1.00000000000000))*(x3052))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3045)*(x3047)))+(((IkReal(0.707103562373095))*(x3029)*(x3042)))+(((IkReal(-1.00000000000000))*(cj0)*(sj4)*(x3034)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x3031)))+(((cj4)*(r11)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(sj2)*(x3030)*(x3043)))+(((IkReal(-0.707109999985348))*(x3030)*(x3042)))+(((x3031)*(x3032)))+(((IkReal(-1.00000000000000))*(x3037)*(x3041)))+(((IkReal(-1.00000000000000))*(r10)*(x3033)*(x3039))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3053=((sj2)*(sj3));
IkReal x3054=((cj4)*(r22));
IkReal x3055=((r20)*(sj5));
IkReal x3056=((IkReal(0.707103562373095))*(cj2));
IkReal x3057=((IkReal(0.707109999985348))*(sj2));
IkReal x3058=((IkReal(0.707109999985348))*(cj2));
IkReal x3059=((cj5)*(r21));
IkReal x3060=((IkReal(0.707103562373095))*(sj2));
IkReal x3061=((r21)*(sj4)*(sj5));
IkReal x3062=((cj5)*(r20)*(sj4));
if( IKabs(((gconst36)*(((((IkReal(0.707103562373095))*(x3053)*(x3061)))+(((IkReal(-0.707103562373095))*(x3053)*(x3062)))+(((IkReal(-1.00000000000000))*(sj3)*(x3058)*(x3062)))+(((IkReal(-1.00000000000000))*(x3055)*(x3056)))+(((IkReal(0.707103562373095))*(x3053)*(x3054)))+(((sj3)*(x3058)*(x3061)))+(((x3057)*(x3059)))+(((IkReal(-1.00000000000000))*(x3056)*(x3059)))+(((sj3)*(x3054)*(x3058)))+(((x3055)*(x3057))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(x3055)*(x3058)))+(((sj3)*(x3056)*(x3062)))+(((IkReal(-1.00000000000000))*(x3058)*(x3059)))+(((IkReal(0.707109999985348))*(x3053)*(x3061)))+(((IkReal(-1.00000000000000))*(sj3)*(x3056)*(x3061)))+(((IkReal(-0.707109999985348))*(x3053)*(x3062)))+(((IkReal(-1.00000000000000))*(x3055)*(x3060)))+(((IkReal(-1.00000000000000))*(sj3)*(x3054)*(x3056)))+(((IkReal(-1.00000000000000))*(x3059)*(x3060)))+(((IkReal(0.707109999985348))*(x3053)*(x3054))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst36)*(((((IkReal(0.707103562373095))*(x3053)*(x3061)))+(((IkReal(-0.707103562373095))*(x3053)*(x3062)))+(((IkReal(-1.00000000000000))*(sj3)*(x3058)*(x3062)))+(((IkReal(-1.00000000000000))*(x3055)*(x3056)))+(((IkReal(0.707103562373095))*(x3053)*(x3054)))+(((sj3)*(x3058)*(x3061)))+(((x3057)*(x3059)))+(((IkReal(-1.00000000000000))*(x3056)*(x3059)))+(((sj3)*(x3054)*(x3058)))+(((x3055)*(x3057)))))), ((gconst36)*(((((IkReal(-1.00000000000000))*(x3055)*(x3058)))+(((sj3)*(x3056)*(x3062)))+(((IkReal(-1.00000000000000))*(x3058)*(x3059)))+(((IkReal(0.707109999985348))*(x3053)*(x3061)))+(((IkReal(-1.00000000000000))*(sj3)*(x3056)*(x3061)))+(((IkReal(-0.707109999985348))*(x3053)*(x3062)))+(((IkReal(-1.00000000000000))*(x3055)*(x3060)))+(((IkReal(-1.00000000000000))*(sj3)*(x3054)*(x3056)))+(((IkReal(-1.00000000000000))*(x3059)*(x3060)))+(((IkReal(0.707109999985348))*(x3053)*(x3054)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x3063=IKcos(j1);
IkReal x3064=IKsin(j1);
IkReal x3065=((cj0)*(cj4));
IkReal x3066=((r01)*(sj5));
IkReal x3067=((IkReal(1.00000000000000))*(cj4));
IkReal x3068=((IkReal(1.00000000000000))*(r02));
IkReal x3069=((IkReal(0.707109999985348))*(sj3));
IkReal x3070=((IkReal(0.707103562373095))*(sj3));
IkReal x3071=((IkReal(1.00000000000000))*(sj4));
IkReal x3072=((cj5)*(r20));
IkReal x3073=((cj5)*(sj0));
IkReal x3074=((IkReal(1.00000000000000))*(cj0));
IkReal x3075=((r12)*(sj0));
IkReal x3076=((cj2)*(cj3));
IkReal x3077=((IkReal(0.707103562373095))*(cj3));
IkReal x3078=((r21)*(sj5));
IkReal x3079=((IkReal(0.707109999985348))*(cj3));
IkReal x3080=((IkReal(1.00000000000000))*(sj0)*(sj5));
IkReal x3081=((sj2)*(x3063));
IkReal x3082=((cj2)*(x3063));
IkReal x3083=((cj0)*(cj5)*(r00));
IkReal x3084=((IkReal(0.707103562373095))*(x3064));
IkReal x3085=((cj2)*(x3064));
IkReal x3086=((IkReal(0.707109999985348))*(sj2)*(x3064));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x3070)*(x3081)))+(((IkReal(-1.00000000000000))*(x3070)*(x3085)))+(((IkReal(-1.00000000000000))*(x3069)*(x3082)))+(((sj2)*(x3064)*(x3069)))+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((IkReal(-0.707103562373095))*(x3082)))+(((IkReal(-1.00000000000000))*(x3071)*(x3072)))+(((IkReal(0.707109999985348))*(x3081)))+(((IkReal(0.707109999985348))*(x3085)))+(((sj4)*(x3078)))+(((sj2)*(x3084))));
evalcond[2]=((((cj4)*(x3072)))+(((IkReal(-1.00000000000000))*(x3067)*(x3078)))+(((r22)*(sj4)))+(((IkReal(0.707109999985348))*(x3063)*(x3076)))+(((x3076)*(x3084)))+(((x3077)*(x3081)))+(((IkReal(-1.00000000000000))*(sj2)*(x3064)*(x3079))));
evalcond[3]=((((x3069)*(x3085)))+(((x3069)*(x3081)))+(((sj2)*(x3064)*(x3070)))+(((IkReal(-1.00000000000000))*(r11)*(x3073)))+(((IkReal(-1.00000000000000))*(x3070)*(x3082)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3074)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3074)))+(((IkReal(-1.00000000000000))*(r10)*(x3080))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj5)*(x3071)))+(((IkReal(-1.00000000000000))*(x3086)))+(((cj2)*(x3084)))+(((IkReal(-1.00000000000000))*(x3067)*(x3075)))+(((IkReal(-1.00000000000000))*(cj0)*(x3066)*(x3071)))+(((sj4)*(x3083)))+(((r10)*(sj4)*(x3073)))+(((IkReal(-1.00000000000000))*(x3065)*(x3068)))+(((IkReal(0.707103562373095))*(x3081)))+(((IkReal(0.707109999985348))*(x3082))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x3067)*(x3073)))+(((IkReal(-1.00000000000000))*(x3079)*(x3081)))+(((x3065)*(x3066)))+(((IkReal(-1.00000000000000))*(cj0)*(sj4)*(x3068)))+(((cj4)*(r11)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(x3071)*(x3075)))+(((IkReal(-0.707109999985348))*(x3064)*(x3076)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x3065)))+(((IkReal(0.707103562373095))*(x3063)*(x3076)))+(((IkReal(-1.00000000000000))*(sj2)*(x3064)*(x3077))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3087=((cj5)*(npy));
IkReal x3088=((IkReal(8.66210554726807e+23))*(npx));
IkReal x3089=((IkReal(6.89439331452234e+23))*(npx));
IkReal x3090=((IkReal(8.66210554726807e+23))*(sj3));
IkReal x3091=((cj4)*(npz));
IkReal x3092=((IkReal(6.89439331452234e+23))*(sj3));
IkReal x3093=((cj5)*(sj3)*(sj4));
IkReal x3094=((npy)*(sj4)*(sj5));
if( IKabs(((gconst34)*(((IkReal(-5.19726332836084e+21))+(((IkReal(-5.19726332836084e+21))*(cj3)))+(((IkReal(1.51888207091656e+23))*(sj3)))+(((IkReal(-1.00000000000000))*(x3092)*(x3094)))+(((IkReal(8.66210554726807e+23))*(x3087)))+(((IkReal(-1.00000000000000))*(x3091)*(x3092)))+(((x3089)*(x3093)))+(((sj5)*(x3088))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst34)*(((IkReal(-4.13663598871341e+21))+(((IkReal(6.89439331452234e+23))*(x3087)))+(((x3090)*(x3091)))+(((x3090)*(x3094)))+(((IkReal(-1.00000000000000))*(x3088)*(x3093)))+(((sj5)*(x3089)))+(((IkReal(-2.44170809699545e+23))*(sj3)))+(((IkReal(-4.13663598871341e+21))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst34)*(((IkReal(-5.19726332836084e+21))+(((IkReal(-5.19726332836084e+21))*(cj3)))+(((IkReal(1.51888207091656e+23))*(sj3)))+(((IkReal(-1.00000000000000))*(x3092)*(x3094)))+(((IkReal(8.66210554726807e+23))*(x3087)))+(((IkReal(-1.00000000000000))*(x3091)*(x3092)))+(((x3089)*(x3093)))+(((sj5)*(x3088)))))), ((gconst34)*(((IkReal(-4.13663598871341e+21))+(((IkReal(6.89439331452234e+23))*(x3087)))+(((x3090)*(x3091)))+(((x3090)*(x3094)))+(((IkReal(-1.00000000000000))*(x3088)*(x3093)))+(((sj5)*(x3089)))+(((IkReal(-2.44170809699545e+23))*(sj3)))+(((IkReal(-4.13663598871341e+21))*(cj3)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[3];
IkReal x3095=IKsin(j2);
IkReal x3096=IKcos(j2);
IkReal x3097=((cj5)*(npx));
IkReal x3098=((npy)*(sj5));
IkReal x3099=((IkReal(0.165463933124939))*(x3096));
IkReal x3100=((IkReal(0.207888640466058))*(x3095));
evalcond[0]=((IkReal(-0.258003287011922))+(((IkReal(0.165463933124939))*(x3095)))+(((IkReal(-0.207888640466058))*(x3096)))+(((cj4)*(npz)))+(((sj4)*(x3098)))+(((IkReal(-1.00000000000000))*(sj4)*(x3097))));
evalcond[1]=((IkReal(-0.00600000000000000))+(((IkReal(-0.0300035672348961))*(sj3)))+(((npx)*(sj5)))+(((IkReal(-1.00000000000000))*(sj3)*(x3100)))+(((IkReal(-0.00600000000000000))*(cj3)))+(((cj5)*(npy)))+(((IkReal(-1.00000000000000))*(sj3)*(x3099))));
evalcond[2]=((((cj4)*(x3097)))+(((npz)*(sj4)))+(((IkReal(-0.00600000000000000))*(sj3)))+(((cj3)*(x3100)))+(((IkReal(-1.00000000000000))*(cj4)*(x3098)))+(((cj3)*(x3099)))+(((IkReal(0.0300035672348961))*(cj3))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst36;
IkReal x3101=((IkReal(1.00000000000000))*(sj3));
gconst36=IKsign(((((IkReal(-1.00000000000000))*(x3101)*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*(x3101)*((sj2)*(sj2))))));
IkReal x3102=((IkReal(1.00000000000000))*(sj3));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x3102)*((sj2)*(sj2))))+(((IkReal(-1.00000000000000))*(x3102)*((cj2)*(cj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst37;
IkReal x3103=((IkReal(1.00000000000000))*(cj3));
gconst37=IKsign(((((IkReal(-1.00000000000000))*(x3103)*((sj2)*(sj2))))+(((IkReal(-1.00000000000000))*(x3103)*((cj2)*(cj2))))));
IkReal x3104=((IkReal(1.00000000000000))*(cj3));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x3104)*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*(x3104)*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3105=((sj0)*(sj4));
IkReal x3106=((IkReal(1.00000000000000))*(r12));
IkReal x3107=((cj0)*(cj4));
IkReal x3108=((r01)*(sj5));
IkReal x3109=((IkReal(1.00000000000000))*(cj5));
IkReal x3110=((cj4)*(cj5));
IkReal x3111=((IkReal(1.00000000000000))*(cj0));
IkReal x3112=((cj4)*(sj0));
IkReal x3113=((r00)*(sj0));
IkReal x3114=((npy)*(sj5));
IkReal x3115=((IkReal(1.00000000000000))*(cj4));
IkReal x3116=((cj0)*(sj4));
IkReal x3117=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj0)*(r11)*(x3109)))+(((cj5)*(r01)*(sj0)))+(((sj5)*(x3113)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x3111))));
evalcond[2]=((IkReal(-0.258003287011922))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x3109)))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((sj4)*(x3114)))+(((IkReal(0.165463933124939))*(sj2))));
evalcond[3]=((IkReal(-0.0360035672348961))+(((npx)*(sj5)))+(((IkReal(-0.165463933124939))*(cj2)))+(((cj5)*(npy)))+(((IkReal(-0.207888640466058))*(sj2))));
evalcond[4]=((IkReal(-0.00600000000000000))+(((npx)*(x3110)))+(((IkReal(-1.00000000000000))*(x3114)*(x3115)))+(((npz)*(sj4))));
evalcond[5]=((((r02)*(x3112)))+(((IkReal(-1.00000000000000))*(x3106)*(x3107)))+(((x3105)*(x3108)))+(((IkReal(-1.00000000000000))*(r00)*(x3105)*(x3109)))+(((IkReal(-1.00000000000000))*(sj4)*(x3111)*(x3117)))+(((cj5)*(r10)*(x3116))));
evalcond[6]=((IkReal(1.00000000000000))+(((x3107)*(x3117)))+(((IkReal(-1.00000000000000))*(x3108)*(x3112)))+(((IkReal(-1.00000000000000))*(r10)*(x3107)*(x3109)))+(((r02)*(x3105)))+(((x3110)*(x3113)))+(((IkReal(-1.00000000000000))*(x3106)*(x3116))));
evalcond[7]=((((r22)*(sj4)))+(((r20)*(x3110)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x3115))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r10)*(x3109)*(x3112)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x3111)))+(((x3107)*(x3108)))+(((x3112)*(x3117)))+(((IkReal(-1.00000000000000))*(x3105)*(x3106)))+(((IkReal(-1.00000000000000))*(r00)*(x3107)*(x3109))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst38;
gconst38=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst39;
gconst39=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3118=((cj5)*(r11));
IkReal x3119=((r10)*(sj0));
IkReal x3120=((IkReal(0.707103562373095))*(cj2));
IkReal x3121=((r20)*(sj5));
IkReal x3122=((IkReal(0.707103562373095))*(sj2));
IkReal x3123=((IkReal(0.707109999985348))*(cj2));
IkReal x3124=((cj0)*(r00));
IkReal x3125=((IkReal(0.707109999985348))*(sj2));
IkReal x3126=((cj5)*(r21));
IkReal x3127=((sj0)*(x3122));
IkReal x3128=((sj5)*(x3123));
IkReal x3129=((cj0)*(cj5)*(r01));
if( IKabs(((gconst39)*(((((IkReal(-1.00000000000000))*(sj5)*(x3119)*(x3122)))+(((IkReal(-1.00000000000000))*(sj5)*(x3122)*(x3124)))+(((IkReal(-1.00000000000000))*(x3124)*(x3128)))+(((x3125)*(x3126)))+(((IkReal(-1.00000000000000))*(x3122)*(x3129)))+(((x3121)*(x3125)))+(((IkReal(-1.00000000000000))*(x3123)*(x3129)))+(((IkReal(-1.00000000000000))*(x3120)*(x3126)))+(((IkReal(-1.00000000000000))*(x3120)*(x3121)))+(((IkReal(-1.00000000000000))*(sj0)*(x3118)*(x3123)))+(((IkReal(-1.00000000000000))*(x3119)*(x3128)))+(((IkReal(-1.00000000000000))*(x3118)*(x3127))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst39)*(((((IkReal(-1.00000000000000))*(sj5)*(x3119)*(x3125)))+(((x3120)*(x3129)))+(((IkReal(-1.00000000000000))*(x3125)*(x3129)))+(((IkReal(-1.00000000000000))*(sj5)*(x3124)*(x3125)))+(((IkReal(-1.00000000000000))*(x3122)*(x3126)))+(((IkReal(-1.00000000000000))*(x3123)*(x3126)))+(((IkReal(-1.00000000000000))*(sj0)*(x3118)*(x3125)))+(((IkReal(-1.00000000000000))*(x3121)*(x3122)))+(((IkReal(-1.00000000000000))*(x3121)*(x3123)))+(((sj5)*(x3119)*(x3120)))+(((sj0)*(x3118)*(x3120)))+(((sj5)*(x3120)*(x3124))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst39)*(((((IkReal(-1.00000000000000))*(sj5)*(x3119)*(x3122)))+(((IkReal(-1.00000000000000))*(sj5)*(x3122)*(x3124)))+(((IkReal(-1.00000000000000))*(x3124)*(x3128)))+(((x3125)*(x3126)))+(((IkReal(-1.00000000000000))*(x3122)*(x3129)))+(((x3121)*(x3125)))+(((IkReal(-1.00000000000000))*(x3123)*(x3129)))+(((IkReal(-1.00000000000000))*(x3120)*(x3126)))+(((IkReal(-1.00000000000000))*(x3120)*(x3121)))+(((IkReal(-1.00000000000000))*(sj0)*(x3118)*(x3123)))+(((IkReal(-1.00000000000000))*(x3119)*(x3128)))+(((IkReal(-1.00000000000000))*(x3118)*(x3127)))))), ((gconst39)*(((((IkReal(-1.00000000000000))*(sj5)*(x3119)*(x3125)))+(((x3120)*(x3129)))+(((IkReal(-1.00000000000000))*(x3125)*(x3129)))+(((IkReal(-1.00000000000000))*(sj5)*(x3124)*(x3125)))+(((IkReal(-1.00000000000000))*(x3122)*(x3126)))+(((IkReal(-1.00000000000000))*(x3123)*(x3126)))+(((IkReal(-1.00000000000000))*(sj0)*(x3118)*(x3125)))+(((IkReal(-1.00000000000000))*(x3121)*(x3122)))+(((IkReal(-1.00000000000000))*(x3121)*(x3123)))+(((sj5)*(x3119)*(x3120)))+(((sj0)*(x3118)*(x3120)))+(((sj5)*(x3120)*(x3124)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3130=IKsin(j1);
IkReal x3131=IKcos(j1);
IkReal x3132=((IkReal(0.707109999985348))*(cj2));
IkReal x3133=((IkReal(1.00000000000000))*(cj0));
IkReal x3134=((IkReal(0.707109999985348))*(sj2));
IkReal x3135=((cj5)*(sj4));
IkReal x3136=((sj4)*(sj5));
IkReal x3137=((IkReal(1.00000000000000))*(sj0));
IkReal x3138=((sj5)*(x3137));
IkReal x3139=((IkReal(0.707103562373095))*(x3131));
IkReal x3140=((IkReal(0.707103562373095))*(x3130));
IkReal x3141=((x3130)*(x3132));
IkReal x3142=((sj2)*(x3140));
IkReal x3143=((x3131)*(x3134));
IkReal x3144=((cj2)*(x3139));
IkReal x3145=((sj2)*(x3139));
IkReal x3146=((cj2)*(x3140));
IkReal x3147=((x3131)*(x3132));
IkReal x3148=((x3130)*(x3134));
IkReal x3149=((x3145)+(x3146)+(x3147));
IkReal x3150=((x3141)+(x3142)+(x3143));
evalcond[0]=((x3148)+(((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x3149)))+(((r20)*(sj5))));
evalcond[1]=((x3150)+(((IkReal(-1.00000000000000))*(x3144)))+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x3135)))+(((r21)*(x3136))));
evalcond[2]=((x3150)+(((IkReal(-1.00000000000000))*(x3144)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3137)))+(((IkReal(-1.00000000000000))*(r10)*(x3138)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3133)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3133))));
evalcond[3]=((x3149)+(((IkReal(-1.00000000000000))*(x3148)))+(((r10)*(sj0)*(x3135)))+(((cj0)*(r00)*(x3135)))+(((IkReal(-1.00000000000000))*(r01)*(x3133)*(x3136)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3137)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3133)))+(((IkReal(-1.00000000000000))*(r11)*(x3136)*(x3137))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3151=((cj5)*(sj4));
IkReal x3152=((r21)*(sj4));
IkReal x3153=((cj5)*(r21));
IkReal x3154=((IkReal(0.707109999985348))*(cj2));
IkReal x3155=((IkReal(0.707103562373095))*(sj2));
IkReal x3156=((IkReal(0.707109999985348))*(sj2));
IkReal x3157=((cj4)*(r22));
IkReal x3158=((IkReal(0.707103562373095))*(cj2));
IkReal x3159=((r20)*(x3154));
IkReal x3160=((sj5)*(x3158));
IkReal x3161=((sj5)*(x3156));
if( IKabs(((gconst38)*(((((sj5)*(x3152)*(x3155)))+(((sj5)*(x3152)*(x3154)))+(((IkReal(-1.00000000000000))*(x3153)*(x3158)))+(((x3155)*(x3157)))+(((x3154)*(x3157)))+(((r20)*(x3161)))+(((x3153)*(x3156)))+(((IkReal(-1.00000000000000))*(r20)*(x3160)))+(((IkReal(-1.00000000000000))*(r20)*(x3151)*(x3155)))+(((IkReal(-1.00000000000000))*(x3151)*(x3159))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst38)*(((((IkReal(-1.00000000000000))*(x3152)*(x3160)))+(((IkReal(-1.00000000000000))*(x3157)*(x3158)))+(((x3152)*(x3161)))+(((IkReal(-1.00000000000000))*(x3153)*(x3155)))+(((IkReal(-1.00000000000000))*(x3153)*(x3154)))+(((x3156)*(x3157)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3155)))+(((IkReal(-1.00000000000000))*(sj5)*(x3159)))+(((IkReal(-1.00000000000000))*(r20)*(x3151)*(x3156)))+(((r20)*(x3151)*(x3158))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst38)*(((((sj5)*(x3152)*(x3155)))+(((sj5)*(x3152)*(x3154)))+(((IkReal(-1.00000000000000))*(x3153)*(x3158)))+(((x3155)*(x3157)))+(((x3154)*(x3157)))+(((r20)*(x3161)))+(((x3153)*(x3156)))+(((IkReal(-1.00000000000000))*(r20)*(x3160)))+(((IkReal(-1.00000000000000))*(r20)*(x3151)*(x3155)))+(((IkReal(-1.00000000000000))*(x3151)*(x3159)))))), ((gconst38)*(((((IkReal(-1.00000000000000))*(x3152)*(x3160)))+(((IkReal(-1.00000000000000))*(x3157)*(x3158)))+(((x3152)*(x3161)))+(((IkReal(-1.00000000000000))*(x3153)*(x3155)))+(((IkReal(-1.00000000000000))*(x3153)*(x3154)))+(((x3156)*(x3157)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3155)))+(((IkReal(-1.00000000000000))*(sj5)*(x3159)))+(((IkReal(-1.00000000000000))*(r20)*(x3151)*(x3156)))+(((r20)*(x3151)*(x3158)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3162=IKsin(j1);
IkReal x3163=IKcos(j1);
IkReal x3164=((IkReal(0.707109999985348))*(cj2));
IkReal x3165=((IkReal(1.00000000000000))*(cj0));
IkReal x3166=((IkReal(0.707109999985348))*(sj2));
IkReal x3167=((cj5)*(sj4));
IkReal x3168=((sj4)*(sj5));
IkReal x3169=((IkReal(1.00000000000000))*(sj0));
IkReal x3170=((sj5)*(x3169));
IkReal x3171=((IkReal(0.707103562373095))*(x3163));
IkReal x3172=((IkReal(0.707103562373095))*(x3162));
IkReal x3173=((x3162)*(x3164));
IkReal x3174=((sj2)*(x3172));
IkReal x3175=((x3163)*(x3166));
IkReal x3176=((cj2)*(x3171));
IkReal x3177=((sj2)*(x3171));
IkReal x3178=((cj2)*(x3172));
IkReal x3179=((x3163)*(x3164));
IkReal x3180=((x3162)*(x3166));
IkReal x3181=((x3179)+(x3178)+(x3177));
IkReal x3182=((x3173)+(x3175)+(x3174));
evalcond[0]=((x3180)+(((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x3181)))+(((r20)*(sj5))));
evalcond[1]=((x3182)+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x3176)))+(((IkReal(-1.00000000000000))*(r20)*(x3167)))+(((r21)*(x3168))));
evalcond[2]=((x3182)+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3165)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3165)))+(((IkReal(-1.00000000000000))*(r10)*(x3170)))+(((IkReal(-1.00000000000000))*(x3176)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3169))));
evalcond[3]=((x3181)+(((IkReal(-1.00000000000000))*(r11)*(x3168)*(x3169)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3169)))+(((IkReal(-1.00000000000000))*(r01)*(x3165)*(x3168)))+(((r10)*(sj0)*(x3167)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3165)))+(((IkReal(-1.00000000000000))*(x3180)))+(((cj0)*(r00)*(x3167))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3183=((sj0)*(sj4));
IkReal x3184=((IkReal(1.00000000000000))*(r12));
IkReal x3185=((cj0)*(cj4));
IkReal x3186=((r01)*(sj5));
IkReal x3187=((IkReal(1.00000000000000))*(cj5));
IkReal x3188=((cj4)*(cj5));
IkReal x3189=((IkReal(1.00000000000000))*(cj0));
IkReal x3190=((cj4)*(sj0));
IkReal x3191=((r00)*(sj0));
IkReal x3192=((npy)*(sj5));
IkReal x3193=((IkReal(1.00000000000000))*(cj4));
IkReal x3194=((cj0)*(sj4));
IkReal x3195=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((cj5)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x3187)))+(((sj5)*(x3191)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x3189))));
evalcond[2]=((IkReal(-0.258003287011922))+(((sj4)*(x3192)))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x3187)))+(((IkReal(0.165463933124939))*(sj2))));
evalcond[3]=((IkReal(-0.0360035672348961))+(((npx)*(sj5)))+(((IkReal(-0.165463933124939))*(cj2)))+(((cj5)*(npy)))+(((IkReal(-0.207888640466058))*(sj2))));
evalcond[4]=((IkReal(-0.00600000000000000))+(((npz)*(sj4)))+(((IkReal(-1.00000000000000))*(x3192)*(x3193)))+(((npx)*(x3188))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3184)*(x3185)))+(((IkReal(-1.00000000000000))*(r00)*(x3183)*(x3187)))+(((cj5)*(r10)*(x3194)))+(((x3183)*(x3186)))+(((IkReal(-1.00000000000000))*(sj4)*(x3189)*(x3195)))+(((r02)*(x3190))));
evalcond[6]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x3184)*(x3194)))+(((IkReal(-1.00000000000000))*(x3186)*(x3190)))+(((x3185)*(x3195)))+(((IkReal(-1.00000000000000))*(r10)*(x3185)*(x3187)))+(((x3188)*(x3191)))+(((r02)*(x3183))));
evalcond[7]=((((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x3193)))+(((r20)*(x3188))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x3183)*(x3184)))+(((IkReal(-1.00000000000000))*(r00)*(x3185)*(x3187)))+(((x3185)*(x3186)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x3189)))+(((x3190)*(x3195)))+(((IkReal(-1.00000000000000))*(r10)*(x3187)*(x3190))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst40;
gconst40=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst41;
gconst41=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3196=((cj5)*(r11));
IkReal x3197=((r10)*(sj0));
IkReal x3198=((IkReal(0.707103562373095))*(cj2));
IkReal x3199=((r20)*(sj5));
IkReal x3200=((IkReal(0.707103562373095))*(sj2));
IkReal x3201=((IkReal(0.707109999985348))*(cj2));
IkReal x3202=((cj0)*(r00));
IkReal x3203=((IkReal(0.707109999985348))*(sj2));
IkReal x3204=((cj5)*(r21));
IkReal x3205=((sj0)*(x3200));
IkReal x3206=((sj5)*(x3201));
IkReal x3207=((cj0)*(cj5)*(r01));
if( IKabs(((gconst41)*(((((IkReal(-1.00000000000000))*(x3196)*(x3205)))+(((IkReal(-1.00000000000000))*(sj0)*(x3196)*(x3201)))+(((IkReal(-1.00000000000000))*(x3200)*(x3207)))+(((IkReal(-1.00000000000000))*(sj5)*(x3200)*(x3202)))+(((IkReal(-1.00000000000000))*(x3198)*(x3199)))+(((x3199)*(x3203)))+(((IkReal(-1.00000000000000))*(x3202)*(x3206)))+(((IkReal(-1.00000000000000))*(x3201)*(x3207)))+(((IkReal(-1.00000000000000))*(x3197)*(x3206)))+(((IkReal(-1.00000000000000))*(sj5)*(x3197)*(x3200)))+(((x3203)*(x3204)))+(((IkReal(-1.00000000000000))*(x3198)*(x3204))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst41)*(((((sj0)*(x3196)*(x3198)))+(((IkReal(-1.00000000000000))*(sj0)*(x3196)*(x3203)))+(((x3198)*(x3207)))+(((IkReal(-1.00000000000000))*(x3199)*(x3200)))+(((IkReal(-1.00000000000000))*(x3199)*(x3201)))+(((IkReal(-1.00000000000000))*(sj5)*(x3202)*(x3203)))+(((IkReal(-1.00000000000000))*(x3200)*(x3204)))+(((sj5)*(x3198)*(x3202)))+(((IkReal(-1.00000000000000))*(x3201)*(x3204)))+(((IkReal(-1.00000000000000))*(x3203)*(x3207)))+(((IkReal(-1.00000000000000))*(sj5)*(x3197)*(x3203)))+(((sj5)*(x3197)*(x3198))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst41)*(((((IkReal(-1.00000000000000))*(x3196)*(x3205)))+(((IkReal(-1.00000000000000))*(sj0)*(x3196)*(x3201)))+(((IkReal(-1.00000000000000))*(x3200)*(x3207)))+(((IkReal(-1.00000000000000))*(sj5)*(x3200)*(x3202)))+(((IkReal(-1.00000000000000))*(x3198)*(x3199)))+(((x3199)*(x3203)))+(((IkReal(-1.00000000000000))*(x3202)*(x3206)))+(((IkReal(-1.00000000000000))*(x3201)*(x3207)))+(((IkReal(-1.00000000000000))*(x3197)*(x3206)))+(((IkReal(-1.00000000000000))*(sj5)*(x3197)*(x3200)))+(((x3203)*(x3204)))+(((IkReal(-1.00000000000000))*(x3198)*(x3204)))))), ((gconst41)*(((((sj0)*(x3196)*(x3198)))+(((IkReal(-1.00000000000000))*(sj0)*(x3196)*(x3203)))+(((x3198)*(x3207)))+(((IkReal(-1.00000000000000))*(x3199)*(x3200)))+(((IkReal(-1.00000000000000))*(x3199)*(x3201)))+(((IkReal(-1.00000000000000))*(sj5)*(x3202)*(x3203)))+(((IkReal(-1.00000000000000))*(x3200)*(x3204)))+(((sj5)*(x3198)*(x3202)))+(((IkReal(-1.00000000000000))*(x3201)*(x3204)))+(((IkReal(-1.00000000000000))*(x3203)*(x3207)))+(((IkReal(-1.00000000000000))*(sj5)*(x3197)*(x3203)))+(((sj5)*(x3197)*(x3198)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3208=IKsin(j1);
IkReal x3209=IKcos(j1);
IkReal x3210=((IkReal(0.707109999985348))*(cj2));
IkReal x3211=((IkReal(1.00000000000000))*(cj0));
IkReal x3212=((IkReal(0.707109999985348))*(sj2));
IkReal x3213=((cj5)*(sj4));
IkReal x3214=((sj4)*(sj5));
IkReal x3215=((IkReal(1.00000000000000))*(sj0));
IkReal x3216=((sj5)*(x3215));
IkReal x3217=((IkReal(0.707103562373095))*(x3209));
IkReal x3218=((IkReal(0.707103562373095))*(x3208));
IkReal x3219=((x3208)*(x3210));
IkReal x3220=((sj2)*(x3218));
IkReal x3221=((x3209)*(x3212));
IkReal x3222=((cj2)*(x3217));
IkReal x3223=((sj2)*(x3217));
IkReal x3224=((cj2)*(x3218));
IkReal x3225=((x3209)*(x3210));
IkReal x3226=((x3208)*(x3212));
IkReal x3227=((x3225)+(x3224)+(x3223));
IkReal x3228=((x3219)+(x3221)+(x3220));
evalcond[0]=((((cj5)*(r21)))+(x3226)+(((r20)*(sj5)))+(((IkReal(-1.00000000000000))*(x3227))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x3213)))+(((cj4)*(r22)))+(x3228)+(((r21)*(x3214)))+(((IkReal(-1.00000000000000))*(x3222))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x3216)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3215)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3211)))+(x3228)+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3211)))+(((IkReal(-1.00000000000000))*(x3222))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x3211)*(x3214)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3211)))+(x3227)+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3215)))+(((IkReal(-1.00000000000000))*(r11)*(x3214)*(x3215)))+(((r10)*(sj0)*(x3213)))+(((cj0)*(r00)*(x3213)))+(((IkReal(-1.00000000000000))*(x3226))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3229=((cj5)*(sj4));
IkReal x3230=((r21)*(sj4));
IkReal x3231=((cj5)*(r21));
IkReal x3232=((IkReal(0.707109999985348))*(cj2));
IkReal x3233=((IkReal(0.707103562373095))*(sj2));
IkReal x3234=((IkReal(0.707109999985348))*(sj2));
IkReal x3235=((cj4)*(r22));
IkReal x3236=((IkReal(0.707103562373095))*(cj2));
IkReal x3237=((r20)*(x3232));
IkReal x3238=((sj5)*(x3236));
IkReal x3239=((sj5)*(x3234));
if( IKabs(((gconst40)*(((((IkReal(-1.00000000000000))*(r20)*(x3229)*(x3233)))+(((IkReal(-1.00000000000000))*(x3229)*(x3237)))+(((x3232)*(x3235)))+(((IkReal(-1.00000000000000))*(x3231)*(x3236)))+(((r20)*(x3239)))+(((x3231)*(x3234)))+(((IkReal(-1.00000000000000))*(r20)*(x3238)))+(((sj5)*(x3230)*(x3232)))+(((sj5)*(x3230)*(x3233)))+(((x3233)*(x3235))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst40)*(((((IkReal(-1.00000000000000))*(r20)*(x3229)*(x3234)))+(((x3234)*(x3235)))+(((IkReal(-1.00000000000000))*(x3230)*(x3238)))+(((IkReal(-1.00000000000000))*(x3235)*(x3236)))+(((IkReal(-1.00000000000000))*(x3231)*(x3233)))+(((IkReal(-1.00000000000000))*(x3231)*(x3232)))+(((r20)*(x3229)*(x3236)))+(((IkReal(-1.00000000000000))*(sj5)*(x3237)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3233)))+(((x3230)*(x3239))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst40)*(((((IkReal(-1.00000000000000))*(r20)*(x3229)*(x3233)))+(((IkReal(-1.00000000000000))*(x3229)*(x3237)))+(((x3232)*(x3235)))+(((IkReal(-1.00000000000000))*(x3231)*(x3236)))+(((r20)*(x3239)))+(((x3231)*(x3234)))+(((IkReal(-1.00000000000000))*(r20)*(x3238)))+(((sj5)*(x3230)*(x3232)))+(((sj5)*(x3230)*(x3233)))+(((x3233)*(x3235)))))), ((gconst40)*(((((IkReal(-1.00000000000000))*(r20)*(x3229)*(x3234)))+(((x3234)*(x3235)))+(((IkReal(-1.00000000000000))*(x3230)*(x3238)))+(((IkReal(-1.00000000000000))*(x3235)*(x3236)))+(((IkReal(-1.00000000000000))*(x3231)*(x3233)))+(((IkReal(-1.00000000000000))*(x3231)*(x3232)))+(((r20)*(x3229)*(x3236)))+(((IkReal(-1.00000000000000))*(sj5)*(x3237)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3233)))+(((x3230)*(x3239)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3240=IKsin(j1);
IkReal x3241=IKcos(j1);
IkReal x3242=((IkReal(0.707109999985348))*(cj2));
IkReal x3243=((IkReal(1.00000000000000))*(cj0));
IkReal x3244=((IkReal(0.707109999985348))*(sj2));
IkReal x3245=((cj5)*(sj4));
IkReal x3246=((sj4)*(sj5));
IkReal x3247=((IkReal(1.00000000000000))*(sj0));
IkReal x3248=((sj5)*(x3247));
IkReal x3249=((IkReal(0.707103562373095))*(x3241));
IkReal x3250=((IkReal(0.707103562373095))*(x3240));
IkReal x3251=((x3240)*(x3242));
IkReal x3252=((sj2)*(x3250));
IkReal x3253=((x3241)*(x3244));
IkReal x3254=((cj2)*(x3249));
IkReal x3255=((sj2)*(x3249));
IkReal x3256=((cj2)*(x3250));
IkReal x3257=((x3241)*(x3242));
IkReal x3258=((x3240)*(x3244));
IkReal x3259=((x3255)+(x3256)+(x3257));
IkReal x3260=((x3251)+(x3252)+(x3253));
evalcond[0]=((((cj5)*(r21)))+(x3258)+(((r20)*(sj5)))+(((IkReal(-1.00000000000000))*(x3259))));
evalcond[1]=((((r21)*(x3246)))+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x3245)))+(x3260)+(((IkReal(-1.00000000000000))*(x3254))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3243)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3243)))+(x3260)+(((IkReal(-1.00000000000000))*(r10)*(x3248)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3247)))+(((IkReal(-1.00000000000000))*(x3254))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x3246)*(x3247)))+(x3259)+(((r10)*(sj0)*(x3245)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3243)))+(((cj0)*(r00)*(x3245)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3247)))+(((IkReal(-1.00000000000000))*(x3258)))+(((IkReal(-1.00000000000000))*(r01)*(x3243)*(x3246))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3261=((sj0)*(sj4));
IkReal x3262=((IkReal(1.00000000000000))*(r12));
IkReal x3263=((cj0)*(cj4));
IkReal x3264=((r01)*(sj5));
IkReal x3265=((IkReal(1.00000000000000))*(cj5));
IkReal x3266=((cj4)*(cj5));
IkReal x3267=((IkReal(1.00000000000000))*(cj0));
IkReal x3268=((cj4)*(sj0));
IkReal x3269=((r00)*(sj0));
IkReal x3270=((npy)*(sj5));
IkReal x3271=((IkReal(1.00000000000000))*(cj4));
IkReal x3272=((cj0)*(sj4));
IkReal x3273=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((cj5)*(r01)*(sj0)))+(((sj5)*(x3269)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x3267)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x3265))));
evalcond[2]=((IkReal(-0.258003287011922))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((sj4)*(x3270)))+(((IkReal(0.165463933124939))*(sj2)))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x3265))));
evalcond[3]=((IkReal(0.0240035672348961))+(((npx)*(sj5)))+(((IkReal(0.207888640466058))*(sj2)))+(((cj5)*(npy)))+(((IkReal(0.165463933124939))*(cj2))));
evalcond[4]=((IkReal(0.00600000000000000))+(((npz)*(sj4)))+(((IkReal(-1.00000000000000))*(x3270)*(x3271)))+(((npx)*(x3266))));
evalcond[5]=((((cj5)*(r10)*(x3272)))+(((r02)*(x3268)))+(((IkReal(-1.00000000000000))*(x3262)*(x3263)))+(((IkReal(-1.00000000000000))*(sj4)*(x3267)*(x3273)))+(((x3261)*(x3264)))+(((IkReal(-1.00000000000000))*(r00)*(x3261)*(x3265))));
evalcond[6]=((IkReal(-1.00000000000000))+(((x3263)*(x3273)))+(((IkReal(-1.00000000000000))*(r10)*(x3263)*(x3265)))+(((IkReal(-1.00000000000000))*(x3264)*(x3268)))+(((r02)*(x3261)))+(((IkReal(-1.00000000000000))*(x3262)*(x3272)))+(((x3266)*(x3269))));
evalcond[7]=((((IkReal(-1.00000000000000))*(r21)*(sj5)*(x3271)))+(((r22)*(sj4)))+(((r20)*(x3266))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x3261)*(x3262)))+(((x3263)*(x3264)))+(((IkReal(-1.00000000000000))*(r00)*(x3263)*(x3265)))+(((IkReal(-1.00000000000000))*(r10)*(x3265)*(x3268)))+(((x3268)*(x3273)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x3267))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst42;
gconst42=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst43;
gconst43=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3274=((cj5)*(r11));
IkReal x3275=((r10)*(sj0));
IkReal x3276=((IkReal(0.707103562373095))*(cj2));
IkReal x3277=((r20)*(sj5));
IkReal x3278=((IkReal(0.707103562373095))*(sj2));
IkReal x3279=((IkReal(0.707109999985348))*(cj2));
IkReal x3280=((cj0)*(r00));
IkReal x3281=((IkReal(0.707109999985348))*(sj2));
IkReal x3282=((cj5)*(r21));
IkReal x3283=((sj0)*(x3278));
IkReal x3284=((sj5)*(x3279));
IkReal x3285=((cj0)*(cj5)*(r01));
if( IKabs(((gconst43)*(((((x3279)*(x3285)))+(((sj5)*(x3278)*(x3280)))+(((sj5)*(x3275)*(x3278)))+(((IkReal(-1.00000000000000))*(x3281)*(x3282)))+(((sj0)*(x3274)*(x3279)))+(((x3280)*(x3284)))+(((IkReal(-1.00000000000000))*(x3277)*(x3281)))+(((x3276)*(x3282)))+(((x3275)*(x3284)))+(((x3274)*(x3283)))+(((x3276)*(x3277)))+(((x3278)*(x3285))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((x3279)*(x3282)))+(((sj5)*(x3280)*(x3281)))+(((sj0)*(x3274)*(x3281)))+(((IkReal(-1.00000000000000))*(sj5)*(x3276)*(x3280)))+(((x3277)*(x3278)))+(((x3277)*(x3279)))+(((IkReal(-1.00000000000000))*(x3276)*(x3285)))+(((sj5)*(x3275)*(x3281)))+(((IkReal(-1.00000000000000))*(sj5)*(x3275)*(x3276)))+(((x3281)*(x3285)))+(((x3278)*(x3282)))+(((IkReal(-1.00000000000000))*(sj0)*(x3274)*(x3276))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst43)*(((((x3279)*(x3285)))+(((sj5)*(x3278)*(x3280)))+(((sj5)*(x3275)*(x3278)))+(((IkReal(-1.00000000000000))*(x3281)*(x3282)))+(((sj0)*(x3274)*(x3279)))+(((x3280)*(x3284)))+(((IkReal(-1.00000000000000))*(x3277)*(x3281)))+(((x3276)*(x3282)))+(((x3275)*(x3284)))+(((x3274)*(x3283)))+(((x3276)*(x3277)))+(((x3278)*(x3285)))))), ((gconst43)*(((((x3279)*(x3282)))+(((sj5)*(x3280)*(x3281)))+(((sj0)*(x3274)*(x3281)))+(((IkReal(-1.00000000000000))*(sj5)*(x3276)*(x3280)))+(((x3277)*(x3278)))+(((x3277)*(x3279)))+(((IkReal(-1.00000000000000))*(x3276)*(x3285)))+(((sj5)*(x3275)*(x3281)))+(((IkReal(-1.00000000000000))*(sj5)*(x3275)*(x3276)))+(((x3281)*(x3285)))+(((x3278)*(x3282)))+(((IkReal(-1.00000000000000))*(sj0)*(x3274)*(x3276)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3286=IKcos(j1);
IkReal x3287=IKsin(j1);
IkReal x3288=((IkReal(0.707109999985348))*(cj2));
IkReal x3289=((IkReal(1.00000000000000))*(cj0));
IkReal x3290=((IkReal(0.707109999985348))*(sj2));
IkReal x3291=((cj5)*(sj4));
IkReal x3292=((sj4)*(sj5));
IkReal x3293=((IkReal(1.00000000000000))*(sj0));
IkReal x3294=((sj5)*(x3293));
IkReal x3295=((IkReal(0.707103562373095))*(x3286));
IkReal x3296=((IkReal(0.707103562373095))*(x3287));
IkReal x3297=((cj2)*(x3295));
IkReal x3298=((x3287)*(x3288));
IkReal x3299=((sj2)*(x3296));
IkReal x3300=((x3286)*(x3290));
IkReal x3301=((sj2)*(x3295));
IkReal x3302=((cj2)*(x3296));
IkReal x3303=((x3286)*(x3288));
IkReal x3304=((x3287)*(x3290));
IkReal x3305=((x3302)+(x3303)+(x3301));
IkReal x3306=((x3300)+(x3298)+(x3299));
evalcond[0]=((((cj5)*(r21)))+(x3305)+(((IkReal(-1.00000000000000))*(x3304)))+(((r20)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x3291)))+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x3297)))+(x3306)+(((r21)*(x3292))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x3294)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3289)))+(x3297)+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3289)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3293)))+(((IkReal(-1.00000000000000))*(x3306))));
evalcond[3]=((((cj0)*(r00)*(x3291)))+(((IkReal(-1.00000000000000))*(r11)*(x3292)*(x3293)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3293)))+(x3305)+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3289)))+(((IkReal(-1.00000000000000))*(x3304)))+(((r10)*(sj0)*(x3291)))+(((IkReal(-1.00000000000000))*(r01)*(x3289)*(x3292))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3307=((cj5)*(sj4));
IkReal x3308=((r21)*(sj4));
IkReal x3309=((cj5)*(r21));
IkReal x3310=((IkReal(0.707109999985348))*(cj2));
IkReal x3311=((IkReal(0.707103562373095))*(sj2));
IkReal x3312=((IkReal(0.707109999985348))*(sj2));
IkReal x3313=((cj4)*(r22));
IkReal x3314=((IkReal(0.707103562373095))*(cj2));
IkReal x3315=((r20)*(x3310));
IkReal x3316=((sj5)*(x3314));
IkReal x3317=((sj5)*(x3312));
if( IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(sj5)*(x3308)*(x3311)))+(((IkReal(-1.00000000000000))*(sj5)*(x3308)*(x3310)))+(((r20)*(x3307)*(x3311)))+(((IkReal(-1.00000000000000))*(r20)*(x3316)))+(((IkReal(-1.00000000000000))*(x3309)*(x3314)))+(((IkReal(-1.00000000000000))*(x3310)*(x3313)))+(((x3307)*(x3315)))+(((IkReal(-1.00000000000000))*(x3311)*(x3313)))+(((r20)*(x3317)))+(((x3309)*(x3312))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*(((((r20)*(x3307)*(x3312)))+(((x3313)*(x3314)))+(((IkReal(-1.00000000000000))*(x3312)*(x3313)))+(((IkReal(-1.00000000000000))*(x3309)*(x3311)))+(((IkReal(-1.00000000000000))*(x3309)*(x3310)))+(((IkReal(-1.00000000000000))*(x3308)*(x3317)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3311)))+(((IkReal(-1.00000000000000))*(sj5)*(x3315)))+(((x3308)*(x3316)))+(((IkReal(-1.00000000000000))*(r20)*(x3307)*(x3314))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst42)*(((((IkReal(-1.00000000000000))*(sj5)*(x3308)*(x3311)))+(((IkReal(-1.00000000000000))*(sj5)*(x3308)*(x3310)))+(((r20)*(x3307)*(x3311)))+(((IkReal(-1.00000000000000))*(r20)*(x3316)))+(((IkReal(-1.00000000000000))*(x3309)*(x3314)))+(((IkReal(-1.00000000000000))*(x3310)*(x3313)))+(((x3307)*(x3315)))+(((IkReal(-1.00000000000000))*(x3311)*(x3313)))+(((r20)*(x3317)))+(((x3309)*(x3312)))))), ((gconst42)*(((((r20)*(x3307)*(x3312)))+(((x3313)*(x3314)))+(((IkReal(-1.00000000000000))*(x3312)*(x3313)))+(((IkReal(-1.00000000000000))*(x3309)*(x3311)))+(((IkReal(-1.00000000000000))*(x3309)*(x3310)))+(((IkReal(-1.00000000000000))*(x3308)*(x3317)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3311)))+(((IkReal(-1.00000000000000))*(sj5)*(x3315)))+(((x3308)*(x3316)))+(((IkReal(-1.00000000000000))*(r20)*(x3307)*(x3314)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3318=IKcos(j1);
IkReal x3319=IKsin(j1);
IkReal x3320=((IkReal(0.707109999985348))*(cj2));
IkReal x3321=((IkReal(1.00000000000000))*(cj0));
IkReal x3322=((IkReal(0.707109999985348))*(sj2));
IkReal x3323=((cj5)*(sj4));
IkReal x3324=((sj4)*(sj5));
IkReal x3325=((IkReal(1.00000000000000))*(sj0));
IkReal x3326=((sj5)*(x3325));
IkReal x3327=((IkReal(0.707103562373095))*(x3318));
IkReal x3328=((IkReal(0.707103562373095))*(x3319));
IkReal x3329=((cj2)*(x3327));
IkReal x3330=((x3319)*(x3320));
IkReal x3331=((sj2)*(x3328));
IkReal x3332=((x3318)*(x3322));
IkReal x3333=((sj2)*(x3327));
IkReal x3334=((cj2)*(x3328));
IkReal x3335=((x3318)*(x3320));
IkReal x3336=((x3319)*(x3322));
IkReal x3337=((x3333)+(x3335)+(x3334));
IkReal x3338=((x3332)+(x3331)+(x3330));
evalcond[0]=((((cj5)*(r21)))+(x3337)+(((IkReal(-1.00000000000000))*(x3336)))+(((r20)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3329)))+(((cj4)*(r22)))+(x3338)+(((r21)*(x3324)))+(((IkReal(-1.00000000000000))*(r20)*(x3323))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3321)))+(x3329)+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3325)))+(((IkReal(-1.00000000000000))*(r10)*(x3326)))+(((IkReal(-1.00000000000000))*(x3338)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3321))));
evalcond[3]=((x3337)+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3325)))+(((IkReal(-1.00000000000000))*(r11)*(x3324)*(x3325)))+(((cj0)*(r00)*(x3323)))+(((IkReal(-1.00000000000000))*(x3336)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3321)))+(((IkReal(-1.00000000000000))*(r01)*(x3321)*(x3324)))+(((r10)*(sj0)*(x3323))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3339=((sj0)*(sj4));
IkReal x3340=((IkReal(1.00000000000000))*(r12));
IkReal x3341=((cj0)*(cj4));
IkReal x3342=((r01)*(sj5));
IkReal x3343=((IkReal(1.00000000000000))*(cj5));
IkReal x3344=((cj4)*(cj5));
IkReal x3345=((IkReal(1.00000000000000))*(cj0));
IkReal x3346=((cj4)*(sj0));
IkReal x3347=((r00)*(sj0));
IkReal x3348=((npy)*(sj5));
IkReal x3349=((IkReal(1.00000000000000))*(cj4));
IkReal x3350=((cj0)*(sj4));
IkReal x3351=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj0)*(r11)*(x3343)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x3345)))+(((cj5)*(r01)*(sj0)))+(((sj5)*(x3347))));
evalcond[2]=((IkReal(-0.258003287011922))+(((sj4)*(x3348)))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x3343)))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((IkReal(0.165463933124939))*(sj2))));
evalcond[3]=((IkReal(0.0240035672348961))+(((npx)*(sj5)))+(((IkReal(0.207888640466058))*(sj2)))+(((cj5)*(npy)))+(((IkReal(0.165463933124939))*(cj2))));
evalcond[4]=((IkReal(0.00600000000000000))+(((npx)*(x3344)))+(((IkReal(-1.00000000000000))*(x3348)*(x3349)))+(((npz)*(sj4))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3340)*(x3341)))+(((IkReal(-1.00000000000000))*(sj4)*(x3345)*(x3351)))+(((r02)*(x3346)))+(((IkReal(-1.00000000000000))*(r00)*(x3339)*(x3343)))+(((cj5)*(r10)*(x3350)))+(((x3339)*(x3342))));
evalcond[6]=((IkReal(-1.00000000000000))+(((x3344)*(x3347)))+(((IkReal(-1.00000000000000))*(x3342)*(x3346)))+(((r02)*(x3339)))+(((IkReal(-1.00000000000000))*(x3340)*(x3350)))+(((IkReal(-1.00000000000000))*(r10)*(x3341)*(x3343)))+(((x3341)*(x3351))));
evalcond[7]=((((IkReal(-1.00000000000000))*(r21)*(sj5)*(x3349)))+(((r22)*(sj4)))+(((r20)*(x3344))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r00)*(x3341)*(x3343)))+(((x3341)*(x3342)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x3345)))+(((IkReal(-1.00000000000000))*(r10)*(x3343)*(x3346)))+(((IkReal(-1.00000000000000))*(x3339)*(x3340)))+(((x3346)*(x3351))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst44;
gconst44=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst45;
gconst45=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3352=((cj5)*(r11));
IkReal x3353=((r10)*(sj0));
IkReal x3354=((IkReal(0.707103562373095))*(cj2));
IkReal x3355=((r20)*(sj5));
IkReal x3356=((IkReal(0.707103562373095))*(sj2));
IkReal x3357=((IkReal(0.707109999985348))*(cj2));
IkReal x3358=((cj0)*(r00));
IkReal x3359=((IkReal(0.707109999985348))*(sj2));
IkReal x3360=((cj5)*(r21));
IkReal x3361=((sj0)*(x3356));
IkReal x3362=((sj5)*(x3357));
IkReal x3363=((cj0)*(cj5)*(r01));
if( IKabs(((gconst45)*(((((x3356)*(x3363)))+(((IkReal(-1.00000000000000))*(x3359)*(x3360)))+(((x3353)*(x3362)))+(((x3358)*(x3362)))+(((x3352)*(x3361)))+(((IkReal(-1.00000000000000))*(x3355)*(x3359)))+(((x3354)*(x3360)))+(((sj5)*(x3356)*(x3358)))+(((x3357)*(x3363)))+(((x3354)*(x3355)))+(((sj5)*(x3353)*(x3356)))+(((sj0)*(x3352)*(x3357))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst45)*(((((x3356)*(x3360)))+(((sj5)*(x3358)*(x3359)))+(((IkReal(-1.00000000000000))*(x3354)*(x3363)))+(((x3357)*(x3360)))+(((x3359)*(x3363)))+(((x3355)*(x3357)))+(((x3355)*(x3356)))+(((IkReal(-1.00000000000000))*(sj0)*(x3352)*(x3354)))+(((sj5)*(x3353)*(x3359)))+(((IkReal(-1.00000000000000))*(sj5)*(x3354)*(x3358)))+(((sj0)*(x3352)*(x3359)))+(((IkReal(-1.00000000000000))*(sj5)*(x3353)*(x3354))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst45)*(((((x3356)*(x3363)))+(((IkReal(-1.00000000000000))*(x3359)*(x3360)))+(((x3353)*(x3362)))+(((x3358)*(x3362)))+(((x3352)*(x3361)))+(((IkReal(-1.00000000000000))*(x3355)*(x3359)))+(((x3354)*(x3360)))+(((sj5)*(x3356)*(x3358)))+(((x3357)*(x3363)))+(((x3354)*(x3355)))+(((sj5)*(x3353)*(x3356)))+(((sj0)*(x3352)*(x3357)))))), ((gconst45)*(((((x3356)*(x3360)))+(((sj5)*(x3358)*(x3359)))+(((IkReal(-1.00000000000000))*(x3354)*(x3363)))+(((x3357)*(x3360)))+(((x3359)*(x3363)))+(((x3355)*(x3357)))+(((x3355)*(x3356)))+(((IkReal(-1.00000000000000))*(sj0)*(x3352)*(x3354)))+(((sj5)*(x3353)*(x3359)))+(((IkReal(-1.00000000000000))*(sj5)*(x3354)*(x3358)))+(((sj0)*(x3352)*(x3359)))+(((IkReal(-1.00000000000000))*(sj5)*(x3353)*(x3354)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3364=IKcos(j1);
IkReal x3365=IKsin(j1);
IkReal x3366=((IkReal(0.707109999985348))*(cj2));
IkReal x3367=((IkReal(1.00000000000000))*(cj0));
IkReal x3368=((IkReal(0.707109999985348))*(sj2));
IkReal x3369=((cj5)*(sj4));
IkReal x3370=((sj4)*(sj5));
IkReal x3371=((IkReal(1.00000000000000))*(sj0));
IkReal x3372=((sj5)*(x3371));
IkReal x3373=((IkReal(0.707103562373095))*(x3364));
IkReal x3374=((IkReal(0.707103562373095))*(x3365));
IkReal x3375=((cj2)*(x3373));
IkReal x3376=((x3365)*(x3366));
IkReal x3377=((sj2)*(x3374));
IkReal x3378=((x3364)*(x3368));
IkReal x3379=((sj2)*(x3373));
IkReal x3380=((cj2)*(x3374));
IkReal x3381=((x3364)*(x3366));
IkReal x3382=((x3365)*(x3368));
IkReal x3383=((x3379)+(x3380)+(x3381));
IkReal x3384=((x3378)+(x3377)+(x3376));
evalcond[0]=((((cj5)*(r21)))+(x3383)+(((IkReal(-1.00000000000000))*(x3382)))+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(x3384)+(((IkReal(-1.00000000000000))*(x3375)))+(((IkReal(-1.00000000000000))*(r20)*(x3369)))+(((r21)*(x3370))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x3372)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3371)))+(x3375)+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3367)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3367)))+(((IkReal(-1.00000000000000))*(x3384))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3371)))+(((r10)*(sj0)*(x3369)))+(((IkReal(-1.00000000000000))*(r01)*(x3367)*(x3370)))+(x3383)+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3367)))+(((cj0)*(r00)*(x3369)))+(((IkReal(-1.00000000000000))*(x3382)))+(((IkReal(-1.00000000000000))*(r11)*(x3370)*(x3371))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3385=((cj5)*(sj4));
IkReal x3386=((r21)*(sj4));
IkReal x3387=((cj5)*(r21));
IkReal x3388=((IkReal(0.707109999985348))*(cj2));
IkReal x3389=((IkReal(0.707103562373095))*(sj2));
IkReal x3390=((IkReal(0.707109999985348))*(sj2));
IkReal x3391=((cj4)*(r22));
IkReal x3392=((IkReal(0.707103562373095))*(cj2));
IkReal x3393=((r20)*(x3388));
IkReal x3394=((sj5)*(x3392));
IkReal x3395=((sj5)*(x3390));
if( IKabs(((gconst44)*(((((IkReal(-1.00000000000000))*(x3387)*(x3392)))+(((r20)*(x3395)))+(((r20)*(x3385)*(x3389)))+(((IkReal(-1.00000000000000))*(x3389)*(x3391)))+(((x3387)*(x3390)))+(((IkReal(-1.00000000000000))*(x3388)*(x3391)))+(((IkReal(-1.00000000000000))*(sj5)*(x3386)*(x3389)))+(((IkReal(-1.00000000000000))*(sj5)*(x3386)*(x3388)))+(((IkReal(-1.00000000000000))*(r20)*(x3394)))+(((x3385)*(x3393))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst44)*(((((x3386)*(x3394)))+(((IkReal(-1.00000000000000))*(sj5)*(x3393)))+(((x3391)*(x3392)))+(((IkReal(-1.00000000000000))*(r20)*(x3385)*(x3392)))+(((IkReal(-1.00000000000000))*(x3387)*(x3388)))+(((IkReal(-1.00000000000000))*(x3387)*(x3389)))+(((r20)*(x3385)*(x3390)))+(((IkReal(-1.00000000000000))*(x3386)*(x3395)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3389)))+(((IkReal(-1.00000000000000))*(x3390)*(x3391))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst44)*(((((IkReal(-1.00000000000000))*(x3387)*(x3392)))+(((r20)*(x3395)))+(((r20)*(x3385)*(x3389)))+(((IkReal(-1.00000000000000))*(x3389)*(x3391)))+(((x3387)*(x3390)))+(((IkReal(-1.00000000000000))*(x3388)*(x3391)))+(((IkReal(-1.00000000000000))*(sj5)*(x3386)*(x3389)))+(((IkReal(-1.00000000000000))*(sj5)*(x3386)*(x3388)))+(((IkReal(-1.00000000000000))*(r20)*(x3394)))+(((x3385)*(x3393)))))), ((gconst44)*(((((x3386)*(x3394)))+(((IkReal(-1.00000000000000))*(sj5)*(x3393)))+(((x3391)*(x3392)))+(((IkReal(-1.00000000000000))*(r20)*(x3385)*(x3392)))+(((IkReal(-1.00000000000000))*(x3387)*(x3388)))+(((IkReal(-1.00000000000000))*(x3387)*(x3389)))+(((r20)*(x3385)*(x3390)))+(((IkReal(-1.00000000000000))*(x3386)*(x3395)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3389)))+(((IkReal(-1.00000000000000))*(x3390)*(x3391)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3396=IKcos(j1);
IkReal x3397=IKsin(j1);
IkReal x3398=((IkReal(0.707109999985348))*(cj2));
IkReal x3399=((IkReal(1.00000000000000))*(cj0));
IkReal x3400=((IkReal(0.707109999985348))*(sj2));
IkReal x3401=((cj5)*(sj4));
IkReal x3402=((sj4)*(sj5));
IkReal x3403=((IkReal(1.00000000000000))*(sj0));
IkReal x3404=((sj5)*(x3403));
IkReal x3405=((IkReal(0.707103562373095))*(x3396));
IkReal x3406=((IkReal(0.707103562373095))*(x3397));
IkReal x3407=((cj2)*(x3405));
IkReal x3408=((x3397)*(x3398));
IkReal x3409=((sj2)*(x3406));
IkReal x3410=((x3396)*(x3400));
IkReal x3411=((sj2)*(x3405));
IkReal x3412=((cj2)*(x3406));
IkReal x3413=((x3396)*(x3398));
IkReal x3414=((x3397)*(x3400));
IkReal x3415=((x3412)+(x3413)+(x3411));
IkReal x3416=((x3410)+(x3409)+(x3408));
evalcond[0]=((((cj5)*(r21)))+(x3415)+(((r20)*(sj5)))+(((IkReal(-1.00000000000000))*(x3414))));
evalcond[1]=((((cj4)*(r22)))+(x3416)+(((r21)*(x3402)))+(((IkReal(-1.00000000000000))*(r20)*(x3401)))+(((IkReal(-1.00000000000000))*(x3407))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3403)))+(x3407)+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3399)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3399)))+(((IkReal(-1.00000000000000))*(r10)*(x3404)))+(((IkReal(-1.00000000000000))*(x3416))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x3399)*(x3402)))+(x3415)+(((IkReal(-1.00000000000000))*(r11)*(x3402)*(x3403)))+(((r10)*(sj0)*(x3401)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3403)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3399)))+(((cj0)*(r00)*(x3401)))+(((IkReal(-1.00000000000000))*(x3414))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3417=((IkReal(0.707109999985348))*(sj2));
IkReal x3418=((r22)*(sj4));
IkReal x3419=((cj5)*(r20));
IkReal x3420=((r21)*(sj5));
IkReal x3421=((IkReal(0.707109999985348))*(cj2));
IkReal x3422=((cj3)*(r22));
IkReal x3423=((cj3)*(sj4));
IkReal x3424=((IkReal(0.707103562373095))*(cj4)*(sj2));
IkReal x3425=((IkReal(0.707103562373095))*(x3423));
IkReal x3426=((IkReal(0.707103562373095))*(cj2)*(cj4));
if( IKabs(((gconst37)*(((((IkReal(0.707103562373095))*(cj2)*(x3418)))+(((IkReal(-1.00000000000000))*(x3420)*(x3426)))+(((IkReal(-1.00000000000000))*(cj4)*(x3417)*(x3419)))+(((cj4)*(x3421)*(x3422)))+(((x3420)*(x3421)*(x3423)))+(((x3422)*(x3424)))+(((IkReal(-1.00000000000000))*(x3419)*(x3421)*(x3423)))+(((IkReal(-1.00000000000000))*(x3417)*(x3418)))+(((sj2)*(x3420)*(x3425)))+(((cj4)*(x3417)*(x3420)))+(((x3419)*(x3426)))+(((IkReal(-1.00000000000000))*(sj2)*(x3419)*(x3425))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst37)*(((((IkReal(-1.00000000000000))*(x3417)*(x3419)*(x3423)))+(((IkReal(-1.00000000000000))*(x3420)*(x3424)))+(((x3418)*(x3421)))+(((cj2)*(x3419)*(x3425)))+(((IkReal(-1.00000000000000))*(cj4)*(x3420)*(x3421)))+(((x3417)*(x3420)*(x3423)))+(((IkReal(-1.00000000000000))*(x3422)*(x3426)))+(((IkReal(0.707103562373095))*(sj2)*(x3418)))+(((cj4)*(x3419)*(x3421)))+(((IkReal(-1.00000000000000))*(cj2)*(x3420)*(x3425)))+(((cj4)*(x3417)*(x3422)))+(((x3419)*(x3424))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst37)*(((((IkReal(0.707103562373095))*(cj2)*(x3418)))+(((IkReal(-1.00000000000000))*(x3420)*(x3426)))+(((IkReal(-1.00000000000000))*(cj4)*(x3417)*(x3419)))+(((cj4)*(x3421)*(x3422)))+(((x3420)*(x3421)*(x3423)))+(((x3422)*(x3424)))+(((IkReal(-1.00000000000000))*(x3419)*(x3421)*(x3423)))+(((IkReal(-1.00000000000000))*(x3417)*(x3418)))+(((sj2)*(x3420)*(x3425)))+(((cj4)*(x3417)*(x3420)))+(((x3419)*(x3426)))+(((IkReal(-1.00000000000000))*(sj2)*(x3419)*(x3425)))))), ((gconst37)*(((((IkReal(-1.00000000000000))*(x3417)*(x3419)*(x3423)))+(((IkReal(-1.00000000000000))*(x3420)*(x3424)))+(((x3418)*(x3421)))+(((cj2)*(x3419)*(x3425)))+(((IkReal(-1.00000000000000))*(cj4)*(x3420)*(x3421)))+(((x3417)*(x3420)*(x3423)))+(((IkReal(-1.00000000000000))*(x3422)*(x3426)))+(((IkReal(0.707103562373095))*(sj2)*(x3418)))+(((cj4)*(x3419)*(x3421)))+(((IkReal(-1.00000000000000))*(cj2)*(x3420)*(x3425)))+(((cj4)*(x3417)*(x3422)))+(((x3419)*(x3424)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x3427=IKcos(j1);
IkReal x3428=IKsin(j1);
IkReal x3429=((cj0)*(cj4));
IkReal x3430=((r01)*(sj5));
IkReal x3431=((IkReal(1.00000000000000))*(cj4));
IkReal x3432=((IkReal(1.00000000000000))*(r02));
IkReal x3433=((IkReal(0.707109999985348))*(sj3));
IkReal x3434=((IkReal(0.707103562373095))*(sj3));
IkReal x3435=((IkReal(1.00000000000000))*(sj4));
IkReal x3436=((cj5)*(r20));
IkReal x3437=((cj5)*(sj0));
IkReal x3438=((IkReal(1.00000000000000))*(cj0));
IkReal x3439=((r12)*(sj0));
IkReal x3440=((cj2)*(cj3));
IkReal x3441=((IkReal(0.707103562373095))*(cj3));
IkReal x3442=((r21)*(sj5));
IkReal x3443=((IkReal(0.707109999985348))*(cj3));
IkReal x3444=((IkReal(1.00000000000000))*(sj0)*(sj5));
IkReal x3445=((sj2)*(x3427));
IkReal x3446=((cj2)*(x3427));
IkReal x3447=((cj0)*(cj5)*(r00));
IkReal x3448=((IkReal(0.707103562373095))*(x3428));
IkReal x3449=((cj2)*(x3428));
IkReal x3450=((IkReal(0.707109999985348))*(sj2)*(x3428));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x3433)*(x3446)))+(((IkReal(-1.00000000000000))*(x3434)*(x3445)))+(((IkReal(-1.00000000000000))*(x3434)*(x3449)))+(((sj2)*(x3428)*(x3433)))+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((sj4)*(x3442)))+(((IkReal(0.707109999985348))*(x3449)))+(((IkReal(0.707109999985348))*(x3445)))+(((IkReal(-0.707103562373095))*(x3446)))+(((IkReal(-1.00000000000000))*(x3435)*(x3436)))+(((sj2)*(x3448))));
evalcond[2]=((((r22)*(sj4)))+(((IkReal(0.707109999985348))*(x3427)*(x3440)))+(((cj4)*(x3436)))+(((IkReal(-1.00000000000000))*(sj2)*(x3428)*(x3443)))+(((IkReal(-1.00000000000000))*(x3431)*(x3442)))+(((x3440)*(x3448)))+(((x3441)*(x3445))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3438)))+(((IkReal(-1.00000000000000))*(x3434)*(x3446)))+(((IkReal(-1.00000000000000))*(r10)*(x3444)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3438)))+(((x3433)*(x3445)))+(((x3433)*(x3449)))+(((sj2)*(x3428)*(x3434)))+(((IkReal(-1.00000000000000))*(r11)*(x3437))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3450)))+(((sj4)*(x3447)))+(((IkReal(-1.00000000000000))*(x3431)*(x3439)))+(((IkReal(0.707109999985348))*(x3446)))+(((IkReal(-1.00000000000000))*(cj0)*(x3430)*(x3435)))+(((r10)*(sj4)*(x3437)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj5)*(x3435)))+(((IkReal(0.707103562373095))*(x3445)))+(((cj2)*(x3448)))+(((IkReal(-1.00000000000000))*(x3429)*(x3432))));
evalcond[5]=((((x3429)*(x3430)))+(((IkReal(0.707103562373095))*(x3427)*(x3440)))+(((cj4)*(r11)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(cj0)*(sj4)*(x3432)))+(((IkReal(-1.00000000000000))*(sj2)*(x3428)*(x3441)))+(((IkReal(-1.00000000000000))*(x3435)*(x3439)))+(((IkReal(-1.00000000000000))*(r10)*(x3431)*(x3437)))+(((IkReal(-1.00000000000000))*(x3443)*(x3445)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x3429)))+(((IkReal(-0.707109999985348))*(x3428)*(x3440))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3451=((sj2)*(sj3));
IkReal x3452=((cj4)*(r22));
IkReal x3453=((r20)*(sj5));
IkReal x3454=((IkReal(0.707103562373095))*(cj2));
IkReal x3455=((IkReal(0.707109999985348))*(sj2));
IkReal x3456=((IkReal(0.707109999985348))*(cj2));
IkReal x3457=((cj5)*(r21));
IkReal x3458=((IkReal(0.707103562373095))*(sj2));
IkReal x3459=((r21)*(sj4)*(sj5));
IkReal x3460=((cj5)*(r20)*(sj4));
if( IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(x3453)*(x3454)))+(((IkReal(-1.00000000000000))*(sj3)*(x3456)*(x3460)))+(((x3453)*(x3455)))+(((IkReal(0.707103562373095))*(x3451)*(x3452)))+(((IkReal(0.707103562373095))*(x3451)*(x3459)))+(((x3455)*(x3457)))+(((IkReal(-1.00000000000000))*(x3454)*(x3457)))+(((IkReal(-0.707103562373095))*(x3451)*(x3460)))+(((sj3)*(x3456)*(x3459)))+(((sj3)*(x3452)*(x3456))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(x3453)*(x3458)))+(((IkReal(-1.00000000000000))*(x3453)*(x3456)))+(((IkReal(-1.00000000000000))*(sj3)*(x3452)*(x3454)))+(((IkReal(-1.00000000000000))*(x3457)*(x3458)))+(((IkReal(-1.00000000000000))*(sj3)*(x3454)*(x3459)))+(((IkReal(0.707109999985348))*(x3451)*(x3452)))+(((IkReal(0.707109999985348))*(x3451)*(x3459)))+(((sj3)*(x3454)*(x3460)))+(((IkReal(-0.707109999985348))*(x3451)*(x3460)))+(((IkReal(-1.00000000000000))*(x3456)*(x3457))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst36)*(((((IkReal(-1.00000000000000))*(x3453)*(x3454)))+(((IkReal(-1.00000000000000))*(sj3)*(x3456)*(x3460)))+(((x3453)*(x3455)))+(((IkReal(0.707103562373095))*(x3451)*(x3452)))+(((IkReal(0.707103562373095))*(x3451)*(x3459)))+(((x3455)*(x3457)))+(((IkReal(-1.00000000000000))*(x3454)*(x3457)))+(((IkReal(-0.707103562373095))*(x3451)*(x3460)))+(((sj3)*(x3456)*(x3459)))+(((sj3)*(x3452)*(x3456)))))), ((gconst36)*(((((IkReal(-1.00000000000000))*(x3453)*(x3458)))+(((IkReal(-1.00000000000000))*(x3453)*(x3456)))+(((IkReal(-1.00000000000000))*(sj3)*(x3452)*(x3454)))+(((IkReal(-1.00000000000000))*(x3457)*(x3458)))+(((IkReal(-1.00000000000000))*(sj3)*(x3454)*(x3459)))+(((IkReal(0.707109999985348))*(x3451)*(x3452)))+(((IkReal(0.707109999985348))*(x3451)*(x3459)))+(((sj3)*(x3454)*(x3460)))+(((IkReal(-0.707109999985348))*(x3451)*(x3460)))+(((IkReal(-1.00000000000000))*(x3456)*(x3457)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x3461=IKcos(j1);
IkReal x3462=IKsin(j1);
IkReal x3463=((cj0)*(cj4));
IkReal x3464=((r01)*(sj5));
IkReal x3465=((IkReal(1.00000000000000))*(cj4));
IkReal x3466=((IkReal(1.00000000000000))*(r02));
IkReal x3467=((IkReal(0.707109999985348))*(sj3));
IkReal x3468=((IkReal(0.707103562373095))*(sj3));
IkReal x3469=((IkReal(1.00000000000000))*(sj4));
IkReal x3470=((cj5)*(r20));
IkReal x3471=((cj5)*(sj0));
IkReal x3472=((IkReal(1.00000000000000))*(cj0));
IkReal x3473=((r12)*(sj0));
IkReal x3474=((cj2)*(cj3));
IkReal x3475=((IkReal(0.707103562373095))*(cj3));
IkReal x3476=((r21)*(sj5));
IkReal x3477=((IkReal(0.707109999985348))*(cj3));
IkReal x3478=((IkReal(1.00000000000000))*(sj0)*(sj5));
IkReal x3479=((sj2)*(x3461));
IkReal x3480=((cj2)*(x3461));
IkReal x3481=((cj0)*(cj5)*(r00));
IkReal x3482=((IkReal(0.707103562373095))*(x3462));
IkReal x3483=((cj2)*(x3462));
IkReal x3484=((IkReal(0.707109999985348))*(sj2)*(x3462));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x3467)*(x3480)))+(((IkReal(-1.00000000000000))*(x3468)*(x3479)))+(((IkReal(-1.00000000000000))*(x3468)*(x3483)))+(((sj2)*(x3462)*(x3467)))+(((r20)*(sj5))));
evalcond[1]=((((sj4)*(x3476)))+(((cj4)*(r22)))+(((sj2)*(x3482)))+(((IkReal(-1.00000000000000))*(x3469)*(x3470)))+(((IkReal(-0.707103562373095))*(x3480)))+(((IkReal(0.707109999985348))*(x3479)))+(((IkReal(0.707109999985348))*(x3483))));
evalcond[2]=((((x3475)*(x3479)))+(((x3474)*(x3482)))+(((IkReal(-1.00000000000000))*(x3465)*(x3476)))+(((cj4)*(x3470)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(sj2)*(x3462)*(x3477)))+(((IkReal(0.707109999985348))*(x3461)*(x3474))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x3471)))+(((IkReal(-1.00000000000000))*(r10)*(x3478)))+(((x3467)*(x3479)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3472)))+(((x3467)*(x3483)))+(((IkReal(-1.00000000000000))*(x3468)*(x3480)))+(((sj2)*(x3462)*(x3468)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3472))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3463)*(x3466)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj5)*(x3469)))+(((IkReal(-1.00000000000000))*(x3465)*(x3473)))+(((r10)*(sj4)*(x3471)))+(((IkReal(-1.00000000000000))*(cj0)*(x3464)*(x3469)))+(((IkReal(0.707103562373095))*(x3479)))+(((cj2)*(x3482)))+(((IkReal(-1.00000000000000))*(x3484)))+(((IkReal(0.707109999985348))*(x3480)))+(((sj4)*(x3481))));
evalcond[5]=((((x3463)*(x3464)))+(((IkReal(-1.00000000000000))*(r10)*(x3465)*(x3471)))+(((cj4)*(r11)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(x3469)*(x3473)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x3463)))+(((IkReal(-1.00000000000000))*(sj2)*(x3462)*(x3475)))+(((IkReal(0.707103562373095))*(x3461)*(x3474)))+(((IkReal(-1.00000000000000))*(cj0)*(sj4)*(x3466)))+(((IkReal(-1.00000000000000))*(x3477)*(x3479)))+(((IkReal(-0.707109999985348))*(x3462)*(x3474))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x3485=((cj3)*(sj4));
IkReal x3486=((IkReal(1.00000000000000))*(sj5));
IkReal x3487=((IkReal(1.00000000000000))*(cj3)*(cj4));
if( IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(r12)*(x3487)))+(((cj5)*(r10)*(x3485)))+(((IkReal(-1.00000000000000))*(r11)*(x3485)*(x3486))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(r02)*(x3487)))+(((IkReal(-1.00000000000000))*(r01)*(x3485)*(x3486)))+(((cj5)*(r00)*(x3485))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst0)*(((((IkReal(-1.00000000000000))*(r12)*(x3487)))+(((cj5)*(r10)*(x3485)))+(((IkReal(-1.00000000000000))*(r11)*(x3485)*(x3486)))))), ((gconst0)*(((((IkReal(-1.00000000000000))*(r02)*(x3487)))+(((IkReal(-1.00000000000000))*(r01)*(x3485)*(x3486)))+(((cj5)*(r00)*(x3485)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[3];
IkReal x3488=IKsin(j0);
IkReal x3489=IKcos(j0);
IkReal x3490=((cj5)*(r00));
IkReal x3491=((r01)*(sj5));
IkReal x3492=((cj5)*(r10));
IkReal x3493=((IkReal(1.00000000000000))*(r12));
IkReal x3494=((r11)*(sj5));
IkReal x3495=((cj4)*(x3488));
IkReal x3496=((sj4)*(x3488));
IkReal x3497=((sj4)*(x3489));
IkReal x3498=((cj4)*(x3489));
IkReal x3499=((IkReal(1.00000000000000))*(x3489));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(sj5)*(x3499)))+(cj3)+(((r00)*(sj5)*(x3488)))+(((cj5)*(r01)*(x3488)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3499))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3490)*(x3496)))+(((x3491)*(x3496)))+(((IkReal(-1.00000000000000))*(x3493)*(x3498)))+(((r02)*(x3495)))+(((IkReal(-1.00000000000000))*(x3494)*(x3497)))+(((x3492)*(x3497))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3492)*(x3498)))+(sj3)+(((x3494)*(x3498)))+(((IkReal(-1.00000000000000))*(x3493)*(x3497)))+(((r02)*(x3496)))+(((IkReal(-1.00000000000000))*(x3491)*(x3495)))+(((x3490)*(x3495))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst34;
gconst34=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst35;
gconst35=IKsign(cj3);
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x3500=((sj0)*(sj4));
IkReal x3501=((IkReal(1.00000000000000))*(r12));
IkReal x3502=((IkReal(1.00000000000000))*(cj0));
IkReal x3503=((cj4)*(cj5));
IkReal x3504=((r11)*(sj5));
IkReal x3505=((cj4)*(sj0));
IkReal x3506=((IkReal(1.00000000000000))*(sj5));
IkReal x3507=((cj0)*(cj4));
IkReal x3508=((r00)*(sj0));
IkReal x3509=((cj0)*(sj4));
IkReal x3510=((r01)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((cj5)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x3502)))+(((sj5)*(x3508)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3502))));
evalcond[2]=((IkReal(-0.00600000000000000))+(((IkReal(-1.00000000000000))*(cj4)*(npy)*(x3506)))+(((npx)*(x3503)))+(((npz)*(sj4))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj5)*(r00)*(x3500)))+(((r02)*(x3505)))+(((IkReal(-1.00000000000000))*(x3501)*(x3507)))+(((IkReal(-1.00000000000000))*(sj4)*(x3502)*(x3504)))+(((x3500)*(x3510)))+(((cj5)*(r10)*(x3509))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x3502)*(x3503)))+(((IkReal(-1.00000000000000))*(r01)*(x3505)*(x3506)))+(((r02)*(x3500)))+(((IkReal(-1.00000000000000))*(x3501)*(x3509)))+(((x3503)*(x3508)))+(((x3504)*(x3507))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj4)*(r21)*(x3506)))+(((r22)*(sj4)))+(((r20)*(x3503))));
evalcond[6]=((((x3507)*(x3510)))+(((IkReal(-1.00000000000000))*(r00)*(x3502)*(x3503)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x3503)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x3502)))+(((x3504)*(x3505)))+(((IkReal(-1.00000000000000))*(x3500)*(x3501))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3511=((cj4)*(npz));
IkReal x3512=((IkReal(2.94476514910275))*(cj5));
IkReal x3513=((npx)*(sj4));
IkReal x3514=((IkReal(2.34381456633434))*(sj5));
IkReal x3515=((npy)*(sj4));
IkReal x3516=((IkReal(2.94476514910275))*(sj5));
IkReal x3517=((IkReal(2.34381456633434))*(cj5));
if( IKabs(((IkReal(0.498689812223981))+(((IkReal(-1.00000000000000))*(x3514)*(x3515)))+(((npx)*(x3516)))+(((IkReal(-2.34381456633434))*(x3511)))+(((x3513)*(x3517)))+(((npy)*(x3512))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.844144773271807))+(((IkReal(-1.00000000000000))*(x3512)*(x3513)))+(((npx)*(x3514)))+(((IkReal(2.94476514910275))*(x3511)))+(((x3515)*(x3516)))+(((npy)*(x3517))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.498689812223981))+(((IkReal(-1.00000000000000))*(x3514)*(x3515)))+(((npx)*(x3516)))+(((IkReal(-2.34381456633434))*(x3511)))+(((x3513)*(x3517)))+(((npy)*(x3512)))))+IKsqr(((IkReal(-0.844144773271807))+(((IkReal(-1.00000000000000))*(x3512)*(x3513)))+(((npx)*(x3514)))+(((IkReal(2.94476514910275))*(x3511)))+(((x3515)*(x3516)))+(((npy)*(x3517)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((IkReal(0.498689812223981))+(((IkReal(-1.00000000000000))*(x3514)*(x3515)))+(((npx)*(x3516)))+(((IkReal(-2.34381456633434))*(x3511)))+(((x3513)*(x3517)))+(((npy)*(x3512)))), ((IkReal(-0.844144773271807))+(((IkReal(-1.00000000000000))*(x3512)*(x3513)))+(((npx)*(x3514)))+(((IkReal(2.94476514910275))*(x3511)))+(((x3515)*(x3516)))+(((npy)*(x3517)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x3518=IKcos(j2);
IkReal x3519=IKsin(j2);
evalcond[0]=((IkReal(-0.258003287011922))+(((IkReal(-0.207888640466058))*(x3518)))+(((IkReal(-1.00000000000000))*(cj5)*(npx)*(sj4)))+(((npy)*(sj4)*(sj5)))+(((cj4)*(npz)))+(((IkReal(0.165463933124939))*(x3519))));
evalcond[1]=((IkReal(-0.0360035672348961))+(((IkReal(-0.207888640466058))*(x3519)))+(((npx)*(sj5)))+(((cj5)*(npy)))+(((IkReal(-0.165463933124939))*(x3518))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
gconst47=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3520=((cj5)*(r11));
IkReal x3521=((r10)*(sj0));
IkReal x3522=((IkReal(0.707103562373095))*(cj2));
IkReal x3523=((r20)*(sj5));
IkReal x3524=((IkReal(0.707103562373095))*(sj2));
IkReal x3525=((IkReal(0.707109999985348))*(cj2));
IkReal x3526=((IkReal(0.707109999985348))*(sj2));
IkReal x3527=((cj5)*(r21));
IkReal x3528=((sj0)*(x3524));
IkReal x3529=((sj5)*(x3525));
IkReal x3530=((cj0)*(cj5)*(r01));
IkReal x3531=((cj0)*(r00)*(sj5));
if( IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x3522)*(x3527)))+(((IkReal(-1.00000000000000))*(x3522)*(x3523)))+(((IkReal(-1.00000000000000))*(sj0)*(x3520)*(x3525)))+(((IkReal(-1.00000000000000))*(sj5)*(x3521)*(x3524)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)*(x3529)))+(((IkReal(-1.00000000000000))*(x3525)*(x3530)))+(((x3526)*(x3527)))+(((IkReal(-1.00000000000000))*(x3524)*(x3530)))+(((IkReal(-1.00000000000000))*(x3524)*(x3531)))+(((x3523)*(x3526)))+(((IkReal(-1.00000000000000))*(x3521)*(x3529)))+(((IkReal(-1.00000000000000))*(x3520)*(x3528))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(x3525)*(x3527)))+(((IkReal(-1.00000000000000))*(sj0)*(x3520)*(x3526)))+(((IkReal(-1.00000000000000))*(x3524)*(x3527)))+(((IkReal(-1.00000000000000))*(sj5)*(x3521)*(x3526)))+(((IkReal(-1.00000000000000))*(x3526)*(x3531)))+(((IkReal(-1.00000000000000))*(x3526)*(x3530)))+(((sj5)*(x3521)*(x3522)))+(((sj0)*(x3520)*(x3522)))+(((IkReal(-1.00000000000000))*(x3523)*(x3524)))+(((IkReal(-1.00000000000000))*(x3523)*(x3525)))+(((x3522)*(x3530)))+(((x3522)*(x3531))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst47)*(((((IkReal(-1.00000000000000))*(x3522)*(x3527)))+(((IkReal(-1.00000000000000))*(x3522)*(x3523)))+(((IkReal(-1.00000000000000))*(sj0)*(x3520)*(x3525)))+(((IkReal(-1.00000000000000))*(sj5)*(x3521)*(x3524)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)*(x3529)))+(((IkReal(-1.00000000000000))*(x3525)*(x3530)))+(((x3526)*(x3527)))+(((IkReal(-1.00000000000000))*(x3524)*(x3530)))+(((IkReal(-1.00000000000000))*(x3524)*(x3531)))+(((x3523)*(x3526)))+(((IkReal(-1.00000000000000))*(x3521)*(x3529)))+(((IkReal(-1.00000000000000))*(x3520)*(x3528)))))), ((gconst47)*(((((IkReal(-1.00000000000000))*(x3525)*(x3527)))+(((IkReal(-1.00000000000000))*(sj0)*(x3520)*(x3526)))+(((IkReal(-1.00000000000000))*(x3524)*(x3527)))+(((IkReal(-1.00000000000000))*(sj5)*(x3521)*(x3526)))+(((IkReal(-1.00000000000000))*(x3526)*(x3531)))+(((IkReal(-1.00000000000000))*(x3526)*(x3530)))+(((sj5)*(x3521)*(x3522)))+(((sj0)*(x3520)*(x3522)))+(((IkReal(-1.00000000000000))*(x3523)*(x3524)))+(((IkReal(-1.00000000000000))*(x3523)*(x3525)))+(((x3522)*(x3530)))+(((x3522)*(x3531)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3532=IKsin(j1);
IkReal x3533=IKcos(j1);
IkReal x3534=((IkReal(0.707109999985348))*(cj2));
IkReal x3535=((IkReal(1.00000000000000))*(cj0));
IkReal x3536=((IkReal(0.707109999985348))*(sj2));
IkReal x3537=((cj5)*(sj4));
IkReal x3538=((sj4)*(sj5));
IkReal x3539=((IkReal(1.00000000000000))*(sj0));
IkReal x3540=((sj5)*(x3539));
IkReal x3541=((IkReal(0.707103562373095))*(x3533));
IkReal x3542=((IkReal(0.707103562373095))*(x3532));
IkReal x3543=((x3532)*(x3534));
IkReal x3544=((sj2)*(x3542));
IkReal x3545=((x3533)*(x3536));
IkReal x3546=((cj2)*(x3541));
IkReal x3547=((sj2)*(x3541));
IkReal x3548=((cj2)*(x3542));
IkReal x3549=((x3533)*(x3534));
IkReal x3550=((x3532)*(x3536));
IkReal x3551=((x3547)+(x3548)+(x3549));
IkReal x3552=((x3544)+(x3545)+(x3543));
evalcond[0]=((((cj5)*(r21)))+(x3550)+(((IkReal(-1.00000000000000))*(x3551)))+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(x3552)+(((r21)*(x3538)))+(((IkReal(-1.00000000000000))*(x3546)))+(((IkReal(-1.00000000000000))*(r20)*(x3537))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x3540)))+(x3552)+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3539)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3535)))+(((IkReal(-1.00000000000000))*(x3546)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3535))));
evalcond[3]=((x3551)+(((r10)*(sj0)*(x3537)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3539)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3535)))+(((cj0)*(r00)*(x3537)))+(((IkReal(-1.00000000000000))*(r01)*(x3535)*(x3538)))+(((IkReal(-1.00000000000000))*(x3550)))+(((IkReal(-1.00000000000000))*(r11)*(x3538)*(x3539))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3553=((cj5)*(sj4));
IkReal x3554=((r21)*(sj4));
IkReal x3555=((cj5)*(r21));
IkReal x3556=((IkReal(0.707109999985348))*(cj2));
IkReal x3557=((IkReal(0.707103562373095))*(sj2));
IkReal x3558=((IkReal(0.707109999985348))*(sj2));
IkReal x3559=((cj4)*(r22));
IkReal x3560=((IkReal(0.707103562373095))*(cj2));
IkReal x3561=((r20)*(x3556));
IkReal x3562=((sj5)*(x3560));
IkReal x3563=((sj5)*(x3558));
if( IKabs(((gconst46)*(((((x3556)*(x3559)))+(((IkReal(-1.00000000000000))*(x3555)*(x3560)))+(((IkReal(-1.00000000000000))*(r20)*(x3562)))+(((IkReal(-1.00000000000000))*(x3553)*(x3561)))+(((x3557)*(x3559)))+(((sj5)*(x3554)*(x3556)))+(((sj5)*(x3554)*(x3557)))+(((x3555)*(x3558)))+(((IkReal(-1.00000000000000))*(r20)*(x3553)*(x3557)))+(((r20)*(x3563))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((r20)*(x3553)*(x3560)))+(((IkReal(-1.00000000000000))*(x3555)*(x3556)))+(((IkReal(-1.00000000000000))*(x3555)*(x3557)))+(((IkReal(-1.00000000000000))*(sj5)*(x3561)))+(((IkReal(-1.00000000000000))*(x3554)*(x3562)))+(((IkReal(-1.00000000000000))*(x3559)*(x3560)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3557)))+(((x3558)*(x3559)))+(((x3554)*(x3563)))+(((IkReal(-1.00000000000000))*(r20)*(x3553)*(x3558))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst46)*(((((x3556)*(x3559)))+(((IkReal(-1.00000000000000))*(x3555)*(x3560)))+(((IkReal(-1.00000000000000))*(r20)*(x3562)))+(((IkReal(-1.00000000000000))*(x3553)*(x3561)))+(((x3557)*(x3559)))+(((sj5)*(x3554)*(x3556)))+(((sj5)*(x3554)*(x3557)))+(((x3555)*(x3558)))+(((IkReal(-1.00000000000000))*(r20)*(x3553)*(x3557)))+(((r20)*(x3563)))))), ((gconst46)*(((((r20)*(x3553)*(x3560)))+(((IkReal(-1.00000000000000))*(x3555)*(x3556)))+(((IkReal(-1.00000000000000))*(x3555)*(x3557)))+(((IkReal(-1.00000000000000))*(sj5)*(x3561)))+(((IkReal(-1.00000000000000))*(x3554)*(x3562)))+(((IkReal(-1.00000000000000))*(x3559)*(x3560)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3557)))+(((x3558)*(x3559)))+(((x3554)*(x3563)))+(((IkReal(-1.00000000000000))*(r20)*(x3553)*(x3558)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3564=IKsin(j1);
IkReal x3565=IKcos(j1);
IkReal x3566=((IkReal(0.707109999985348))*(cj2));
IkReal x3567=((IkReal(1.00000000000000))*(cj0));
IkReal x3568=((IkReal(0.707109999985348))*(sj2));
IkReal x3569=((cj5)*(sj4));
IkReal x3570=((sj4)*(sj5));
IkReal x3571=((IkReal(1.00000000000000))*(sj0));
IkReal x3572=((sj5)*(x3571));
IkReal x3573=((IkReal(0.707103562373095))*(x3565));
IkReal x3574=((IkReal(0.707103562373095))*(x3564));
IkReal x3575=((x3564)*(x3566));
IkReal x3576=((sj2)*(x3574));
IkReal x3577=((x3565)*(x3568));
IkReal x3578=((cj2)*(x3573));
IkReal x3579=((sj2)*(x3573));
IkReal x3580=((cj2)*(x3574));
IkReal x3581=((x3565)*(x3566));
IkReal x3582=((x3564)*(x3568));
IkReal x3583=((x3579)+(x3580)+(x3581));
IkReal x3584=((x3575)+(x3577)+(x3576));
evalcond[0]=((((cj5)*(r21)))+(x3582)+(((r20)*(sj5)))+(((IkReal(-1.00000000000000))*(x3583))));
evalcond[1]=((((r21)*(x3570)))+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x3569)))+(x3584)+(((IkReal(-1.00000000000000))*(x3578))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x3572)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3567)))+(x3584)+(((IkReal(-1.00000000000000))*(x3578)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3571)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3567))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x3567)*(x3570)))+(((cj0)*(r00)*(x3569)))+(x3583)+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3571)))+(((IkReal(-1.00000000000000))*(r11)*(x3570)*(x3571)))+(((r10)*(sj0)*(x3569)))+(((IkReal(-1.00000000000000))*(x3582)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3567))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x3585=((sj0)*(sj4));
IkReal x3586=((IkReal(1.00000000000000))*(r12));
IkReal x3587=((IkReal(1.00000000000000))*(cj0));
IkReal x3588=((cj4)*(cj5));
IkReal x3589=((r11)*(sj5));
IkReal x3590=((cj4)*(sj0));
IkReal x3591=((IkReal(1.00000000000000))*(sj5));
IkReal x3592=((cj0)*(cj4));
IkReal x3593=((r00)*(sj0));
IkReal x3594=((cj0)*(sj4));
IkReal x3595=((r01)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3587)))+(((cj5)*(r01)*(sj0)))+(((sj5)*(x3593)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x3587))));
evalcond[2]=((IkReal(-0.00600000000000000))+(((npz)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(npy)*(x3591)))+(((npx)*(x3588))));
evalcond[3]=((((x3585)*(x3595)))+(((r02)*(x3590)))+(((cj5)*(r10)*(x3594)))+(((IkReal(-1.00000000000000))*(x3586)*(x3592)))+(((IkReal(-1.00000000000000))*(sj4)*(x3587)*(x3589)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x3585))));
evalcond[4]=((IkReal(1.00000000000000))+(((r02)*(x3585)))+(((x3589)*(x3592)))+(((x3588)*(x3593)))+(((IkReal(-1.00000000000000))*(x3586)*(x3594)))+(((IkReal(-1.00000000000000))*(r01)*(x3590)*(x3591)))+(((IkReal(-1.00000000000000))*(r10)*(x3587)*(x3588))));
evalcond[5]=((((r22)*(sj4)))+(((r20)*(x3588)))+(((IkReal(-1.00000000000000))*(cj4)*(r21)*(x3591))));
evalcond[6]=((((x3589)*(x3590)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x3587)))+(((x3592)*(x3595)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x3588)))+(((IkReal(-1.00000000000000))*(x3585)*(x3586)))+(((IkReal(-1.00000000000000))*(r00)*(x3587)*(x3588))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3596=((cj4)*(npz));
IkReal x3597=((IkReal(2.94476514910275))*(cj5));
IkReal x3598=((npx)*(sj4));
IkReal x3599=((IkReal(2.34381456633434))*(sj5));
IkReal x3600=((npy)*(sj4));
IkReal x3601=((IkReal(2.94476514910275))*(sj5));
IkReal x3602=((IkReal(2.34381456633434))*(cj5));
if( IKabs(((IkReal(0.498689812223981))+(((x3598)*(x3602)))+(((npy)*(x3597)))+(((IkReal(-1.00000000000000))*(x3599)*(x3600)))+(((npx)*(x3601)))+(((IkReal(-2.34381456633434))*(x3596))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.844144773271807))+(((IkReal(2.94476514910275))*(x3596)))+(((x3600)*(x3601)))+(((npy)*(x3602)))+(((IkReal(-1.00000000000000))*(x3597)*(x3598)))+(((npx)*(x3599))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.498689812223981))+(((x3598)*(x3602)))+(((npy)*(x3597)))+(((IkReal(-1.00000000000000))*(x3599)*(x3600)))+(((npx)*(x3601)))+(((IkReal(-2.34381456633434))*(x3596)))))+IKsqr(((IkReal(-0.844144773271807))+(((IkReal(2.94476514910275))*(x3596)))+(((x3600)*(x3601)))+(((npy)*(x3602)))+(((IkReal(-1.00000000000000))*(x3597)*(x3598)))+(((npx)*(x3599)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((IkReal(0.498689812223981))+(((x3598)*(x3602)))+(((npy)*(x3597)))+(((IkReal(-1.00000000000000))*(x3599)*(x3600)))+(((npx)*(x3601)))+(((IkReal(-2.34381456633434))*(x3596)))), ((IkReal(-0.844144773271807))+(((IkReal(2.94476514910275))*(x3596)))+(((x3600)*(x3601)))+(((npy)*(x3602)))+(((IkReal(-1.00000000000000))*(x3597)*(x3598)))+(((npx)*(x3599)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x3603=IKcos(j2);
IkReal x3604=IKsin(j2);
evalcond[0]=((IkReal(-0.258003287011922))+(((IkReal(0.165463933124939))*(x3604)))+(((IkReal(-1.00000000000000))*(cj5)*(npx)*(sj4)))+(((npy)*(sj4)*(sj5)))+(((cj4)*(npz)))+(((IkReal(-0.207888640466058))*(x3603))));
evalcond[1]=((IkReal(-0.0360035672348961))+(((npx)*(sj5)))+(((cj5)*(npy)))+(((IkReal(-0.207888640466058))*(x3604)))+(((IkReal(-0.165463933124939))*(x3603))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst48;
gconst48=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst49;
gconst49=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3605=((cj5)*(r11));
IkReal x3606=((r10)*(sj0));
IkReal x3607=((IkReal(0.707103562373095))*(cj2));
IkReal x3608=((r20)*(sj5));
IkReal x3609=((IkReal(0.707103562373095))*(sj2));
IkReal x3610=((IkReal(0.707109999985348))*(cj2));
IkReal x3611=((cj0)*(r00));
IkReal x3612=((IkReal(0.707109999985348))*(sj2));
IkReal x3613=((cj5)*(r21));
IkReal x3614=((sj0)*(x3609));
IkReal x3615=((sj5)*(x3610));
IkReal x3616=((cj0)*(cj5)*(r01));
if( IKabs(((gconst49)*(((((IkReal(-1.00000000000000))*(x3605)*(x3614)))+(((x3612)*(x3613)))+(((IkReal(-1.00000000000000))*(x3611)*(x3615)))+(((x3608)*(x3612)))+(((IkReal(-1.00000000000000))*(x3607)*(x3608)))+(((IkReal(-1.00000000000000))*(x3607)*(x3613)))+(((IkReal(-1.00000000000000))*(sj0)*(x3605)*(x3610)))+(((IkReal(-1.00000000000000))*(sj5)*(x3609)*(x3611)))+(((IkReal(-1.00000000000000))*(x3609)*(x3616)))+(((IkReal(-1.00000000000000))*(x3610)*(x3616)))+(((IkReal(-1.00000000000000))*(sj5)*(x3606)*(x3609)))+(((IkReal(-1.00000000000000))*(x3606)*(x3615))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst49)*(((((sj0)*(x3605)*(x3607)))+(((IkReal(-1.00000000000000))*(x3612)*(x3616)))+(((x3607)*(x3616)))+(((IkReal(-1.00000000000000))*(sj0)*(x3605)*(x3612)))+(((IkReal(-1.00000000000000))*(x3608)*(x3609)))+(((IkReal(-1.00000000000000))*(sj5)*(x3611)*(x3612)))+(((IkReal(-1.00000000000000))*(x3609)*(x3613)))+(((IkReal(-1.00000000000000))*(x3608)*(x3610)))+(((IkReal(-1.00000000000000))*(x3610)*(x3613)))+(((sj5)*(x3607)*(x3611)))+(((sj5)*(x3606)*(x3607)))+(((IkReal(-1.00000000000000))*(sj5)*(x3606)*(x3612))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst49)*(((((IkReal(-1.00000000000000))*(x3605)*(x3614)))+(((x3612)*(x3613)))+(((IkReal(-1.00000000000000))*(x3611)*(x3615)))+(((x3608)*(x3612)))+(((IkReal(-1.00000000000000))*(x3607)*(x3608)))+(((IkReal(-1.00000000000000))*(x3607)*(x3613)))+(((IkReal(-1.00000000000000))*(sj0)*(x3605)*(x3610)))+(((IkReal(-1.00000000000000))*(sj5)*(x3609)*(x3611)))+(((IkReal(-1.00000000000000))*(x3609)*(x3616)))+(((IkReal(-1.00000000000000))*(x3610)*(x3616)))+(((IkReal(-1.00000000000000))*(sj5)*(x3606)*(x3609)))+(((IkReal(-1.00000000000000))*(x3606)*(x3615)))))), ((gconst49)*(((((sj0)*(x3605)*(x3607)))+(((IkReal(-1.00000000000000))*(x3612)*(x3616)))+(((x3607)*(x3616)))+(((IkReal(-1.00000000000000))*(sj0)*(x3605)*(x3612)))+(((IkReal(-1.00000000000000))*(x3608)*(x3609)))+(((IkReal(-1.00000000000000))*(sj5)*(x3611)*(x3612)))+(((IkReal(-1.00000000000000))*(x3609)*(x3613)))+(((IkReal(-1.00000000000000))*(x3608)*(x3610)))+(((IkReal(-1.00000000000000))*(x3610)*(x3613)))+(((sj5)*(x3607)*(x3611)))+(((sj5)*(x3606)*(x3607)))+(((IkReal(-1.00000000000000))*(sj5)*(x3606)*(x3612)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3617=IKsin(j1);
IkReal x3618=IKcos(j1);
IkReal x3619=((IkReal(0.707109999985348))*(cj2));
IkReal x3620=((IkReal(1.00000000000000))*(cj0));
IkReal x3621=((IkReal(0.707109999985348))*(sj2));
IkReal x3622=((cj5)*(sj4));
IkReal x3623=((sj4)*(sj5));
IkReal x3624=((IkReal(1.00000000000000))*(sj0));
IkReal x3625=((sj5)*(x3624));
IkReal x3626=((IkReal(0.707103562373095))*(x3618));
IkReal x3627=((IkReal(0.707103562373095))*(x3617));
IkReal x3628=((x3617)*(x3619));
IkReal x3629=((sj2)*(x3627));
IkReal x3630=((x3618)*(x3621));
IkReal x3631=((cj2)*(x3626));
IkReal x3632=((sj2)*(x3626));
IkReal x3633=((cj2)*(x3627));
IkReal x3634=((x3618)*(x3619));
IkReal x3635=((x3617)*(x3621));
IkReal x3636=((x3634)+(x3632)+(x3633));
IkReal x3637=((x3629)+(x3628)+(x3630));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x3636)))+(x3635)+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((r21)*(x3623)))+(((IkReal(-1.00000000000000))*(x3631)))+(x3637)+(((IkReal(-1.00000000000000))*(r20)*(x3622))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3620)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3620)))+(((IkReal(-1.00000000000000))*(x3631)))+(x3637)+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3624)))+(((IkReal(-1.00000000000000))*(r10)*(x3625))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3624)))+(((cj0)*(r00)*(x3622)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3620)))+(((IkReal(-1.00000000000000))*(r11)*(x3623)*(x3624)))+(((r10)*(sj0)*(x3622)))+(((IkReal(-1.00000000000000))*(x3635)))+(x3636)+(((IkReal(-1.00000000000000))*(r01)*(x3620)*(x3623))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3638=((cj5)*(sj4));
IkReal x3639=((r21)*(sj4));
IkReal x3640=((cj5)*(r21));
IkReal x3641=((IkReal(0.707109999985348))*(cj2));
IkReal x3642=((IkReal(0.707103562373095))*(sj2));
IkReal x3643=((IkReal(0.707109999985348))*(sj2));
IkReal x3644=((cj4)*(r22));
IkReal x3645=((IkReal(0.707103562373095))*(cj2));
IkReal x3646=((r20)*(x3641));
IkReal x3647=((sj5)*(x3645));
IkReal x3648=((sj5)*(x3643));
if( IKabs(((gconst48)*(((((x3641)*(x3644)))+(((IkReal(-1.00000000000000))*(x3640)*(x3645)))+(((sj5)*(x3639)*(x3642)))+(((sj5)*(x3639)*(x3641)))+(((r20)*(x3648)))+(((IkReal(-1.00000000000000))*(r20)*(x3647)))+(((IkReal(-1.00000000000000))*(r20)*(x3638)*(x3642)))+(((IkReal(-1.00000000000000))*(x3638)*(x3646)))+(((x3642)*(x3644)))+(((x3640)*(x3643))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((IkReal(-1.00000000000000))*(x3640)*(x3642)))+(((IkReal(-1.00000000000000))*(x3640)*(x3641)))+(((x3643)*(x3644)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3642)))+(((IkReal(-1.00000000000000))*(x3639)*(x3647)))+(((IkReal(-1.00000000000000))*(x3644)*(x3645)))+(((x3639)*(x3648)))+(((IkReal(-1.00000000000000))*(r20)*(x3638)*(x3643)))+(((IkReal(-1.00000000000000))*(sj5)*(x3646)))+(((r20)*(x3638)*(x3645))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst48)*(((((x3641)*(x3644)))+(((IkReal(-1.00000000000000))*(x3640)*(x3645)))+(((sj5)*(x3639)*(x3642)))+(((sj5)*(x3639)*(x3641)))+(((r20)*(x3648)))+(((IkReal(-1.00000000000000))*(r20)*(x3647)))+(((IkReal(-1.00000000000000))*(r20)*(x3638)*(x3642)))+(((IkReal(-1.00000000000000))*(x3638)*(x3646)))+(((x3642)*(x3644)))+(((x3640)*(x3643)))))), ((gconst48)*(((((IkReal(-1.00000000000000))*(x3640)*(x3642)))+(((IkReal(-1.00000000000000))*(x3640)*(x3641)))+(((x3643)*(x3644)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3642)))+(((IkReal(-1.00000000000000))*(x3639)*(x3647)))+(((IkReal(-1.00000000000000))*(x3644)*(x3645)))+(((x3639)*(x3648)))+(((IkReal(-1.00000000000000))*(r20)*(x3638)*(x3643)))+(((IkReal(-1.00000000000000))*(sj5)*(x3646)))+(((r20)*(x3638)*(x3645)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3649=IKsin(j1);
IkReal x3650=IKcos(j1);
IkReal x3651=((IkReal(0.707109999985348))*(cj2));
IkReal x3652=((IkReal(1.00000000000000))*(cj0));
IkReal x3653=((IkReal(0.707109999985348))*(sj2));
IkReal x3654=((cj5)*(sj4));
IkReal x3655=((sj4)*(sj5));
IkReal x3656=((IkReal(1.00000000000000))*(sj0));
IkReal x3657=((sj5)*(x3656));
IkReal x3658=((IkReal(0.707103562373095))*(x3650));
IkReal x3659=((IkReal(0.707103562373095))*(x3649));
IkReal x3660=((x3649)*(x3651));
IkReal x3661=((sj2)*(x3659));
IkReal x3662=((x3650)*(x3653));
IkReal x3663=((cj2)*(x3658));
IkReal x3664=((sj2)*(x3658));
IkReal x3665=((cj2)*(x3659));
IkReal x3666=((x3650)*(x3651));
IkReal x3667=((x3649)*(x3653));
IkReal x3668=((x3665)+(x3664)+(x3666));
IkReal x3669=((x3661)+(x3660)+(x3662));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x3668)))+(x3667)+(((r20)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x3654)))+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x3663)))+(((r21)*(x3655)))+(x3669));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3652)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3656)))+(((IkReal(-1.00000000000000))*(x3663)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3652)))+(((IkReal(-1.00000000000000))*(r10)*(x3657)))+(x3669));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x3652)*(x3655)))+(((IkReal(-1.00000000000000))*(x3667)))+(((IkReal(-1.00000000000000))*(r11)*(x3655)*(x3656)))+(x3668)+(((cj0)*(r00)*(x3654)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3652)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3656)))+(((r10)*(sj0)*(x3654))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x3670=((sj0)*(sj4));
IkReal x3671=((IkReal(1.00000000000000))*(r12));
IkReal x3672=((IkReal(1.00000000000000))*(cj0));
IkReal x3673=((cj4)*(cj5));
IkReal x3674=((r11)*(sj5));
IkReal x3675=((cj4)*(sj0));
IkReal x3676=((IkReal(1.00000000000000))*(sj5));
IkReal x3677=((cj0)*(cj4));
IkReal x3678=((r00)*(sj0));
IkReal x3679=((cj0)*(sj4));
IkReal x3680=((r01)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((cj5)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x3672)))+(((sj5)*(x3678)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3672))));
evalcond[2]=((IkReal(0.00600000000000000))+(((IkReal(-1.00000000000000))*(cj4)*(npy)*(x3676)))+(((npx)*(x3673)))+(((npz)*(sj4))));
evalcond[3]=((((cj5)*(r10)*(x3679)))+(((IkReal(-1.00000000000000))*(x3671)*(x3677)))+(((x3670)*(x3680)))+(((IkReal(-1.00000000000000))*(sj4)*(x3672)*(x3674)))+(((r02)*(x3675)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x3670))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x3671)*(x3679)))+(((IkReal(-1.00000000000000))*(r01)*(x3675)*(x3676)))+(((x3673)*(x3678)))+(((x3674)*(x3677)))+(((r02)*(x3670)))+(((IkReal(-1.00000000000000))*(r10)*(x3672)*(x3673))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj4)*(r21)*(x3676)))+(((r20)*(x3673)))+(((r22)*(sj4))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x3670)*(x3671)))+(((IkReal(-1.00000000000000))*(r00)*(x3672)*(x3673)))+(((x3674)*(x3675)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x3673)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x3672)))+(((x3677)*(x3680))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3681=((cj4)*(npz));
IkReal x3682=((IkReal(2.94476514910275))*(cj5));
IkReal x3683=((npx)*(sj4));
IkReal x3684=((IkReal(2.34381456633434))*(sj5));
IkReal x3685=((npy)*(sj4));
IkReal x3686=((IkReal(2.94476514910275))*(sj5));
IkReal x3687=((IkReal(2.34381456633434))*(cj5));
if( IKabs(((IkReal(0.534026994013214))+(((IkReal(-1.00000000000000))*(npx)*(x3686)))+(((IkReal(-1.00000000000000))*(npy)*(x3682)))+(((IkReal(-2.34381456633434))*(x3681)))+(((IkReal(-1.00000000000000))*(x3684)*(x3685)))+(((x3683)*(x3687))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.816018998475795))+(((IkReal(-1.00000000000000))*(npx)*(x3684)))+(((IkReal(-1.00000000000000))*(npy)*(x3687)))+(((x3685)*(x3686)))+(((IkReal(-1.00000000000000))*(x3682)*(x3683)))+(((IkReal(2.94476514910275))*(x3681))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.534026994013214))+(((IkReal(-1.00000000000000))*(npx)*(x3686)))+(((IkReal(-1.00000000000000))*(npy)*(x3682)))+(((IkReal(-2.34381456633434))*(x3681)))+(((IkReal(-1.00000000000000))*(x3684)*(x3685)))+(((x3683)*(x3687)))))+IKsqr(((IkReal(-0.816018998475795))+(((IkReal(-1.00000000000000))*(npx)*(x3684)))+(((IkReal(-1.00000000000000))*(npy)*(x3687)))+(((x3685)*(x3686)))+(((IkReal(-1.00000000000000))*(x3682)*(x3683)))+(((IkReal(2.94476514910275))*(x3681)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((IkReal(0.534026994013214))+(((IkReal(-1.00000000000000))*(npx)*(x3686)))+(((IkReal(-1.00000000000000))*(npy)*(x3682)))+(((IkReal(-2.34381456633434))*(x3681)))+(((IkReal(-1.00000000000000))*(x3684)*(x3685)))+(((x3683)*(x3687)))), ((IkReal(-0.816018998475795))+(((IkReal(-1.00000000000000))*(npx)*(x3684)))+(((IkReal(-1.00000000000000))*(npy)*(x3687)))+(((x3685)*(x3686)))+(((IkReal(-1.00000000000000))*(x3682)*(x3683)))+(((IkReal(2.94476514910275))*(x3681)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x3688=IKcos(j2);
IkReal x3689=IKsin(j2);
evalcond[0]=((IkReal(-0.258003287011922))+(((IkReal(-0.207888640466058))*(x3688)))+(((IkReal(-1.00000000000000))*(cj5)*(npx)*(sj4)))+(((npy)*(sj4)*(sj5)))+(((cj4)*(npz)))+(((IkReal(0.165463933124939))*(x3689))));
evalcond[1]=((IkReal(0.0240035672348961))+(((npx)*(sj5)))+(((IkReal(0.207888640466058))*(x3689)))+(((cj5)*(npy)))+(((IkReal(0.165463933124939))*(x3688))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
gconst51=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3690=((cj5)*(r11));
IkReal x3691=((r10)*(sj0));
IkReal x3692=((IkReal(0.707103562373095))*(cj2));
IkReal x3693=((r20)*(sj5));
IkReal x3694=((IkReal(0.707103562373095))*(sj2));
IkReal x3695=((IkReal(0.707109999985348))*(cj2));
IkReal x3696=((cj0)*(r00));
IkReal x3697=((IkReal(0.707109999985348))*(sj2));
IkReal x3698=((cj5)*(r21));
IkReal x3699=((sj0)*(x3694));
IkReal x3700=((sj5)*(x3695));
IkReal x3701=((cj0)*(cj5)*(r01));
if( IKabs(((gconst51)*(((((sj0)*(x3690)*(x3695)))+(((x3696)*(x3700)))+(((x3695)*(x3701)))+(((sj5)*(x3694)*(x3696)))+(((x3692)*(x3698)))+(((x3692)*(x3693)))+(((IkReal(-1.00000000000000))*(x3697)*(x3698)))+(((x3694)*(x3701)))+(((x3690)*(x3699)))+(((x3691)*(x3700)))+(((IkReal(-1.00000000000000))*(x3693)*(x3697)))+(((sj5)*(x3691)*(x3694))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((sj0)*(x3690)*(x3697)))+(((IkReal(-1.00000000000000))*(x3692)*(x3701)))+(((x3695)*(x3698)))+(((x3697)*(x3701)))+(((IkReal(-1.00000000000000))*(sj0)*(x3690)*(x3692)))+(((x3694)*(x3698)))+(((IkReal(-1.00000000000000))*(sj5)*(x3692)*(x3696)))+(((x3693)*(x3694)))+(((x3693)*(x3695)))+(((IkReal(-1.00000000000000))*(sj5)*(x3691)*(x3692)))+(((sj5)*(x3696)*(x3697)))+(((sj5)*(x3691)*(x3697))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst51)*(((((sj0)*(x3690)*(x3695)))+(((x3696)*(x3700)))+(((x3695)*(x3701)))+(((sj5)*(x3694)*(x3696)))+(((x3692)*(x3698)))+(((x3692)*(x3693)))+(((IkReal(-1.00000000000000))*(x3697)*(x3698)))+(((x3694)*(x3701)))+(((x3690)*(x3699)))+(((x3691)*(x3700)))+(((IkReal(-1.00000000000000))*(x3693)*(x3697)))+(((sj5)*(x3691)*(x3694)))))), ((gconst51)*(((((sj0)*(x3690)*(x3697)))+(((IkReal(-1.00000000000000))*(x3692)*(x3701)))+(((x3695)*(x3698)))+(((x3697)*(x3701)))+(((IkReal(-1.00000000000000))*(sj0)*(x3690)*(x3692)))+(((x3694)*(x3698)))+(((IkReal(-1.00000000000000))*(sj5)*(x3692)*(x3696)))+(((x3693)*(x3694)))+(((x3693)*(x3695)))+(((IkReal(-1.00000000000000))*(sj5)*(x3691)*(x3692)))+(((sj5)*(x3696)*(x3697)))+(((sj5)*(x3691)*(x3697)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3702=IKcos(j1);
IkReal x3703=IKsin(j1);
IkReal x3704=((IkReal(0.707109999985348))*(cj2));
IkReal x3705=((IkReal(1.00000000000000))*(cj0));
IkReal x3706=((IkReal(0.707109999985348))*(sj2));
IkReal x3707=((cj5)*(sj4));
IkReal x3708=((sj4)*(sj5));
IkReal x3709=((IkReal(1.00000000000000))*(sj0));
IkReal x3710=((sj5)*(x3709));
IkReal x3711=((IkReal(0.707103562373095))*(x3702));
IkReal x3712=((IkReal(0.707103562373095))*(x3703));
IkReal x3713=((cj2)*(x3711));
IkReal x3714=((x3703)*(x3704));
IkReal x3715=((sj2)*(x3712));
IkReal x3716=((x3702)*(x3706));
IkReal x3717=((sj2)*(x3711));
IkReal x3718=((cj2)*(x3712));
IkReal x3719=((x3702)*(x3704));
IkReal x3720=((x3703)*(x3706));
IkReal x3721=((x3717)+(x3719)+(x3718));
IkReal x3722=((x3715)+(x3714)+(x3716));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x3720)))+(x3721)+(((r20)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x3707)))+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x3713)))+(((r21)*(x3708)))+(x3722));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3722)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3705)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3705)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3709)))+(((IkReal(-1.00000000000000))*(r10)*(x3710)))+(x3713));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x3708)*(x3709)))+(((IkReal(-1.00000000000000))*(x3720)))+(((cj0)*(r00)*(x3707)))+(x3721)+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3705)))+(((IkReal(-1.00000000000000))*(r01)*(x3705)*(x3708)))+(((r10)*(sj0)*(x3707)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3709))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3723=((cj5)*(sj4));
IkReal x3724=((r21)*(sj4));
IkReal x3725=((cj5)*(r21));
IkReal x3726=((IkReal(0.707109999985348))*(cj2));
IkReal x3727=((IkReal(0.707103562373095))*(sj2));
IkReal x3728=((IkReal(0.707109999985348))*(sj2));
IkReal x3729=((cj4)*(r22));
IkReal x3730=((IkReal(0.707103562373095))*(cj2));
IkReal x3731=((r20)*(x3726));
IkReal x3732=((sj5)*(x3730));
IkReal x3733=((sj5)*(x3728));
if( IKabs(((gconst50)*(((((IkReal(-1.00000000000000))*(x3727)*(x3729)))+(((IkReal(-1.00000000000000))*(x3725)*(x3730)))+(((x3725)*(x3728)))+(((IkReal(-1.00000000000000))*(x3726)*(x3729)))+(((IkReal(-1.00000000000000))*(r20)*(x3732)))+(((x3723)*(x3731)))+(((IkReal(-1.00000000000000))*(sj5)*(x3724)*(x3727)))+(((IkReal(-1.00000000000000))*(sj5)*(x3724)*(x3726)))+(((r20)*(x3723)*(x3727)))+(((r20)*(x3733))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(((((x3729)*(x3730)))+(((IkReal(-1.00000000000000))*(r20)*(x3723)*(x3730)))+(((IkReal(-1.00000000000000))*(x3725)*(x3726)))+(((IkReal(-1.00000000000000))*(x3725)*(x3727)))+(((IkReal(-1.00000000000000))*(x3724)*(x3733)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3727)))+(((x3724)*(x3732)))+(((IkReal(-1.00000000000000))*(sj5)*(x3731)))+(((r20)*(x3723)*(x3728)))+(((IkReal(-1.00000000000000))*(x3728)*(x3729))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst50)*(((((IkReal(-1.00000000000000))*(x3727)*(x3729)))+(((IkReal(-1.00000000000000))*(x3725)*(x3730)))+(((x3725)*(x3728)))+(((IkReal(-1.00000000000000))*(x3726)*(x3729)))+(((IkReal(-1.00000000000000))*(r20)*(x3732)))+(((x3723)*(x3731)))+(((IkReal(-1.00000000000000))*(sj5)*(x3724)*(x3727)))+(((IkReal(-1.00000000000000))*(sj5)*(x3724)*(x3726)))+(((r20)*(x3723)*(x3727)))+(((r20)*(x3733)))))), ((gconst50)*(((((x3729)*(x3730)))+(((IkReal(-1.00000000000000))*(r20)*(x3723)*(x3730)))+(((IkReal(-1.00000000000000))*(x3725)*(x3726)))+(((IkReal(-1.00000000000000))*(x3725)*(x3727)))+(((IkReal(-1.00000000000000))*(x3724)*(x3733)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3727)))+(((x3724)*(x3732)))+(((IkReal(-1.00000000000000))*(sj5)*(x3731)))+(((r20)*(x3723)*(x3728)))+(((IkReal(-1.00000000000000))*(x3728)*(x3729)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3734=IKcos(j1);
IkReal x3735=IKsin(j1);
IkReal x3736=((IkReal(0.707109999985348))*(cj2));
IkReal x3737=((IkReal(1.00000000000000))*(cj0));
IkReal x3738=((IkReal(0.707109999985348))*(sj2));
IkReal x3739=((cj5)*(sj4));
IkReal x3740=((sj4)*(sj5));
IkReal x3741=((IkReal(1.00000000000000))*(sj0));
IkReal x3742=((sj5)*(x3741));
IkReal x3743=((IkReal(0.707103562373095))*(x3734));
IkReal x3744=((IkReal(0.707103562373095))*(x3735));
IkReal x3745=((cj2)*(x3743));
IkReal x3746=((x3735)*(x3736));
IkReal x3747=((sj2)*(x3744));
IkReal x3748=((x3734)*(x3738));
IkReal x3749=((sj2)*(x3743));
IkReal x3750=((cj2)*(x3744));
IkReal x3751=((x3734)*(x3736));
IkReal x3752=((x3735)*(x3738));
IkReal x3753=((x3749)+(x3751)+(x3750));
IkReal x3754=((x3748)+(x3746)+(x3747));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x3752)))+(x3753)+(((r20)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x3739)))+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x3745)))+(x3754)+(((r21)*(x3740))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3754)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3737)))+(x3745)+(((IkReal(-1.00000000000000))*(r10)*(x3742)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3741)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3737))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x3737)*(x3740)))+(((IkReal(-1.00000000000000))*(r11)*(x3740)*(x3741)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3737)))+(((r10)*(sj0)*(x3739)))+(((IkReal(-1.00000000000000))*(x3752)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3741)))+(x3753)+(((cj0)*(r00)*(x3739))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x3755=((sj0)*(sj4));
IkReal x3756=((IkReal(1.00000000000000))*(r12));
IkReal x3757=((IkReal(1.00000000000000))*(cj0));
IkReal x3758=((cj4)*(cj5));
IkReal x3759=((r11)*(sj5));
IkReal x3760=((cj4)*(sj0));
IkReal x3761=((IkReal(1.00000000000000))*(sj5));
IkReal x3762=((cj0)*(cj4));
IkReal x3763=((r00)*(sj0));
IkReal x3764=((cj0)*(sj4));
IkReal x3765=((r01)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((cj5)*(r01)*(sj0)))+(((sj5)*(x3763)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3757)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x3757))));
evalcond[2]=((IkReal(0.00600000000000000))+(((IkReal(-1.00000000000000))*(cj4)*(npy)*(x3761)))+(((npz)*(sj4)))+(((npx)*(x3758))));
evalcond[3]=((((r02)*(x3760)))+(((IkReal(-1.00000000000000))*(sj4)*(x3757)*(x3759)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x3755)))+(((cj5)*(r10)*(x3764)))+(((IkReal(-1.00000000000000))*(x3756)*(x3762)))+(((x3755)*(x3765))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x3757)*(x3758)))+(((x3758)*(x3763)))+(((r02)*(x3755)))+(((x3759)*(x3762)))+(((IkReal(-1.00000000000000))*(x3756)*(x3764)))+(((IkReal(-1.00000000000000))*(r01)*(x3760)*(x3761))));
evalcond[5]=((((r20)*(x3758)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(r21)*(x3761))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r02)*(sj4)*(x3757)))+(((IkReal(-1.00000000000000))*(x3755)*(x3756)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x3758)))+(((IkReal(-1.00000000000000))*(r00)*(x3757)*(x3758)))+(((x3759)*(x3760)))+(((x3762)*(x3765))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3766=((cj4)*(npz));
IkReal x3767=((IkReal(2.94476514910275))*(cj5));
IkReal x3768=((npx)*(sj4));
IkReal x3769=((IkReal(2.34381456633434))*(sj5));
IkReal x3770=((npy)*(sj4));
IkReal x3771=((IkReal(2.94476514910275))*(sj5));
IkReal x3772=((IkReal(2.34381456633434))*(cj5));
if( IKabs(((IkReal(0.534026994013214))+(((IkReal(-2.34381456633434))*(x3766)))+(((x3768)*(x3772)))+(((IkReal(-1.00000000000000))*(npy)*(x3767)))+(((IkReal(-1.00000000000000))*(npx)*(x3771)))+(((IkReal(-1.00000000000000))*(x3769)*(x3770))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.816018998475795))+(((IkReal(2.94476514910275))*(x3766)))+(((IkReal(-1.00000000000000))*(x3767)*(x3768)))+(((x3770)*(x3771)))+(((IkReal(-1.00000000000000))*(npy)*(x3772)))+(((IkReal(-1.00000000000000))*(npx)*(x3769))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.534026994013214))+(((IkReal(-2.34381456633434))*(x3766)))+(((x3768)*(x3772)))+(((IkReal(-1.00000000000000))*(npy)*(x3767)))+(((IkReal(-1.00000000000000))*(npx)*(x3771)))+(((IkReal(-1.00000000000000))*(x3769)*(x3770)))))+IKsqr(((IkReal(-0.816018998475795))+(((IkReal(2.94476514910275))*(x3766)))+(((IkReal(-1.00000000000000))*(x3767)*(x3768)))+(((x3770)*(x3771)))+(((IkReal(-1.00000000000000))*(npy)*(x3772)))+(((IkReal(-1.00000000000000))*(npx)*(x3769)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((IkReal(0.534026994013214))+(((IkReal(-2.34381456633434))*(x3766)))+(((x3768)*(x3772)))+(((IkReal(-1.00000000000000))*(npy)*(x3767)))+(((IkReal(-1.00000000000000))*(npx)*(x3771)))+(((IkReal(-1.00000000000000))*(x3769)*(x3770)))), ((IkReal(-0.816018998475795))+(((IkReal(2.94476514910275))*(x3766)))+(((IkReal(-1.00000000000000))*(x3767)*(x3768)))+(((x3770)*(x3771)))+(((IkReal(-1.00000000000000))*(npy)*(x3772)))+(((IkReal(-1.00000000000000))*(npx)*(x3769)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x3773=IKcos(j2);
IkReal x3774=IKsin(j2);
evalcond[0]=((IkReal(-0.258003287011922))+(((IkReal(-1.00000000000000))*(cj5)*(npx)*(sj4)))+(((IkReal(0.165463933124939))*(x3774)))+(((npy)*(sj4)*(sj5)))+(((cj4)*(npz)))+(((IkReal(-0.207888640466058))*(x3773))));
evalcond[1]=((IkReal(0.0240035672348961))+(((npx)*(sj5)))+(((IkReal(0.207888640466058))*(x3774)))+(((IkReal(0.165463933124939))*(x3773)))+(((cj5)*(npy))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst52;
gconst52=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst53;
gconst53=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3775=((cj5)*(r11));
IkReal x3776=((r10)*(sj0));
IkReal x3777=((IkReal(0.707103562373095))*(cj2));
IkReal x3778=((r20)*(sj5));
IkReal x3779=((IkReal(0.707103562373095))*(sj2));
IkReal x3780=((IkReal(0.707109999985348))*(cj2));
IkReal x3781=((cj0)*(r00));
IkReal x3782=((IkReal(0.707109999985348))*(sj2));
IkReal x3783=((cj5)*(r21));
IkReal x3784=((sj0)*(x3779));
IkReal x3785=((sj5)*(x3780));
IkReal x3786=((cj0)*(cj5)*(r01));
if( IKabs(((gconst53)*(((((x3777)*(x3778)))+(((IkReal(-1.00000000000000))*(x3778)*(x3782)))+(((IkReal(-1.00000000000000))*(x3782)*(x3783)))+(((x3775)*(x3784)))+(((x3779)*(x3786)))+(((sj5)*(x3779)*(x3781)))+(((x3776)*(x3785)))+(((sj0)*(x3775)*(x3780)))+(((x3777)*(x3783)))+(((sj5)*(x3776)*(x3779)))+(((x3781)*(x3785)))+(((x3780)*(x3786))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(sj5)*(x3776)*(x3777)))+(((IkReal(-1.00000000000000))*(x3777)*(x3786)))+(((sj5)*(x3781)*(x3782)))+(((x3782)*(x3786)))+(((x3778)*(x3779)))+(((x3778)*(x3780)))+(((x3779)*(x3783)))+(((sj0)*(x3775)*(x3782)))+(((IkReal(-1.00000000000000))*(sj0)*(x3775)*(x3777)))+(((IkReal(-1.00000000000000))*(sj5)*(x3777)*(x3781)))+(((x3780)*(x3783)))+(((sj5)*(x3776)*(x3782))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst53)*(((((x3777)*(x3778)))+(((IkReal(-1.00000000000000))*(x3778)*(x3782)))+(((IkReal(-1.00000000000000))*(x3782)*(x3783)))+(((x3775)*(x3784)))+(((x3779)*(x3786)))+(((sj5)*(x3779)*(x3781)))+(((x3776)*(x3785)))+(((sj0)*(x3775)*(x3780)))+(((x3777)*(x3783)))+(((sj5)*(x3776)*(x3779)))+(((x3781)*(x3785)))+(((x3780)*(x3786)))))), ((gconst53)*(((((IkReal(-1.00000000000000))*(sj5)*(x3776)*(x3777)))+(((IkReal(-1.00000000000000))*(x3777)*(x3786)))+(((sj5)*(x3781)*(x3782)))+(((x3782)*(x3786)))+(((x3778)*(x3779)))+(((x3778)*(x3780)))+(((x3779)*(x3783)))+(((sj0)*(x3775)*(x3782)))+(((IkReal(-1.00000000000000))*(sj0)*(x3775)*(x3777)))+(((IkReal(-1.00000000000000))*(sj5)*(x3777)*(x3781)))+(((x3780)*(x3783)))+(((sj5)*(x3776)*(x3782)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3787=IKcos(j1);
IkReal x3788=IKsin(j1);
IkReal x3789=((IkReal(0.707109999985348))*(cj2));
IkReal x3790=((IkReal(1.00000000000000))*(cj0));
IkReal x3791=((IkReal(0.707109999985348))*(sj2));
IkReal x3792=((cj5)*(sj4));
IkReal x3793=((sj4)*(sj5));
IkReal x3794=((IkReal(1.00000000000000))*(sj0));
IkReal x3795=((sj5)*(x3794));
IkReal x3796=((IkReal(0.707103562373095))*(x3787));
IkReal x3797=((IkReal(0.707103562373095))*(x3788));
IkReal x3798=((cj2)*(x3796));
IkReal x3799=((x3788)*(x3789));
IkReal x3800=((sj2)*(x3797));
IkReal x3801=((x3787)*(x3791));
IkReal x3802=((sj2)*(x3796));
IkReal x3803=((cj2)*(x3797));
IkReal x3804=((x3787)*(x3789));
IkReal x3805=((x3788)*(x3791));
IkReal x3806=((x3804)+(x3803)+(x3802));
IkReal x3807=((x3799)+(x3801)+(x3800));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x3805)))+(x3806)+(((r20)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3798)))+(((r21)*(x3793)))+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x3792)))+(x3807));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3807)))+(x3798)+(((IkReal(-1.00000000000000))*(r10)*(x3795)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3790)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3790)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3794))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3790)))+(((r10)*(sj0)*(x3792)))+(((IkReal(-1.00000000000000))*(x3805)))+(x3806)+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3794)))+(((cj0)*(r00)*(x3792)))+(((IkReal(-1.00000000000000))*(r11)*(x3793)*(x3794)))+(((IkReal(-1.00000000000000))*(r01)*(x3790)*(x3793))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3808=((cj5)*(sj4));
IkReal x3809=((r21)*(sj4));
IkReal x3810=((cj5)*(r21));
IkReal x3811=((IkReal(0.707109999985348))*(cj2));
IkReal x3812=((IkReal(0.707103562373095))*(sj2));
IkReal x3813=((IkReal(0.707109999985348))*(sj2));
IkReal x3814=((cj4)*(r22));
IkReal x3815=((IkReal(0.707103562373095))*(cj2));
IkReal x3816=((r20)*(x3811));
IkReal x3817=((sj5)*(x3815));
IkReal x3818=((sj5)*(x3813));
if( IKabs(((gconst52)*(((((x3810)*(x3813)))+(((r20)*(x3808)*(x3812)))+(((IkReal(-1.00000000000000))*(x3810)*(x3815)))+(((IkReal(-1.00000000000000))*(x3812)*(x3814)))+(((IkReal(-1.00000000000000))*(x3811)*(x3814)))+(((x3808)*(x3816)))+(((IkReal(-1.00000000000000))*(r20)*(x3817)))+(((r20)*(x3818)))+(((IkReal(-1.00000000000000))*(sj5)*(x3809)*(x3812)))+(((IkReal(-1.00000000000000))*(sj5)*(x3809)*(x3811))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(sj5)*(x3816)))+(((r20)*(x3808)*(x3813)))+(((IkReal(-1.00000000000000))*(x3810)*(x3811)))+(((IkReal(-1.00000000000000))*(x3810)*(x3812)))+(((IkReal(-1.00000000000000))*(x3813)*(x3814)))+(((IkReal(-1.00000000000000))*(x3809)*(x3818)))+(((x3809)*(x3817)))+(((x3814)*(x3815)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3812)))+(((IkReal(-1.00000000000000))*(r20)*(x3808)*(x3815))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst52)*(((((x3810)*(x3813)))+(((r20)*(x3808)*(x3812)))+(((IkReal(-1.00000000000000))*(x3810)*(x3815)))+(((IkReal(-1.00000000000000))*(x3812)*(x3814)))+(((IkReal(-1.00000000000000))*(x3811)*(x3814)))+(((x3808)*(x3816)))+(((IkReal(-1.00000000000000))*(r20)*(x3817)))+(((r20)*(x3818)))+(((IkReal(-1.00000000000000))*(sj5)*(x3809)*(x3812)))+(((IkReal(-1.00000000000000))*(sj5)*(x3809)*(x3811)))))), ((gconst52)*(((((IkReal(-1.00000000000000))*(sj5)*(x3816)))+(((r20)*(x3808)*(x3813)))+(((IkReal(-1.00000000000000))*(x3810)*(x3811)))+(((IkReal(-1.00000000000000))*(x3810)*(x3812)))+(((IkReal(-1.00000000000000))*(x3813)*(x3814)))+(((IkReal(-1.00000000000000))*(x3809)*(x3818)))+(((x3809)*(x3817)))+(((x3814)*(x3815)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3812)))+(((IkReal(-1.00000000000000))*(r20)*(x3808)*(x3815)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3819=IKcos(j1);
IkReal x3820=IKsin(j1);
IkReal x3821=((IkReal(0.707109999985348))*(cj2));
IkReal x3822=((IkReal(1.00000000000000))*(cj0));
IkReal x3823=((IkReal(0.707109999985348))*(sj2));
IkReal x3824=((cj5)*(sj4));
IkReal x3825=((sj4)*(sj5));
IkReal x3826=((IkReal(1.00000000000000))*(sj0));
IkReal x3827=((sj5)*(x3826));
IkReal x3828=((IkReal(0.707103562373095))*(x3819));
IkReal x3829=((IkReal(0.707103562373095))*(x3820));
IkReal x3830=((cj2)*(x3828));
IkReal x3831=((x3820)*(x3821));
IkReal x3832=((sj2)*(x3829));
IkReal x3833=((x3819)*(x3823));
IkReal x3834=((sj2)*(x3828));
IkReal x3835=((cj2)*(x3829));
IkReal x3836=((x3819)*(x3821));
IkReal x3837=((x3820)*(x3823));
IkReal x3838=((x3834)+(x3835)+(x3836));
IkReal x3839=((x3831)+(x3832)+(x3833));
evalcond[0]=((((cj5)*(r21)))+(x3838)+(((r20)*(sj5)))+(((IkReal(-1.00000000000000))*(x3837))));
evalcond[1]=((((cj4)*(r22)))+(x3839)+(((IkReal(-1.00000000000000))*(x3830)))+(((IkReal(-1.00000000000000))*(r20)*(x3824)))+(((r21)*(x3825))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3826)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3822)))+(x3830)+(((IkReal(-1.00000000000000))*(r10)*(x3827)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3822)))+(((IkReal(-1.00000000000000))*(x3839))));
evalcond[3]=((((cj0)*(r00)*(x3824)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3826)))+(((r10)*(sj0)*(x3824)))+(x3838)+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3822)))+(((IkReal(-1.00000000000000))*(r11)*(x3825)*(x3826)))+(((IkReal(-1.00000000000000))*(r01)*(x3822)*(x3825)))+(((IkReal(-1.00000000000000))*(x3837))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3840=((cj5)*(npx));
IkReal x3841=((IkReal(8.66210554726807e+23))*(cj4));
IkReal x3842=((npz)*(sj4));
IkReal x3843=((IkReal(6.89439331452234e+23))*(cj3));
IkReal x3844=((npy)*(sj5));
IkReal x3845=((IkReal(6.89439331452234e+23))*(cj4));
IkReal x3846=((IkReal(8.66210554726807e+23))*(cj3)*(sj4));
if( IKabs(((gconst35)*(((((IkReal(5.19726332836084e+21))*(sj3)))+(((IkReal(-8.66210554726807e+23))*(x3842)))+(((x3841)*(x3844)))+(((IkReal(-1.00000000000000))*(sj4)*(x3843)*(x3844)))+(((IkReal(-1.00000000000000))*(x3840)*(x3841)))+(((sj4)*(x3840)*(x3843)))+(((IkReal(-1.00000000000000))*(cj4)*(npz)*(x3843)))+(((IkReal(1.51888207091656e+23))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*(((((cj3)*(npz)*(x3841)))+(((IkReal(-2.44170809699545e+23))*(cj3)))+(((IkReal(-1.00000000000000))*(x3840)*(x3845)))+(((IkReal(-1.00000000000000))*(x3840)*(x3846)))+(((x3844)*(x3845)))+(((x3844)*(x3846)))+(((IkReal(4.13663598871341e+21))*(sj3)))+(((IkReal(-6.89439331452234e+23))*(x3842))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst35)*(((((IkReal(5.19726332836084e+21))*(sj3)))+(((IkReal(-8.66210554726807e+23))*(x3842)))+(((x3841)*(x3844)))+(((IkReal(-1.00000000000000))*(sj4)*(x3843)*(x3844)))+(((IkReal(-1.00000000000000))*(x3840)*(x3841)))+(((sj4)*(x3840)*(x3843)))+(((IkReal(-1.00000000000000))*(cj4)*(npz)*(x3843)))+(((IkReal(1.51888207091656e+23))*(cj3)))))), ((gconst35)*(((((cj3)*(npz)*(x3841)))+(((IkReal(-2.44170809699545e+23))*(cj3)))+(((IkReal(-1.00000000000000))*(x3840)*(x3845)))+(((IkReal(-1.00000000000000))*(x3840)*(x3846)))+(((x3844)*(x3845)))+(((x3844)*(x3846)))+(((IkReal(4.13663598871341e+21))*(sj3)))+(((IkReal(-6.89439331452234e+23))*(x3842)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[3];
IkReal x3847=IKsin(j2);
IkReal x3848=IKcos(j2);
IkReal x3849=((cj5)*(npx));
IkReal x3850=((npy)*(sj5));
IkReal x3851=((IkReal(0.165463933124939))*(x3848));
IkReal x3852=((IkReal(0.207888640466058))*(x3847));
evalcond[0]=((IkReal(-0.258003287011922))+(((IkReal(-1.00000000000000))*(sj4)*(x3849)))+(((IkReal(0.165463933124939))*(x3847)))+(((cj4)*(npz)))+(((sj4)*(x3850)))+(((IkReal(-0.207888640466058))*(x3848))));
evalcond[1]=((IkReal(-0.00600000000000000))+(((IkReal(-0.0300035672348961))*(sj3)))+(((npx)*(sj5)))+(((IkReal(-0.00600000000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(sj3)*(x3852)))+(((IkReal(-1.00000000000000))*(sj3)*(x3851)))+(((cj5)*(npy))));
evalcond[2]=((((npz)*(sj4)))+(((IkReal(-0.00600000000000000))*(sj3)))+(((cj3)*(x3852)))+(((cj3)*(x3851)))+(((IkReal(-1.00000000000000))*(cj4)*(x3850)))+(((cj4)*(x3849)))+(((IkReal(0.0300035672348961))*(cj3))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst36;
IkReal x3853=((IkReal(1.00000000000000))*(sj3));
gconst36=IKsign(((((IkReal(-1.00000000000000))*(x3853)*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*(x3853)*((sj2)*(sj2))))));
IkReal x3854=((IkReal(1.00000000000000))*(sj3));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x3854)*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*(x3854)*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst37;
IkReal x3855=((IkReal(1.00000000000000))*(cj3));
gconst37=IKsign(((((IkReal(-1.00000000000000))*(x3855)*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*(x3855)*((sj2)*(sj2))))));
IkReal x3856=((IkReal(1.00000000000000))*(cj3));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x3856)*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*(x3856)*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3857=((sj0)*(sj4));
IkReal x3858=((IkReal(1.00000000000000))*(r12));
IkReal x3859=((cj0)*(cj4));
IkReal x3860=((r01)*(sj5));
IkReal x3861=((IkReal(1.00000000000000))*(cj5));
IkReal x3862=((cj4)*(cj5));
IkReal x3863=((IkReal(1.00000000000000))*(cj0));
IkReal x3864=((cj4)*(sj0));
IkReal x3865=((r00)*(sj0));
IkReal x3866=((npy)*(sj5));
IkReal x3867=((IkReal(1.00000000000000))*(cj4));
IkReal x3868=((cj0)*(sj4));
IkReal x3869=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((sj5)*(x3865)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x3861)))+(((cj5)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x3863))));
evalcond[2]=((IkReal(-0.258003287011922))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((sj4)*(x3866)))+(((IkReal(0.165463933124939))*(sj2)))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x3861))));
evalcond[3]=((IkReal(-0.0360035672348961))+(((npx)*(sj5)))+(((IkReal(-0.165463933124939))*(cj2)))+(((cj5)*(npy)))+(((IkReal(-0.207888640466058))*(sj2))));
evalcond[4]=((IkReal(-0.00600000000000000))+(((IkReal(-1.00000000000000))*(x3866)*(x3867)))+(((npx)*(x3862)))+(((npz)*(sj4))));
evalcond[5]=((((r02)*(x3864)))+(((IkReal(-1.00000000000000))*(x3858)*(x3859)))+(((cj5)*(r10)*(x3868)))+(((IkReal(-1.00000000000000))*(sj4)*(x3863)*(x3869)))+(((x3857)*(x3860)))+(((IkReal(-1.00000000000000))*(r00)*(x3857)*(x3861))));
evalcond[6]=((IkReal(1.00000000000000))+(((r02)*(x3857)))+(((IkReal(-1.00000000000000))*(r10)*(x3859)*(x3861)))+(((IkReal(-1.00000000000000))*(x3858)*(x3868)))+(((IkReal(-1.00000000000000))*(x3860)*(x3864)))+(((x3859)*(x3869)))+(((x3862)*(x3865))));
evalcond[7]=((((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x3867)))+(((r20)*(x3862))));
evalcond[8]=((((x3864)*(x3869)))+(((IkReal(-1.00000000000000))*(x3857)*(x3858)))+(((IkReal(-1.00000000000000))*(r00)*(x3859)*(x3861)))+(((x3859)*(x3860)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x3863)))+(((IkReal(-1.00000000000000))*(r10)*(x3861)*(x3864))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst38;
gconst38=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst39;
gconst39=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3870=((cj5)*(r11));
IkReal x3871=((r10)*(sj0));
IkReal x3872=((IkReal(0.707103562373095))*(cj2));
IkReal x3873=((r20)*(sj5));
IkReal x3874=((IkReal(0.707103562373095))*(sj2));
IkReal x3875=((IkReal(0.707109999985348))*(cj2));
IkReal x3876=((cj0)*(r00));
IkReal x3877=((IkReal(0.707109999985348))*(sj2));
IkReal x3878=((cj5)*(r21));
IkReal x3879=((sj0)*(x3874));
IkReal x3880=((sj5)*(x3875));
IkReal x3881=((cj0)*(cj5)*(r01));
if( IKabs(((gconst39)*(((((IkReal(-1.00000000000000))*(sj5)*(x3874)*(x3876)))+(((IkReal(-1.00000000000000))*(x3870)*(x3879)))+(((x3873)*(x3877)))+(((IkReal(-1.00000000000000))*(sj5)*(x3871)*(x3874)))+(((IkReal(-1.00000000000000))*(sj0)*(x3870)*(x3875)))+(((IkReal(-1.00000000000000))*(x3874)*(x3881)))+(((x3877)*(x3878)))+(((IkReal(-1.00000000000000))*(x3875)*(x3881)))+(((IkReal(-1.00000000000000))*(x3872)*(x3878)))+(((IkReal(-1.00000000000000))*(x3872)*(x3873)))+(((IkReal(-1.00000000000000))*(x3876)*(x3880)))+(((IkReal(-1.00000000000000))*(x3871)*(x3880))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst39)*(((((x3872)*(x3881)))+(((IkReal(-1.00000000000000))*(x3873)*(x3875)))+(((IkReal(-1.00000000000000))*(x3873)*(x3874)))+(((sj0)*(x3870)*(x3872)))+(((IkReal(-1.00000000000000))*(sj5)*(x3876)*(x3877)))+(((IkReal(-1.00000000000000))*(x3874)*(x3878)))+(((IkReal(-1.00000000000000))*(x3877)*(x3881)))+(((IkReal(-1.00000000000000))*(x3875)*(x3878)))+(((IkReal(-1.00000000000000))*(sj5)*(x3871)*(x3877)))+(((IkReal(-1.00000000000000))*(sj0)*(x3870)*(x3877)))+(((sj5)*(x3871)*(x3872)))+(((sj5)*(x3872)*(x3876))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst39)*(((((IkReal(-1.00000000000000))*(sj5)*(x3874)*(x3876)))+(((IkReal(-1.00000000000000))*(x3870)*(x3879)))+(((x3873)*(x3877)))+(((IkReal(-1.00000000000000))*(sj5)*(x3871)*(x3874)))+(((IkReal(-1.00000000000000))*(sj0)*(x3870)*(x3875)))+(((IkReal(-1.00000000000000))*(x3874)*(x3881)))+(((x3877)*(x3878)))+(((IkReal(-1.00000000000000))*(x3875)*(x3881)))+(((IkReal(-1.00000000000000))*(x3872)*(x3878)))+(((IkReal(-1.00000000000000))*(x3872)*(x3873)))+(((IkReal(-1.00000000000000))*(x3876)*(x3880)))+(((IkReal(-1.00000000000000))*(x3871)*(x3880)))))), ((gconst39)*(((((x3872)*(x3881)))+(((IkReal(-1.00000000000000))*(x3873)*(x3875)))+(((IkReal(-1.00000000000000))*(x3873)*(x3874)))+(((sj0)*(x3870)*(x3872)))+(((IkReal(-1.00000000000000))*(sj5)*(x3876)*(x3877)))+(((IkReal(-1.00000000000000))*(x3874)*(x3878)))+(((IkReal(-1.00000000000000))*(x3877)*(x3881)))+(((IkReal(-1.00000000000000))*(x3875)*(x3878)))+(((IkReal(-1.00000000000000))*(sj5)*(x3871)*(x3877)))+(((IkReal(-1.00000000000000))*(sj0)*(x3870)*(x3877)))+(((sj5)*(x3871)*(x3872)))+(((sj5)*(x3872)*(x3876)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3882=IKsin(j1);
IkReal x3883=IKcos(j1);
IkReal x3884=((IkReal(0.707109999985348))*(cj2));
IkReal x3885=((IkReal(1.00000000000000))*(cj0));
IkReal x3886=((IkReal(0.707109999985348))*(sj2));
IkReal x3887=((cj5)*(sj4));
IkReal x3888=((sj4)*(sj5));
IkReal x3889=((IkReal(1.00000000000000))*(sj0));
IkReal x3890=((sj5)*(x3889));
IkReal x3891=((IkReal(0.707103562373095))*(x3883));
IkReal x3892=((IkReal(0.707103562373095))*(x3882));
IkReal x3893=((x3882)*(x3884));
IkReal x3894=((sj2)*(x3892));
IkReal x3895=((x3883)*(x3886));
IkReal x3896=((cj2)*(x3891));
IkReal x3897=((sj2)*(x3891));
IkReal x3898=((cj2)*(x3892));
IkReal x3899=((x3883)*(x3884));
IkReal x3900=((x3882)*(x3886));
IkReal x3901=((x3898)+(x3899)+(x3897));
IkReal x3902=((x3893)+(x3894)+(x3895));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3901)))+(((cj5)*(r21)))+(x3900)+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x3887)))+(((r21)*(x3888)))+(x3902)+(((IkReal(-1.00000000000000))*(x3896))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x3890)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3889)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3885)))+(x3902)+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3885)))+(((IkReal(-1.00000000000000))*(x3896))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3900)))+(((IkReal(-1.00000000000000))*(r11)*(x3888)*(x3889)))+(((cj0)*(r00)*(x3887)))+(((r10)*(sj0)*(x3887)))+(x3901)+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3885)))+(((IkReal(-1.00000000000000))*(r01)*(x3885)*(x3888)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3889))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3903=((cj5)*(sj4));
IkReal x3904=((r21)*(sj4));
IkReal x3905=((cj5)*(r21));
IkReal x3906=((IkReal(0.707109999985348))*(cj2));
IkReal x3907=((IkReal(0.707103562373095))*(sj2));
IkReal x3908=((IkReal(0.707109999985348))*(sj2));
IkReal x3909=((cj4)*(r22));
IkReal x3910=((IkReal(0.707103562373095))*(cj2));
IkReal x3911=((r20)*(x3906));
IkReal x3912=((sj5)*(x3910));
IkReal x3913=((sj5)*(x3908));
if( IKabs(((gconst38)*(((((IkReal(-1.00000000000000))*(x3905)*(x3910)))+(((IkReal(-1.00000000000000))*(r20)*(x3912)))+(((IkReal(-1.00000000000000))*(r20)*(x3903)*(x3907)))+(((IkReal(-1.00000000000000))*(x3903)*(x3911)))+(((x3906)*(x3909)))+(((x3905)*(x3908)))+(((x3907)*(x3909)))+(((r20)*(x3913)))+(((sj5)*(x3904)*(x3906)))+(((sj5)*(x3904)*(x3907))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst38)*(((((IkReal(-1.00000000000000))*(r20)*(x3903)*(x3908)))+(((IkReal(-1.00000000000000))*(x3904)*(x3912)))+(((x3904)*(x3913)))+(((IkReal(-1.00000000000000))*(x3905)*(x3906)))+(((IkReal(-1.00000000000000))*(x3905)*(x3907)))+(((IkReal(-1.00000000000000))*(x3909)*(x3910)))+(((IkReal(-1.00000000000000))*(sj5)*(x3911)))+(((x3908)*(x3909)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3907)))+(((r20)*(x3903)*(x3910))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst38)*(((((IkReal(-1.00000000000000))*(x3905)*(x3910)))+(((IkReal(-1.00000000000000))*(r20)*(x3912)))+(((IkReal(-1.00000000000000))*(r20)*(x3903)*(x3907)))+(((IkReal(-1.00000000000000))*(x3903)*(x3911)))+(((x3906)*(x3909)))+(((x3905)*(x3908)))+(((x3907)*(x3909)))+(((r20)*(x3913)))+(((sj5)*(x3904)*(x3906)))+(((sj5)*(x3904)*(x3907)))))), ((gconst38)*(((((IkReal(-1.00000000000000))*(r20)*(x3903)*(x3908)))+(((IkReal(-1.00000000000000))*(x3904)*(x3912)))+(((x3904)*(x3913)))+(((IkReal(-1.00000000000000))*(x3905)*(x3906)))+(((IkReal(-1.00000000000000))*(x3905)*(x3907)))+(((IkReal(-1.00000000000000))*(x3909)*(x3910)))+(((IkReal(-1.00000000000000))*(sj5)*(x3911)))+(((x3908)*(x3909)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3907)))+(((r20)*(x3903)*(x3910)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3914=IKsin(j1);
IkReal x3915=IKcos(j1);
IkReal x3916=((IkReal(0.707109999985348))*(cj2));
IkReal x3917=((IkReal(1.00000000000000))*(cj0));
IkReal x3918=((IkReal(0.707109999985348))*(sj2));
IkReal x3919=((cj5)*(sj4));
IkReal x3920=((sj4)*(sj5));
IkReal x3921=((IkReal(1.00000000000000))*(sj0));
IkReal x3922=((sj5)*(x3921));
IkReal x3923=((IkReal(0.707103562373095))*(x3915));
IkReal x3924=((IkReal(0.707103562373095))*(x3914));
IkReal x3925=((x3914)*(x3916));
IkReal x3926=((sj2)*(x3924));
IkReal x3927=((x3915)*(x3918));
IkReal x3928=((cj2)*(x3923));
IkReal x3929=((sj2)*(x3923));
IkReal x3930=((cj2)*(x3924));
IkReal x3931=((x3915)*(x3916));
IkReal x3932=((x3914)*(x3918));
IkReal x3933=((x3929)+(x3931)+(x3930));
IkReal x3934=((x3926)+(x3927)+(x3925));
evalcond[0]=((((cj5)*(r21)))+(x3932)+(((IkReal(-1.00000000000000))*(x3933)))+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x3928)))+(((r21)*(x3920)))+(x3934)+(((IkReal(-1.00000000000000))*(r20)*(x3919))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3921)))+(((IkReal(-1.00000000000000))*(r10)*(x3922)))+(((IkReal(-1.00000000000000))*(x3928)))+(x3934)+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3917)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3917))));
evalcond[3]=((((r10)*(sj0)*(x3919)))+(((IkReal(-1.00000000000000))*(r01)*(x3917)*(x3920)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3917)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3921)))+(x3933)+(((IkReal(-1.00000000000000))*(x3932)))+(((IkReal(-1.00000000000000))*(r11)*(x3920)*(x3921)))+(((cj0)*(r00)*(x3919))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3935=((sj0)*(sj4));
IkReal x3936=((IkReal(1.00000000000000))*(r12));
IkReal x3937=((cj0)*(cj4));
IkReal x3938=((r01)*(sj5));
IkReal x3939=((IkReal(1.00000000000000))*(cj5));
IkReal x3940=((cj4)*(cj5));
IkReal x3941=((IkReal(1.00000000000000))*(cj0));
IkReal x3942=((cj4)*(sj0));
IkReal x3943=((r00)*(sj0));
IkReal x3944=((npy)*(sj5));
IkReal x3945=((IkReal(1.00000000000000))*(cj4));
IkReal x3946=((cj0)*(sj4));
IkReal x3947=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj0)*(r11)*(x3939)))+(((cj5)*(r01)*(sj0)))+(((sj5)*(x3943)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x3941))));
evalcond[2]=((IkReal(-0.258003287011922))+(((sj4)*(x3944)))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x3939)))+(((IkReal(0.165463933124939))*(sj2))));
evalcond[3]=((IkReal(-0.0360035672348961))+(((npx)*(sj5)))+(((IkReal(-0.165463933124939))*(cj2)))+(((cj5)*(npy)))+(((IkReal(-0.207888640466058))*(sj2))));
evalcond[4]=((IkReal(-0.00600000000000000))+(((npz)*(sj4)))+(((npx)*(x3940)))+(((IkReal(-1.00000000000000))*(x3944)*(x3945))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3936)*(x3937)))+(((IkReal(-1.00000000000000))*(sj4)*(x3941)*(x3947)))+(((IkReal(-1.00000000000000))*(r00)*(x3935)*(x3939)))+(((x3935)*(x3938)))+(((cj5)*(r10)*(x3946)))+(((r02)*(x3942))));
evalcond[6]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x3938)*(x3942)))+(((x3940)*(x3943)))+(((x3937)*(x3947)))+(((IkReal(-1.00000000000000))*(r10)*(x3937)*(x3939)))+(((r02)*(x3935)))+(((IkReal(-1.00000000000000))*(x3936)*(x3946))));
evalcond[7]=((((r22)*(sj4)))+(((r20)*(x3940)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x3945))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r02)*(sj4)*(x3941)))+(((x3942)*(x3947)))+(((IkReal(-1.00000000000000))*(r00)*(x3937)*(x3939)))+(((x3937)*(x3938)))+(((IkReal(-1.00000000000000))*(r10)*(x3939)*(x3942)))+(((IkReal(-1.00000000000000))*(x3935)*(x3936))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst40;
gconst40=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst41;
gconst41=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3948=((cj5)*(r11));
IkReal x3949=((r10)*(sj0));
IkReal x3950=((IkReal(0.707103562373095))*(cj2));
IkReal x3951=((r20)*(sj5));
IkReal x3952=((IkReal(0.707103562373095))*(sj2));
IkReal x3953=((IkReal(0.707109999985348))*(cj2));
IkReal x3954=((cj0)*(r00));
IkReal x3955=((IkReal(0.707109999985348))*(sj2));
IkReal x3956=((cj5)*(r21));
IkReal x3957=((sj0)*(x3952));
IkReal x3958=((sj5)*(x3953));
IkReal x3959=((cj0)*(cj5)*(r01));
if( IKabs(((gconst41)*(((((IkReal(-1.00000000000000))*(x3954)*(x3958)))+(((IkReal(-1.00000000000000))*(x3953)*(x3959)))+(((IkReal(-1.00000000000000))*(x3948)*(x3957)))+(((IkReal(-1.00000000000000))*(x3949)*(x3958)))+(((IkReal(-1.00000000000000))*(sj0)*(x3948)*(x3953)))+(((IkReal(-1.00000000000000))*(x3950)*(x3951)))+(((IkReal(-1.00000000000000))*(x3950)*(x3956)))+(((IkReal(-1.00000000000000))*(sj5)*(x3949)*(x3952)))+(((IkReal(-1.00000000000000))*(x3952)*(x3959)))+(((IkReal(-1.00000000000000))*(sj5)*(x3952)*(x3954)))+(((x3951)*(x3955)))+(((x3955)*(x3956))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst41)*(((((IkReal(-1.00000000000000))*(x3955)*(x3959)))+(((IkReal(-1.00000000000000))*(x3953)*(x3956)))+(((IkReal(-1.00000000000000))*(sj0)*(x3948)*(x3955)))+(((sj5)*(x3949)*(x3950)))+(((IkReal(-1.00000000000000))*(sj5)*(x3949)*(x3955)))+(((x3950)*(x3959)))+(((IkReal(-1.00000000000000))*(x3952)*(x3956)))+(((sj0)*(x3948)*(x3950)))+(((IkReal(-1.00000000000000))*(x3951)*(x3953)))+(((IkReal(-1.00000000000000))*(x3951)*(x3952)))+(((IkReal(-1.00000000000000))*(sj5)*(x3954)*(x3955)))+(((sj5)*(x3950)*(x3954))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst41)*(((((IkReal(-1.00000000000000))*(x3954)*(x3958)))+(((IkReal(-1.00000000000000))*(x3953)*(x3959)))+(((IkReal(-1.00000000000000))*(x3948)*(x3957)))+(((IkReal(-1.00000000000000))*(x3949)*(x3958)))+(((IkReal(-1.00000000000000))*(sj0)*(x3948)*(x3953)))+(((IkReal(-1.00000000000000))*(x3950)*(x3951)))+(((IkReal(-1.00000000000000))*(x3950)*(x3956)))+(((IkReal(-1.00000000000000))*(sj5)*(x3949)*(x3952)))+(((IkReal(-1.00000000000000))*(x3952)*(x3959)))+(((IkReal(-1.00000000000000))*(sj5)*(x3952)*(x3954)))+(((x3951)*(x3955)))+(((x3955)*(x3956)))))), ((gconst41)*(((((IkReal(-1.00000000000000))*(x3955)*(x3959)))+(((IkReal(-1.00000000000000))*(x3953)*(x3956)))+(((IkReal(-1.00000000000000))*(sj0)*(x3948)*(x3955)))+(((sj5)*(x3949)*(x3950)))+(((IkReal(-1.00000000000000))*(sj5)*(x3949)*(x3955)))+(((x3950)*(x3959)))+(((IkReal(-1.00000000000000))*(x3952)*(x3956)))+(((sj0)*(x3948)*(x3950)))+(((IkReal(-1.00000000000000))*(x3951)*(x3953)))+(((IkReal(-1.00000000000000))*(x3951)*(x3952)))+(((IkReal(-1.00000000000000))*(sj5)*(x3954)*(x3955)))+(((sj5)*(x3950)*(x3954)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3960=IKsin(j1);
IkReal x3961=IKcos(j1);
IkReal x3962=((IkReal(0.707109999985348))*(cj2));
IkReal x3963=((IkReal(1.00000000000000))*(cj0));
IkReal x3964=((IkReal(0.707109999985348))*(sj2));
IkReal x3965=((cj5)*(sj4));
IkReal x3966=((sj4)*(sj5));
IkReal x3967=((IkReal(1.00000000000000))*(sj0));
IkReal x3968=((sj5)*(x3967));
IkReal x3969=((IkReal(0.707103562373095))*(x3961));
IkReal x3970=((IkReal(0.707103562373095))*(x3960));
IkReal x3971=((x3960)*(x3962));
IkReal x3972=((sj2)*(x3970));
IkReal x3973=((x3961)*(x3964));
IkReal x3974=((cj2)*(x3969));
IkReal x3975=((sj2)*(x3969));
IkReal x3976=((cj2)*(x3970));
IkReal x3977=((x3961)*(x3962));
IkReal x3978=((x3960)*(x3964));
IkReal x3979=((x3975)+(x3977)+(x3976));
IkReal x3980=((x3971)+(x3973)+(x3972));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3979)))+(((cj5)*(r21)))+(x3978)+(((r20)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3974)))+(((cj4)*(r22)))+(x3980)+(((r21)*(x3966)))+(((IkReal(-1.00000000000000))*(r20)*(x3965))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3974)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3967)))+(((IkReal(-1.00000000000000))*(r10)*(x3968)))+(x3980)+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3963)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3963))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3978)))+(((cj0)*(r00)*(x3965)))+(((IkReal(-1.00000000000000))*(r11)*(x3966)*(x3967)))+(((r10)*(sj0)*(x3965)))+(x3979)+(((IkReal(-1.00000000000000))*(r01)*(x3963)*(x3966)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3963)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3967))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3981=((cj5)*(sj4));
IkReal x3982=((r21)*(sj4));
IkReal x3983=((cj5)*(r21));
IkReal x3984=((IkReal(0.707109999985348))*(cj2));
IkReal x3985=((IkReal(0.707103562373095))*(sj2));
IkReal x3986=((IkReal(0.707109999985348))*(sj2));
IkReal x3987=((cj4)*(r22));
IkReal x3988=((IkReal(0.707103562373095))*(cj2));
IkReal x3989=((r20)*(x3984));
IkReal x3990=((sj5)*(x3988));
IkReal x3991=((sj5)*(x3986));
if( IKabs(((gconst40)*(((((IkReal(-1.00000000000000))*(r20)*(x3981)*(x3985)))+(((sj5)*(x3982)*(x3985)))+(((sj5)*(x3982)*(x3984)))+(((x3983)*(x3986)))+(((x3984)*(x3987)))+(((x3985)*(x3987)))+(((IkReal(-1.00000000000000))*(x3981)*(x3989)))+(((IkReal(-1.00000000000000))*(x3983)*(x3988)))+(((IkReal(-1.00000000000000))*(r20)*(x3990)))+(((r20)*(x3991))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst40)*(((((IkReal(-1.00000000000000))*(r20)*(x3981)*(x3986)))+(((IkReal(-1.00000000000000))*(sj5)*(x3989)))+(((x3986)*(x3987)))+(((IkReal(-1.00000000000000))*(x3987)*(x3988)))+(((IkReal(-1.00000000000000))*(x3983)*(x3984)))+(((IkReal(-1.00000000000000))*(x3983)*(x3985)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3985)))+(((r20)*(x3981)*(x3988)))+(((IkReal(-1.00000000000000))*(x3982)*(x3990)))+(((x3982)*(x3991))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst40)*(((((IkReal(-1.00000000000000))*(r20)*(x3981)*(x3985)))+(((sj5)*(x3982)*(x3985)))+(((sj5)*(x3982)*(x3984)))+(((x3983)*(x3986)))+(((x3984)*(x3987)))+(((x3985)*(x3987)))+(((IkReal(-1.00000000000000))*(x3981)*(x3989)))+(((IkReal(-1.00000000000000))*(x3983)*(x3988)))+(((IkReal(-1.00000000000000))*(r20)*(x3990)))+(((r20)*(x3991)))))), ((gconst40)*(((((IkReal(-1.00000000000000))*(r20)*(x3981)*(x3986)))+(((IkReal(-1.00000000000000))*(sj5)*(x3989)))+(((x3986)*(x3987)))+(((IkReal(-1.00000000000000))*(x3987)*(x3988)))+(((IkReal(-1.00000000000000))*(x3983)*(x3984)))+(((IkReal(-1.00000000000000))*(x3983)*(x3985)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x3985)))+(((r20)*(x3981)*(x3988)))+(((IkReal(-1.00000000000000))*(x3982)*(x3990)))+(((x3982)*(x3991)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3992=IKsin(j1);
IkReal x3993=IKcos(j1);
IkReal x3994=((IkReal(0.707109999985348))*(cj2));
IkReal x3995=((IkReal(1.00000000000000))*(cj0));
IkReal x3996=((IkReal(0.707109999985348))*(sj2));
IkReal x3997=((cj5)*(sj4));
IkReal x3998=((sj4)*(sj5));
IkReal x3999=((IkReal(1.00000000000000))*(sj0));
IkReal x4000=((sj5)*(x3999));
IkReal x4001=((IkReal(0.707103562373095))*(x3993));
IkReal x4002=((IkReal(0.707103562373095))*(x3992));
IkReal x4003=((x3992)*(x3994));
IkReal x4004=((sj2)*(x4002));
IkReal x4005=((x3993)*(x3996));
IkReal x4006=((cj2)*(x4001));
IkReal x4007=((sj2)*(x4001));
IkReal x4008=((cj2)*(x4002));
IkReal x4009=((x3993)*(x3994));
IkReal x4010=((x3992)*(x3996));
IkReal x4011=((x4008)+(x4009)+(x4007));
IkReal x4012=((x4003)+(x4004)+(x4005));
evalcond[0]=((((cj5)*(r21)))+(x4010)+(((IkReal(-1.00000000000000))*(x4011)))+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x4006)))+(((IkReal(-1.00000000000000))*(r20)*(x3997)))+(((r21)*(x3998)))+(x4012));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x4000)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x3999)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3995)))+(((IkReal(-1.00000000000000))*(x4006)))+(x4012)+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3995))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x3998)*(x3999)))+(((r10)*(sj0)*(x3997)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x3999)))+(((cj0)*(r00)*(x3997)))+(x4011)+(((IkReal(-1.00000000000000))*(x4010)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x3995)))+(((IkReal(-1.00000000000000))*(r01)*(x3995)*(x3998))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x4013=((sj0)*(sj4));
IkReal x4014=((IkReal(1.00000000000000))*(r12));
IkReal x4015=((cj0)*(cj4));
IkReal x4016=((r01)*(sj5));
IkReal x4017=((IkReal(1.00000000000000))*(cj5));
IkReal x4018=((cj4)*(cj5));
IkReal x4019=((IkReal(1.00000000000000))*(cj0));
IkReal x4020=((cj4)*(sj0));
IkReal x4021=((r00)*(sj0));
IkReal x4022=((npy)*(sj5));
IkReal x4023=((IkReal(1.00000000000000))*(cj4));
IkReal x4024=((cj0)*(sj4));
IkReal x4025=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((cj5)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x4019)))+(((sj5)*(x4021)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x4017))));
evalcond[2]=((IkReal(-0.258003287011922))+(((sj4)*(x4022)))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((IkReal(0.165463933124939))*(sj2)))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x4017))));
evalcond[3]=((IkReal(0.0240035672348961))+(((npx)*(sj5)))+(((IkReal(0.207888640466058))*(sj2)))+(((cj5)*(npy)))+(((IkReal(0.165463933124939))*(cj2))));
evalcond[4]=((IkReal(0.00600000000000000))+(((IkReal(-1.00000000000000))*(x4022)*(x4023)))+(((npz)*(sj4)))+(((npx)*(x4018))));
evalcond[5]=((((x4013)*(x4016)))+(((IkReal(-1.00000000000000))*(x4014)*(x4015)))+(((cj5)*(r10)*(x4024)))+(((IkReal(-1.00000000000000))*(r00)*(x4013)*(x4017)))+(((IkReal(-1.00000000000000))*(sj4)*(x4019)*(x4025)))+(((r02)*(x4020))));
evalcond[6]=((IkReal(-1.00000000000000))+(((r02)*(x4013)))+(((IkReal(-1.00000000000000))*(r10)*(x4015)*(x4017)))+(((x4018)*(x4021)))+(((IkReal(-1.00000000000000))*(x4014)*(x4024)))+(((IkReal(-1.00000000000000))*(x4016)*(x4020)))+(((x4015)*(x4025))));
evalcond[7]=((((r22)*(sj4)))+(((r20)*(x4018)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x4023))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r00)*(x4015)*(x4017)))+(((x4020)*(x4025)))+(((IkReal(-1.00000000000000))*(x4013)*(x4014)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x4019)))+(((IkReal(-1.00000000000000))*(r10)*(x4017)*(x4020)))+(((x4015)*(x4016))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst42;
gconst42=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst43;
gconst43=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4026=((cj5)*(r11));
IkReal x4027=((r10)*(sj0));
IkReal x4028=((IkReal(0.707103562373095))*(cj2));
IkReal x4029=((r20)*(sj5));
IkReal x4030=((IkReal(0.707103562373095))*(sj2));
IkReal x4031=((IkReal(0.707109999985348))*(cj2));
IkReal x4032=((cj0)*(r00));
IkReal x4033=((IkReal(0.707109999985348))*(sj2));
IkReal x4034=((cj5)*(r21));
IkReal x4035=((sj0)*(x4030));
IkReal x4036=((sj5)*(x4031));
IkReal x4037=((cj0)*(cj5)*(r01));
if( IKabs(((gconst43)*(((((x4032)*(x4036)))+(((x4028)*(x4034)))+(((x4026)*(x4035)))+(((x4027)*(x4036)))+(((sj5)*(x4027)*(x4030)))+(((sj0)*(x4026)*(x4031)))+(((x4028)*(x4029)))+(((sj5)*(x4030)*(x4032)))+(((IkReal(-1.00000000000000))*(x4029)*(x4033)))+(((IkReal(-1.00000000000000))*(x4033)*(x4034)))+(((x4031)*(x4037)))+(((x4030)*(x4037))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((sj5)*(x4032)*(x4033)))+(((IkReal(-1.00000000000000))*(sj5)*(x4028)*(x4032)))+(((x4029)*(x4031)))+(((x4029)*(x4030)))+(((x4033)*(x4037)))+(((sj5)*(x4027)*(x4033)))+(((sj0)*(x4026)*(x4033)))+(((IkReal(-1.00000000000000))*(sj0)*(x4026)*(x4028)))+(((IkReal(-1.00000000000000))*(x4028)*(x4037)))+(((IkReal(-1.00000000000000))*(sj5)*(x4027)*(x4028)))+(((x4031)*(x4034)))+(((x4030)*(x4034))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst43)*(((((x4032)*(x4036)))+(((x4028)*(x4034)))+(((x4026)*(x4035)))+(((x4027)*(x4036)))+(((sj5)*(x4027)*(x4030)))+(((sj0)*(x4026)*(x4031)))+(((x4028)*(x4029)))+(((sj5)*(x4030)*(x4032)))+(((IkReal(-1.00000000000000))*(x4029)*(x4033)))+(((IkReal(-1.00000000000000))*(x4033)*(x4034)))+(((x4031)*(x4037)))+(((x4030)*(x4037)))))), ((gconst43)*(((((sj5)*(x4032)*(x4033)))+(((IkReal(-1.00000000000000))*(sj5)*(x4028)*(x4032)))+(((x4029)*(x4031)))+(((x4029)*(x4030)))+(((x4033)*(x4037)))+(((sj5)*(x4027)*(x4033)))+(((sj0)*(x4026)*(x4033)))+(((IkReal(-1.00000000000000))*(sj0)*(x4026)*(x4028)))+(((IkReal(-1.00000000000000))*(x4028)*(x4037)))+(((IkReal(-1.00000000000000))*(sj5)*(x4027)*(x4028)))+(((x4031)*(x4034)))+(((x4030)*(x4034)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4038=IKcos(j1);
IkReal x4039=IKsin(j1);
IkReal x4040=((IkReal(0.707109999985348))*(cj2));
IkReal x4041=((IkReal(1.00000000000000))*(cj0));
IkReal x4042=((IkReal(0.707109999985348))*(sj2));
IkReal x4043=((cj5)*(sj4));
IkReal x4044=((sj4)*(sj5));
IkReal x4045=((IkReal(1.00000000000000))*(sj0));
IkReal x4046=((sj5)*(x4045));
IkReal x4047=((IkReal(0.707103562373095))*(x4038));
IkReal x4048=((IkReal(0.707103562373095))*(x4039));
IkReal x4049=((cj2)*(x4047));
IkReal x4050=((x4039)*(x4040));
IkReal x4051=((sj2)*(x4048));
IkReal x4052=((x4038)*(x4042));
IkReal x4053=((sj2)*(x4047));
IkReal x4054=((cj2)*(x4048));
IkReal x4055=((x4038)*(x4040));
IkReal x4056=((x4039)*(x4042));
IkReal x4057=((x4055)+(x4054)+(x4053));
IkReal x4058=((x4052)+(x4051)+(x4050));
evalcond[0]=((((cj5)*(r21)))+(x4057)+(((IkReal(-1.00000000000000))*(x4056)))+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((r21)*(x4044)))+(x4058)+(((IkReal(-1.00000000000000))*(x4049)))+(((IkReal(-1.00000000000000))*(r20)*(x4043))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x4045)))+(((IkReal(-1.00000000000000))*(r10)*(x4046)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4041)))+(x4049)+(((IkReal(-1.00000000000000))*(x4058)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x4041))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r02)*(x4041)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x4045)))+(((IkReal(-1.00000000000000))*(r01)*(x4041)*(x4044)))+(((IkReal(-1.00000000000000))*(r11)*(x4044)*(x4045)))+(x4057)+(((IkReal(-1.00000000000000))*(x4056)))+(((cj0)*(r00)*(x4043)))+(((r10)*(sj0)*(x4043))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4059=((cj5)*(sj4));
IkReal x4060=((r21)*(sj4));
IkReal x4061=((cj5)*(r21));
IkReal x4062=((IkReal(0.707109999985348))*(cj2));
IkReal x4063=((IkReal(0.707103562373095))*(sj2));
IkReal x4064=((IkReal(0.707109999985348))*(sj2));
IkReal x4065=((cj4)*(r22));
IkReal x4066=((IkReal(0.707103562373095))*(cj2));
IkReal x4067=((r20)*(x4062));
IkReal x4068=((sj5)*(x4066));
IkReal x4069=((sj5)*(x4064));
if( IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(r20)*(x4068)))+(((IkReal(-1.00000000000000))*(x4061)*(x4066)))+(((x4061)*(x4064)))+(((x4059)*(x4067)))+(((IkReal(-1.00000000000000))*(x4063)*(x4065)))+(((IkReal(-1.00000000000000))*(sj5)*(x4060)*(x4063)))+(((IkReal(-1.00000000000000))*(sj5)*(x4060)*(x4062)))+(((r20)*(x4059)*(x4063)))+(((r20)*(x4069)))+(((IkReal(-1.00000000000000))*(x4062)*(x4065))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(sj5)*(x4067)))+(((IkReal(-1.00000000000000))*(x4060)*(x4069)))+(((IkReal(-1.00000000000000))*(x4061)*(x4063)))+(((IkReal(-1.00000000000000))*(x4061)*(x4062)))+(((x4060)*(x4068)))+(((IkReal(-1.00000000000000))*(x4064)*(x4065)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x4063)))+(((IkReal(-1.00000000000000))*(r20)*(x4059)*(x4066)))+(((r20)*(x4059)*(x4064)))+(((x4065)*(x4066))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst42)*(((((IkReal(-1.00000000000000))*(r20)*(x4068)))+(((IkReal(-1.00000000000000))*(x4061)*(x4066)))+(((x4061)*(x4064)))+(((x4059)*(x4067)))+(((IkReal(-1.00000000000000))*(x4063)*(x4065)))+(((IkReal(-1.00000000000000))*(sj5)*(x4060)*(x4063)))+(((IkReal(-1.00000000000000))*(sj5)*(x4060)*(x4062)))+(((r20)*(x4059)*(x4063)))+(((r20)*(x4069)))+(((IkReal(-1.00000000000000))*(x4062)*(x4065)))))), ((gconst42)*(((((IkReal(-1.00000000000000))*(sj5)*(x4067)))+(((IkReal(-1.00000000000000))*(x4060)*(x4069)))+(((IkReal(-1.00000000000000))*(x4061)*(x4063)))+(((IkReal(-1.00000000000000))*(x4061)*(x4062)))+(((x4060)*(x4068)))+(((IkReal(-1.00000000000000))*(x4064)*(x4065)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x4063)))+(((IkReal(-1.00000000000000))*(r20)*(x4059)*(x4066)))+(((r20)*(x4059)*(x4064)))+(((x4065)*(x4066)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4070=IKcos(j1);
IkReal x4071=IKsin(j1);
IkReal x4072=((IkReal(0.707109999985348))*(cj2));
IkReal x4073=((IkReal(1.00000000000000))*(cj0));
IkReal x4074=((IkReal(0.707109999985348))*(sj2));
IkReal x4075=((cj5)*(sj4));
IkReal x4076=((sj4)*(sj5));
IkReal x4077=((IkReal(1.00000000000000))*(sj0));
IkReal x4078=((sj5)*(x4077));
IkReal x4079=((IkReal(0.707103562373095))*(x4070));
IkReal x4080=((IkReal(0.707103562373095))*(x4071));
IkReal x4081=((cj2)*(x4079));
IkReal x4082=((x4071)*(x4072));
IkReal x4083=((sj2)*(x4080));
IkReal x4084=((x4070)*(x4074));
IkReal x4085=((sj2)*(x4079));
IkReal x4086=((cj2)*(x4080));
IkReal x4087=((x4070)*(x4072));
IkReal x4088=((x4071)*(x4074));
IkReal x4089=((x4085)+(x4086)+(x4087));
IkReal x4090=((x4082)+(x4083)+(x4084));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x4088)))+(x4089)+(((r20)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x4075)))+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x4081)))+(x4090)+(((r21)*(x4076))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x4078)))+(((IkReal(-1.00000000000000))*(x4090)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4073)))+(x4081)+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x4073)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x4077))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x4073)*(x4076)))+(((r10)*(sj0)*(x4075)))+(((cj0)*(r00)*(x4075)))+(((IkReal(-1.00000000000000))*(x4088)))+(x4089)+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x4077)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x4073)))+(((IkReal(-1.00000000000000))*(r11)*(x4076)*(x4077))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x4091=((sj0)*(sj4));
IkReal x4092=((IkReal(1.00000000000000))*(r12));
IkReal x4093=((cj0)*(cj4));
IkReal x4094=((r01)*(sj5));
IkReal x4095=((IkReal(1.00000000000000))*(cj5));
IkReal x4096=((cj4)*(cj5));
IkReal x4097=((IkReal(1.00000000000000))*(cj0));
IkReal x4098=((cj4)*(sj0));
IkReal x4099=((r00)*(sj0));
IkReal x4100=((npy)*(sj5));
IkReal x4101=((IkReal(1.00000000000000))*(cj4));
IkReal x4102=((cj0)*(sj4));
IkReal x4103=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((cj5)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x4095)))+(((sj5)*(x4099)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x4097))));
evalcond[2]=((IkReal(-0.258003287011922))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x4095)))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((IkReal(0.165463933124939))*(sj2)))+(((sj4)*(x4100))));
evalcond[3]=((IkReal(0.0240035672348961))+(((npx)*(sj5)))+(((IkReal(0.207888640466058))*(sj2)))+(((cj5)*(npy)))+(((IkReal(0.165463933124939))*(cj2))));
evalcond[4]=((IkReal(0.00600000000000000))+(((npz)*(sj4)))+(((npx)*(x4096)))+(((IkReal(-1.00000000000000))*(x4100)*(x4101))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x4091)*(x4095)))+(((IkReal(-1.00000000000000))*(x4092)*(x4093)))+(((r02)*(x4098)))+(((x4091)*(x4094)))+(((IkReal(-1.00000000000000))*(sj4)*(x4097)*(x4103)))+(((cj5)*(r10)*(x4102))));
evalcond[6]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x4094)*(x4098)))+(((IkReal(-1.00000000000000))*(x4092)*(x4102)))+(((x4093)*(x4103)))+(((r02)*(x4091)))+(((x4096)*(x4099)))+(((IkReal(-1.00000000000000))*(r10)*(x4093)*(x4095))));
evalcond[7]=((((r20)*(x4096)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x4101))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r02)*(sj4)*(x4097)))+(((x4098)*(x4103)))+(((IkReal(-1.00000000000000))*(r00)*(x4093)*(x4095)))+(((IkReal(-1.00000000000000))*(x4091)*(x4092)))+(((x4093)*(x4094)))+(((IkReal(-1.00000000000000))*(r10)*(x4095)*(x4098))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst44;
gconst44=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst45;
gconst45=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4104=((cj5)*(r11));
IkReal x4105=((r10)*(sj0));
IkReal x4106=((IkReal(0.707103562373095))*(cj2));
IkReal x4107=((r20)*(sj5));
IkReal x4108=((IkReal(0.707103562373095))*(sj2));
IkReal x4109=((IkReal(0.707109999985348))*(cj2));
IkReal x4110=((cj0)*(r00));
IkReal x4111=((IkReal(0.707109999985348))*(sj2));
IkReal x4112=((cj5)*(r21));
IkReal x4113=((sj0)*(x4108));
IkReal x4114=((sj5)*(x4109));
IkReal x4115=((cj0)*(cj5)*(r01));
if( IKabs(((gconst45)*(((((sj5)*(x4108)*(x4110)))+(((x4108)*(x4115)))+(((IkReal(-1.00000000000000))*(x4111)*(x4112)))+(((sj0)*(x4104)*(x4109)))+(((x4106)*(x4112)))+(((x4109)*(x4115)))+(((sj5)*(x4105)*(x4108)))+(((x4105)*(x4114)))+(((x4104)*(x4113)))+(((x4106)*(x4107)))+(((x4110)*(x4114)))+(((IkReal(-1.00000000000000))*(x4107)*(x4111))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst45)*(((((x4108)*(x4112)))+(((IkReal(-1.00000000000000))*(sj5)*(x4105)*(x4106)))+(((sj0)*(x4104)*(x4111)))+(((x4109)*(x4112)))+(((IkReal(-1.00000000000000))*(sj5)*(x4106)*(x4110)))+(((sj5)*(x4105)*(x4111)))+(((IkReal(-1.00000000000000))*(sj0)*(x4104)*(x4106)))+(((sj5)*(x4110)*(x4111)))+(((x4111)*(x4115)))+(((x4107)*(x4109)))+(((x4107)*(x4108)))+(((IkReal(-1.00000000000000))*(x4106)*(x4115))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst45)*(((((sj5)*(x4108)*(x4110)))+(((x4108)*(x4115)))+(((IkReal(-1.00000000000000))*(x4111)*(x4112)))+(((sj0)*(x4104)*(x4109)))+(((x4106)*(x4112)))+(((x4109)*(x4115)))+(((sj5)*(x4105)*(x4108)))+(((x4105)*(x4114)))+(((x4104)*(x4113)))+(((x4106)*(x4107)))+(((x4110)*(x4114)))+(((IkReal(-1.00000000000000))*(x4107)*(x4111)))))), ((gconst45)*(((((x4108)*(x4112)))+(((IkReal(-1.00000000000000))*(sj5)*(x4105)*(x4106)))+(((sj0)*(x4104)*(x4111)))+(((x4109)*(x4112)))+(((IkReal(-1.00000000000000))*(sj5)*(x4106)*(x4110)))+(((sj5)*(x4105)*(x4111)))+(((IkReal(-1.00000000000000))*(sj0)*(x4104)*(x4106)))+(((sj5)*(x4110)*(x4111)))+(((x4111)*(x4115)))+(((x4107)*(x4109)))+(((x4107)*(x4108)))+(((IkReal(-1.00000000000000))*(x4106)*(x4115)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4116=IKcos(j1);
IkReal x4117=IKsin(j1);
IkReal x4118=((IkReal(0.707109999985348))*(cj2));
IkReal x4119=((IkReal(1.00000000000000))*(cj0));
IkReal x4120=((IkReal(0.707109999985348))*(sj2));
IkReal x4121=((cj5)*(sj4));
IkReal x4122=((sj4)*(sj5));
IkReal x4123=((IkReal(1.00000000000000))*(sj0));
IkReal x4124=((sj5)*(x4123));
IkReal x4125=((IkReal(0.707103562373095))*(x4116));
IkReal x4126=((IkReal(0.707103562373095))*(x4117));
IkReal x4127=((cj2)*(x4125));
IkReal x4128=((x4117)*(x4118));
IkReal x4129=((sj2)*(x4126));
IkReal x4130=((x4116)*(x4120));
IkReal x4131=((sj2)*(x4125));
IkReal x4132=((cj2)*(x4126));
IkReal x4133=((x4116)*(x4118));
IkReal x4134=((x4117)*(x4120));
IkReal x4135=((x4131)+(x4132)+(x4133));
IkReal x4136=((x4129)+(x4128)+(x4130));
evalcond[0]=((((cj5)*(r21)))+(x4135)+(((IkReal(-1.00000000000000))*(x4134)))+(((r20)*(sj5))));
evalcond[1]=((((r21)*(x4122)))+(((IkReal(-1.00000000000000))*(r20)*(x4121)))+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x4127)))+(x4136));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4119)))+(((IkReal(-1.00000000000000))*(r10)*(x4124)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x4123)))+(x4127)+(((IkReal(-1.00000000000000))*(x4136)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x4119))));
evalcond[3]=((((r10)*(sj0)*(x4121)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x4119)))+(x4135)+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x4123)))+(((IkReal(-1.00000000000000))*(x4134)))+(((IkReal(-1.00000000000000))*(r11)*(x4122)*(x4123)))+(((cj0)*(r00)*(x4121)))+(((IkReal(-1.00000000000000))*(r01)*(x4119)*(x4122))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4137=((cj5)*(sj4));
IkReal x4138=((r21)*(sj4));
IkReal x4139=((cj5)*(r21));
IkReal x4140=((IkReal(0.707109999985348))*(cj2));
IkReal x4141=((IkReal(0.707103562373095))*(sj2));
IkReal x4142=((IkReal(0.707109999985348))*(sj2));
IkReal x4143=((cj4)*(r22));
IkReal x4144=((IkReal(0.707103562373095))*(cj2));
IkReal x4145=((r20)*(x4140));
IkReal x4146=((sj5)*(x4144));
IkReal x4147=((sj5)*(x4142));
if( IKabs(((gconst44)*(((((x4137)*(x4145)))+(((x4139)*(x4142)))+(((IkReal(-1.00000000000000))*(x4141)*(x4143)))+(((IkReal(-1.00000000000000))*(x4140)*(x4143)))+(((IkReal(-1.00000000000000))*(sj5)*(x4138)*(x4140)))+(((IkReal(-1.00000000000000))*(sj5)*(x4138)*(x4141)))+(((IkReal(-1.00000000000000))*(x4139)*(x4144)))+(((r20)*(x4147)))+(((r20)*(x4137)*(x4141)))+(((IkReal(-1.00000000000000))*(r20)*(x4146))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst44)*(((((x4143)*(x4144)))+(((IkReal(-1.00000000000000))*(x4142)*(x4143)))+(((x4138)*(x4146)))+(((IkReal(-1.00000000000000))*(x4139)*(x4140)))+(((IkReal(-1.00000000000000))*(x4139)*(x4141)))+(((IkReal(-1.00000000000000))*(x4138)*(x4147)))+(((IkReal(-1.00000000000000))*(sj5)*(x4145)))+(((IkReal(-1.00000000000000))*(r20)*(x4137)*(x4144)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x4141)))+(((r20)*(x4137)*(x4142))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst44)*(((((x4137)*(x4145)))+(((x4139)*(x4142)))+(((IkReal(-1.00000000000000))*(x4141)*(x4143)))+(((IkReal(-1.00000000000000))*(x4140)*(x4143)))+(((IkReal(-1.00000000000000))*(sj5)*(x4138)*(x4140)))+(((IkReal(-1.00000000000000))*(sj5)*(x4138)*(x4141)))+(((IkReal(-1.00000000000000))*(x4139)*(x4144)))+(((r20)*(x4147)))+(((r20)*(x4137)*(x4141)))+(((IkReal(-1.00000000000000))*(r20)*(x4146)))))), ((gconst44)*(((((x4143)*(x4144)))+(((IkReal(-1.00000000000000))*(x4142)*(x4143)))+(((x4138)*(x4146)))+(((IkReal(-1.00000000000000))*(x4139)*(x4140)))+(((IkReal(-1.00000000000000))*(x4139)*(x4141)))+(((IkReal(-1.00000000000000))*(x4138)*(x4147)))+(((IkReal(-1.00000000000000))*(sj5)*(x4145)))+(((IkReal(-1.00000000000000))*(r20)*(x4137)*(x4144)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x4141)))+(((r20)*(x4137)*(x4142)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4148=IKcos(j1);
IkReal x4149=IKsin(j1);
IkReal x4150=((IkReal(0.707109999985348))*(cj2));
IkReal x4151=((IkReal(1.00000000000000))*(cj0));
IkReal x4152=((IkReal(0.707109999985348))*(sj2));
IkReal x4153=((cj5)*(sj4));
IkReal x4154=((sj4)*(sj5));
IkReal x4155=((IkReal(1.00000000000000))*(sj0));
IkReal x4156=((sj5)*(x4155));
IkReal x4157=((IkReal(0.707103562373095))*(x4148));
IkReal x4158=((IkReal(0.707103562373095))*(x4149));
IkReal x4159=((cj2)*(x4157));
IkReal x4160=((x4149)*(x4150));
IkReal x4161=((sj2)*(x4158));
IkReal x4162=((x4148)*(x4152));
IkReal x4163=((sj2)*(x4157));
IkReal x4164=((cj2)*(x4158));
IkReal x4165=((x4148)*(x4150));
IkReal x4166=((x4149)*(x4152));
IkReal x4167=((x4165)+(x4164)+(x4163));
IkReal x4168=((x4162)+(x4161)+(x4160));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x4166)))+(x4167)+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((r21)*(x4154)))+(x4168)+(((IkReal(-1.00000000000000))*(r20)*(x4153)))+(((IkReal(-1.00000000000000))*(x4159))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x4155)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x4151)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4151)))+(((IkReal(-1.00000000000000))*(x4168)))+(x4159)+(((IkReal(-1.00000000000000))*(r10)*(x4156))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x4151)*(x4154)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x4155)))+(((IkReal(-1.00000000000000))*(x4166)))+(x4167)+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x4151)))+(((cj0)*(r00)*(x4153)))+(((IkReal(-1.00000000000000))*(r11)*(x4154)*(x4155)))+(((r10)*(sj0)*(x4153))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4169=((IkReal(0.707109999985348))*(sj2));
IkReal x4170=((r22)*(sj4));
IkReal x4171=((cj5)*(r20));
IkReal x4172=((r21)*(sj5));
IkReal x4173=((IkReal(0.707109999985348))*(cj2));
IkReal x4174=((cj3)*(r22));
IkReal x4175=((cj3)*(sj4));
IkReal x4176=((IkReal(0.707103562373095))*(cj4)*(sj2));
IkReal x4177=((IkReal(0.707103562373095))*(x4175));
IkReal x4178=((IkReal(0.707103562373095))*(cj2)*(cj4));
if( IKabs(((gconst37)*(((((sj2)*(x4172)*(x4177)))+(((IkReal(-1.00000000000000))*(sj2)*(x4171)*(x4177)))+(((IkReal(0.707103562373095))*(cj2)*(x4170)))+(((IkReal(-1.00000000000000))*(x4171)*(x4173)*(x4175)))+(((IkReal(-1.00000000000000))*(x4172)*(x4178)))+(((IkReal(-1.00000000000000))*(cj4)*(x4169)*(x4171)))+(((cj4)*(x4169)*(x4172)))+(((IkReal(-1.00000000000000))*(x4169)*(x4170)))+(((x4171)*(x4178)))+(((x4172)*(x4173)*(x4175)))+(((cj4)*(x4173)*(x4174)))+(((x4174)*(x4176))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst37)*(((((x4169)*(x4172)*(x4175)))+(((IkReal(-1.00000000000000))*(cj4)*(x4172)*(x4173)))+(((IkReal(-1.00000000000000))*(x4169)*(x4171)*(x4175)))+(((IkReal(-1.00000000000000))*(x4172)*(x4176)))+(((IkReal(0.707103562373095))*(sj2)*(x4170)))+(((x4170)*(x4173)))+(((cj4)*(x4169)*(x4174)))+(((IkReal(-1.00000000000000))*(x4174)*(x4178)))+(((x4171)*(x4176)))+(((cj4)*(x4171)*(x4173)))+(((cj2)*(x4171)*(x4177)))+(((IkReal(-1.00000000000000))*(cj2)*(x4172)*(x4177))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst37)*(((((sj2)*(x4172)*(x4177)))+(((IkReal(-1.00000000000000))*(sj2)*(x4171)*(x4177)))+(((IkReal(0.707103562373095))*(cj2)*(x4170)))+(((IkReal(-1.00000000000000))*(x4171)*(x4173)*(x4175)))+(((IkReal(-1.00000000000000))*(x4172)*(x4178)))+(((IkReal(-1.00000000000000))*(cj4)*(x4169)*(x4171)))+(((cj4)*(x4169)*(x4172)))+(((IkReal(-1.00000000000000))*(x4169)*(x4170)))+(((x4171)*(x4178)))+(((x4172)*(x4173)*(x4175)))+(((cj4)*(x4173)*(x4174)))+(((x4174)*(x4176)))))), ((gconst37)*(((((x4169)*(x4172)*(x4175)))+(((IkReal(-1.00000000000000))*(cj4)*(x4172)*(x4173)))+(((IkReal(-1.00000000000000))*(x4169)*(x4171)*(x4175)))+(((IkReal(-1.00000000000000))*(x4172)*(x4176)))+(((IkReal(0.707103562373095))*(sj2)*(x4170)))+(((x4170)*(x4173)))+(((cj4)*(x4169)*(x4174)))+(((IkReal(-1.00000000000000))*(x4174)*(x4178)))+(((x4171)*(x4176)))+(((cj4)*(x4171)*(x4173)))+(((cj2)*(x4171)*(x4177)))+(((IkReal(-1.00000000000000))*(cj2)*(x4172)*(x4177)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x4179=IKcos(j1);
IkReal x4180=IKsin(j1);
IkReal x4181=((cj0)*(cj4));
IkReal x4182=((r01)*(sj5));
IkReal x4183=((IkReal(1.00000000000000))*(cj4));
IkReal x4184=((IkReal(1.00000000000000))*(r02));
IkReal x4185=((IkReal(0.707109999985348))*(sj3));
IkReal x4186=((IkReal(0.707103562373095))*(sj3));
IkReal x4187=((IkReal(1.00000000000000))*(sj4));
IkReal x4188=((cj5)*(r20));
IkReal x4189=((cj5)*(sj0));
IkReal x4190=((IkReal(1.00000000000000))*(cj0));
IkReal x4191=((r12)*(sj0));
IkReal x4192=((cj2)*(cj3));
IkReal x4193=((IkReal(0.707103562373095))*(cj3));
IkReal x4194=((r21)*(sj5));
IkReal x4195=((IkReal(0.707109999985348))*(cj3));
IkReal x4196=((IkReal(1.00000000000000))*(sj0)*(sj5));
IkReal x4197=((sj2)*(x4179));
IkReal x4198=((cj2)*(x4179));
IkReal x4199=((cj0)*(cj5)*(r00));
IkReal x4200=((IkReal(0.707103562373095))*(x4180));
IkReal x4201=((cj2)*(x4180));
IkReal x4202=((IkReal(0.707109999985348))*(sj2)*(x4180));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x4186)*(x4201)))+(((IkReal(-1.00000000000000))*(x4186)*(x4197)))+(((IkReal(-1.00000000000000))*(x4185)*(x4198)))+(((r20)*(sj5)))+(((sj2)*(x4180)*(x4185))));
evalcond[1]=((((cj4)*(r22)))+(((sj2)*(x4200)))+(((IkReal(-1.00000000000000))*(x4187)*(x4188)))+(((IkReal(-0.707103562373095))*(x4198)))+(((IkReal(0.707109999985348))*(x4201)))+(((sj4)*(x4194)))+(((IkReal(0.707109999985348))*(x4197))));
evalcond[2]=((((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(sj2)*(x4180)*(x4195)))+(((x4193)*(x4197)))+(((x4192)*(x4200)))+(((cj4)*(x4188)))+(((IkReal(0.707109999985348))*(x4179)*(x4192)))+(((IkReal(-1.00000000000000))*(x4183)*(x4194))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x4189)))+(((IkReal(-1.00000000000000))*(x4186)*(x4198)))+(((x4185)*(x4201)))+(((x4185)*(x4197)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x4190)))+(((IkReal(-1.00000000000000))*(r10)*(x4196)))+(((sj2)*(x4180)*(x4186)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4190))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x4181)*(x4184)))+(((IkReal(-1.00000000000000))*(cj0)*(x4182)*(x4187)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj5)*(x4187)))+(((IkReal(-1.00000000000000))*(x4202)))+(((IkReal(0.707103562373095))*(x4197)))+(((cj2)*(x4200)))+(((sj4)*(x4199)))+(((r10)*(sj4)*(x4189)))+(((IkReal(-1.00000000000000))*(x4183)*(x4191)))+(((IkReal(0.707109999985348))*(x4198))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj0)*(sj4)*(x4184)))+(((IkReal(-1.00000000000000))*(x4195)*(x4197)))+(((IkReal(-1.00000000000000))*(r10)*(x4183)*(x4189)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x4181)))+(((IkReal(-1.00000000000000))*(sj2)*(x4180)*(x4193)))+(((cj4)*(r11)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(x4187)*(x4191)))+(((IkReal(0.707103562373095))*(x4179)*(x4192)))+(((IkReal(-0.707109999985348))*(x4180)*(x4192)))+(((x4181)*(x4182))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4203=((sj2)*(sj3));
IkReal x4204=((cj4)*(r22));
IkReal x4205=((r20)*(sj5));
IkReal x4206=((IkReal(0.707103562373095))*(cj2));
IkReal x4207=((IkReal(0.707109999985348))*(sj2));
IkReal x4208=((IkReal(0.707109999985348))*(cj2));
IkReal x4209=((cj5)*(r21));
IkReal x4210=((IkReal(0.707103562373095))*(sj2));
IkReal x4211=((r21)*(sj4)*(sj5));
IkReal x4212=((cj5)*(r20)*(sj4));
if( IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(x4206)*(x4209)))+(((x4205)*(x4207)))+(((IkReal(0.707103562373095))*(x4203)*(x4204)))+(((IkReal(0.707103562373095))*(x4203)*(x4211)))+(((sj3)*(x4208)*(x4211)))+(((IkReal(-1.00000000000000))*(sj3)*(x4208)*(x4212)))+(((x4207)*(x4209)))+(((sj3)*(x4204)*(x4208)))+(((IkReal(-0.707103562373095))*(x4203)*(x4212)))+(((IkReal(-1.00000000000000))*(x4205)*(x4206))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((sj3)*(x4206)*(x4212)))+(((IkReal(-1.00000000000000))*(x4208)*(x4209)))+(((IkReal(-0.707109999985348))*(x4203)*(x4212)))+(((IkReal(-1.00000000000000))*(x4205)*(x4210)))+(((IkReal(0.707109999985348))*(x4203)*(x4204)))+(((IkReal(-1.00000000000000))*(sj3)*(x4206)*(x4211)))+(((IkReal(0.707109999985348))*(x4203)*(x4211)))+(((IkReal(-1.00000000000000))*(x4205)*(x4208)))+(((IkReal(-1.00000000000000))*(sj3)*(x4204)*(x4206)))+(((IkReal(-1.00000000000000))*(x4209)*(x4210))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst36)*(((((IkReal(-1.00000000000000))*(x4206)*(x4209)))+(((x4205)*(x4207)))+(((IkReal(0.707103562373095))*(x4203)*(x4204)))+(((IkReal(0.707103562373095))*(x4203)*(x4211)))+(((sj3)*(x4208)*(x4211)))+(((IkReal(-1.00000000000000))*(sj3)*(x4208)*(x4212)))+(((x4207)*(x4209)))+(((sj3)*(x4204)*(x4208)))+(((IkReal(-0.707103562373095))*(x4203)*(x4212)))+(((IkReal(-1.00000000000000))*(x4205)*(x4206)))))), ((gconst36)*(((((sj3)*(x4206)*(x4212)))+(((IkReal(-1.00000000000000))*(x4208)*(x4209)))+(((IkReal(-0.707109999985348))*(x4203)*(x4212)))+(((IkReal(-1.00000000000000))*(x4205)*(x4210)))+(((IkReal(0.707109999985348))*(x4203)*(x4204)))+(((IkReal(-1.00000000000000))*(sj3)*(x4206)*(x4211)))+(((IkReal(0.707109999985348))*(x4203)*(x4211)))+(((IkReal(-1.00000000000000))*(x4205)*(x4208)))+(((IkReal(-1.00000000000000))*(sj3)*(x4204)*(x4206)))+(((IkReal(-1.00000000000000))*(x4209)*(x4210)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x4213=IKcos(j1);
IkReal x4214=IKsin(j1);
IkReal x4215=((cj0)*(cj4));
IkReal x4216=((r01)*(sj5));
IkReal x4217=((IkReal(1.00000000000000))*(cj4));
IkReal x4218=((IkReal(1.00000000000000))*(r02));
IkReal x4219=((IkReal(0.707109999985348))*(sj3));
IkReal x4220=((IkReal(0.707103562373095))*(sj3));
IkReal x4221=((IkReal(1.00000000000000))*(sj4));
IkReal x4222=((cj5)*(r20));
IkReal x4223=((cj5)*(sj0));
IkReal x4224=((IkReal(1.00000000000000))*(cj0));
IkReal x4225=((r12)*(sj0));
IkReal x4226=((cj2)*(cj3));
IkReal x4227=((IkReal(0.707103562373095))*(cj3));
IkReal x4228=((r21)*(sj5));
IkReal x4229=((IkReal(0.707109999985348))*(cj3));
IkReal x4230=((IkReal(1.00000000000000))*(sj0)*(sj5));
IkReal x4231=((sj2)*(x4213));
IkReal x4232=((cj2)*(x4213));
IkReal x4233=((cj0)*(cj5)*(r00));
IkReal x4234=((IkReal(0.707103562373095))*(x4214));
IkReal x4235=((cj2)*(x4214));
IkReal x4236=((IkReal(0.707109999985348))*(sj2)*(x4214));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x4219)*(x4232)))+(((r20)*(sj5)))+(((sj2)*(x4214)*(x4219)))+(((IkReal(-1.00000000000000))*(x4220)*(x4231)))+(((IkReal(-1.00000000000000))*(x4220)*(x4235))));
evalcond[1]=((((cj4)*(r22)))+(((sj4)*(x4228)))+(((IkReal(0.707109999985348))*(x4231)))+(((IkReal(0.707109999985348))*(x4235)))+(((IkReal(-1.00000000000000))*(x4221)*(x4222)))+(((sj2)*(x4234)))+(((IkReal(-0.707103562373095))*(x4232))));
evalcond[2]=((((r22)*(sj4)))+(((IkReal(0.707109999985348))*(x4213)*(x4226)))+(((x4227)*(x4231)))+(((x4226)*(x4234)))+(((IkReal(-1.00000000000000))*(x4217)*(x4228)))+(((IkReal(-1.00000000000000))*(sj2)*(x4214)*(x4229)))+(((cj4)*(x4222))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x4224)))+(((IkReal(-1.00000000000000))*(r11)*(x4223)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4224)))+(((IkReal(-1.00000000000000))*(r10)*(x4230)))+(((sj2)*(x4214)*(x4220)))+(((x4219)*(x4231)))+(((x4219)*(x4235)))+(((IkReal(-1.00000000000000))*(x4220)*(x4232))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x4236)))+(((sj4)*(x4233)))+(((IkReal(0.707103562373095))*(x4231)))+(((IkReal(0.707109999985348))*(x4232)))+(((IkReal(-1.00000000000000))*(cj0)*(x4216)*(x4221)))+(((cj2)*(x4234)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj5)*(x4221)))+(((IkReal(-1.00000000000000))*(x4217)*(x4225)))+(((IkReal(-1.00000000000000))*(x4215)*(x4218)))+(((r10)*(sj4)*(x4223))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj5)*(r00)*(x4215)))+(((IkReal(-0.707109999985348))*(x4214)*(x4226)))+(((IkReal(0.707103562373095))*(x4213)*(x4226)))+(((x4215)*(x4216)))+(((IkReal(-1.00000000000000))*(x4221)*(x4225)))+(((cj4)*(r11)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(x4229)*(x4231)))+(((IkReal(-1.00000000000000))*(r10)*(x4217)*(x4223)))+(((IkReal(-1.00000000000000))*(cj0)*(sj4)*(x4218)))+(((IkReal(-1.00000000000000))*(sj2)*(x4214)*(x4227))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4237=((cj5)*(npy));
IkReal x4238=((IkReal(8.66210554726807e+23))*(npx));
IkReal x4239=((IkReal(6.89439331452234e+23))*(npx));
IkReal x4240=((IkReal(8.66210554726807e+23))*(sj3));
IkReal x4241=((cj4)*(npz));
IkReal x4242=((IkReal(6.89439331452234e+23))*(sj3));
IkReal x4243=((cj5)*(sj3)*(sj4));
IkReal x4244=((npy)*(sj4)*(sj5));
if( IKabs(((gconst34)*(((IkReal(-5.19726332836084e+21))+(((IkReal(-1.00000000000000))*(x4241)*(x4242)))+(((IkReal(8.66210554726807e+23))*(x4237)))+(((x4239)*(x4243)))+(((IkReal(-5.19726332836084e+21))*(cj3)))+(((IkReal(1.51888207091656e+23))*(sj3)))+(((sj5)*(x4238)))+(((IkReal(-1.00000000000000))*(x4242)*(x4244))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst34)*(((IkReal(-4.13663598871341e+21))+(((x4240)*(x4244)))+(((x4240)*(x4241)))+(((IkReal(6.89439331452234e+23))*(x4237)))+(((IkReal(-1.00000000000000))*(x4238)*(x4243)))+(((sj5)*(x4239)))+(((IkReal(-2.44170809699545e+23))*(sj3)))+(((IkReal(-4.13663598871341e+21))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst34)*(((IkReal(-5.19726332836084e+21))+(((IkReal(-1.00000000000000))*(x4241)*(x4242)))+(((IkReal(8.66210554726807e+23))*(x4237)))+(((x4239)*(x4243)))+(((IkReal(-5.19726332836084e+21))*(cj3)))+(((IkReal(1.51888207091656e+23))*(sj3)))+(((sj5)*(x4238)))+(((IkReal(-1.00000000000000))*(x4242)*(x4244)))))), ((gconst34)*(((IkReal(-4.13663598871341e+21))+(((x4240)*(x4244)))+(((x4240)*(x4241)))+(((IkReal(6.89439331452234e+23))*(x4237)))+(((IkReal(-1.00000000000000))*(x4238)*(x4243)))+(((sj5)*(x4239)))+(((IkReal(-2.44170809699545e+23))*(sj3)))+(((IkReal(-4.13663598871341e+21))*(cj3)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[3];
IkReal x4245=IKsin(j2);
IkReal x4246=IKcos(j2);
IkReal x4247=((cj5)*(npx));
IkReal x4248=((npy)*(sj5));
IkReal x4249=((IkReal(0.165463933124939))*(x4246));
IkReal x4250=((IkReal(0.207888640466058))*(x4245));
evalcond[0]=((IkReal(-0.258003287011922))+(((sj4)*(x4248)))+(((IkReal(-1.00000000000000))*(sj4)*(x4247)))+(((IkReal(0.165463933124939))*(x4245)))+(((cj4)*(npz)))+(((IkReal(-0.207888640466058))*(x4246))));
evalcond[1]=((IkReal(-0.00600000000000000))+(((IkReal(-0.0300035672348961))*(sj3)))+(((IkReal(-1.00000000000000))*(sj3)*(x4250)))+(((npx)*(sj5)))+(((IkReal(-0.00600000000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(sj3)*(x4249)))+(((cj5)*(npy))));
evalcond[2]=((((cj3)*(x4250)))+(((cj4)*(x4247)))+(((npz)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(x4248)))+(((IkReal(-0.00600000000000000))*(sj3)))+(((cj3)*(x4249)))+(((IkReal(0.0300035672348961))*(cj3))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst36;
IkReal x4251=((IkReal(1.00000000000000))*(sj3));
gconst36=IKsign(((((IkReal(-1.00000000000000))*(x4251)*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*(x4251)*((sj2)*(sj2))))));
IkReal x4252=((IkReal(1.00000000000000))*(sj3));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x4252)*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*(x4252)*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst37;
IkReal x4253=((IkReal(1.00000000000000))*(cj3));
gconst37=IKsign(((((IkReal(-1.00000000000000))*(x4253)*((sj2)*(sj2))))+(((IkReal(-1.00000000000000))*(x4253)*((cj2)*(cj2))))));
IkReal x4254=((IkReal(1.00000000000000))*(cj3));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x4254)*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*(x4254)*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x4255=((sj0)*(sj4));
IkReal x4256=((IkReal(1.00000000000000))*(r12));
IkReal x4257=((cj0)*(cj4));
IkReal x4258=((r01)*(sj5));
IkReal x4259=((IkReal(1.00000000000000))*(cj5));
IkReal x4260=((cj4)*(cj5));
IkReal x4261=((IkReal(1.00000000000000))*(cj0));
IkReal x4262=((cj4)*(sj0));
IkReal x4263=((r00)*(sj0));
IkReal x4264=((npy)*(sj5));
IkReal x4265=((IkReal(1.00000000000000))*(cj4));
IkReal x4266=((cj0)*(sj4));
IkReal x4267=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((cj5)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x4259)))+(((sj5)*(x4263)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x4261))));
evalcond[2]=((IkReal(-0.258003287011922))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x4259)))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((sj4)*(x4264)))+(((IkReal(0.165463933124939))*(sj2))));
evalcond[3]=((IkReal(-0.0360035672348961))+(((npx)*(sj5)))+(((IkReal(-0.165463933124939))*(cj2)))+(((cj5)*(npy)))+(((IkReal(-0.207888640466058))*(sj2))));
evalcond[4]=((IkReal(-0.00600000000000000))+(((IkReal(-1.00000000000000))*(x4264)*(x4265)))+(((npz)*(sj4)))+(((npx)*(x4260))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj4)*(x4261)*(x4267)))+(((cj5)*(r10)*(x4266)))+(((r02)*(x4262)))+(((IkReal(-1.00000000000000))*(r00)*(x4255)*(x4259)))+(((x4255)*(x4258)))+(((IkReal(-1.00000000000000))*(x4256)*(x4257))));
evalcond[6]=((IkReal(1.00000000000000))+(((r02)*(x4255)))+(((IkReal(-1.00000000000000))*(x4256)*(x4266)))+(((IkReal(-1.00000000000000))*(x4258)*(x4262)))+(((x4257)*(x4267)))+(((IkReal(-1.00000000000000))*(r10)*(x4257)*(x4259)))+(((x4260)*(x4263))));
evalcond[7]=((((r22)*(sj4)))+(((r20)*(x4260)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x4265))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x4255)*(x4256)))+(((IkReal(-1.00000000000000))*(r10)*(x4259)*(x4262)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x4261)))+(((x4262)*(x4267)))+(((IkReal(-1.00000000000000))*(r00)*(x4257)*(x4259)))+(((x4257)*(x4258))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst38;
gconst38=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst39;
gconst39=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4268=((cj5)*(r11));
IkReal x4269=((r10)*(sj0));
IkReal x4270=((IkReal(0.707103562373095))*(cj2));
IkReal x4271=((r20)*(sj5));
IkReal x4272=((IkReal(0.707103562373095))*(sj2));
IkReal x4273=((IkReal(0.707109999985348))*(cj2));
IkReal x4274=((cj0)*(r00));
IkReal x4275=((IkReal(0.707109999985348))*(sj2));
IkReal x4276=((cj5)*(r21));
IkReal x4277=((sj0)*(x4272));
IkReal x4278=((sj5)*(x4273));
IkReal x4279=((cj0)*(cj5)*(r01));
if( IKabs(((gconst39)*(((((IkReal(-1.00000000000000))*(sj0)*(x4268)*(x4273)))+(((IkReal(-1.00000000000000))*(sj5)*(x4269)*(x4272)))+(((IkReal(-1.00000000000000))*(x4273)*(x4279)))+(((IkReal(-1.00000000000000))*(sj5)*(x4272)*(x4274)))+(((IkReal(-1.00000000000000))*(x4272)*(x4279)))+(((x4275)*(x4276)))+(((IkReal(-1.00000000000000))*(x4274)*(x4278)))+(((IkReal(-1.00000000000000))*(x4268)*(x4277)))+(((IkReal(-1.00000000000000))*(x4269)*(x4278)))+(((IkReal(-1.00000000000000))*(x4270)*(x4271)))+(((IkReal(-1.00000000000000))*(x4270)*(x4276)))+(((x4271)*(x4275))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst39)*(((((IkReal(-1.00000000000000))*(sj0)*(x4268)*(x4275)))+(((IkReal(-1.00000000000000))*(sj5)*(x4269)*(x4275)))+(((IkReal(-1.00000000000000))*(x4273)*(x4276)))+(((x4270)*(x4279)))+(((IkReal(-1.00000000000000))*(x4275)*(x4279)))+(((sj5)*(x4269)*(x4270)))+(((IkReal(-1.00000000000000))*(sj5)*(x4274)*(x4275)))+(((IkReal(-1.00000000000000))*(x4271)*(x4273)))+(((IkReal(-1.00000000000000))*(x4271)*(x4272)))+(((sj0)*(x4268)*(x4270)))+(((IkReal(-1.00000000000000))*(x4272)*(x4276)))+(((sj5)*(x4270)*(x4274))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst39)*(((((IkReal(-1.00000000000000))*(sj0)*(x4268)*(x4273)))+(((IkReal(-1.00000000000000))*(sj5)*(x4269)*(x4272)))+(((IkReal(-1.00000000000000))*(x4273)*(x4279)))+(((IkReal(-1.00000000000000))*(sj5)*(x4272)*(x4274)))+(((IkReal(-1.00000000000000))*(x4272)*(x4279)))+(((x4275)*(x4276)))+(((IkReal(-1.00000000000000))*(x4274)*(x4278)))+(((IkReal(-1.00000000000000))*(x4268)*(x4277)))+(((IkReal(-1.00000000000000))*(x4269)*(x4278)))+(((IkReal(-1.00000000000000))*(x4270)*(x4271)))+(((IkReal(-1.00000000000000))*(x4270)*(x4276)))+(((x4271)*(x4275)))))), ((gconst39)*(((((IkReal(-1.00000000000000))*(sj0)*(x4268)*(x4275)))+(((IkReal(-1.00000000000000))*(sj5)*(x4269)*(x4275)))+(((IkReal(-1.00000000000000))*(x4273)*(x4276)))+(((x4270)*(x4279)))+(((IkReal(-1.00000000000000))*(x4275)*(x4279)))+(((sj5)*(x4269)*(x4270)))+(((IkReal(-1.00000000000000))*(sj5)*(x4274)*(x4275)))+(((IkReal(-1.00000000000000))*(x4271)*(x4273)))+(((IkReal(-1.00000000000000))*(x4271)*(x4272)))+(((sj0)*(x4268)*(x4270)))+(((IkReal(-1.00000000000000))*(x4272)*(x4276)))+(((sj5)*(x4270)*(x4274)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4280=IKsin(j1);
IkReal x4281=IKcos(j1);
IkReal x4282=((IkReal(0.707109999985348))*(cj2));
IkReal x4283=((IkReal(1.00000000000000))*(cj0));
IkReal x4284=((IkReal(0.707109999985348))*(sj2));
IkReal x4285=((cj5)*(sj4));
IkReal x4286=((sj4)*(sj5));
IkReal x4287=((IkReal(1.00000000000000))*(sj0));
IkReal x4288=((sj5)*(x4287));
IkReal x4289=((IkReal(0.707103562373095))*(x4281));
IkReal x4290=((IkReal(0.707103562373095))*(x4280));
IkReal x4291=((x4280)*(x4282));
IkReal x4292=((sj2)*(x4290));
IkReal x4293=((x4281)*(x4284));
IkReal x4294=((cj2)*(x4289));
IkReal x4295=((sj2)*(x4289));
IkReal x4296=((cj2)*(x4290));
IkReal x4297=((x4281)*(x4282));
IkReal x4298=((x4280)*(x4284));
IkReal x4299=((x4295)+(x4297)+(x4296));
IkReal x4300=((x4291)+(x4293)+(x4292));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x4299)))+(x4298)+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x4285)))+(((IkReal(-1.00000000000000))*(x4294)))+(x4300)+(((r21)*(x4286))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x4288)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x4287)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x4283)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4283)))+(((IkReal(-1.00000000000000))*(x4294)))+(x4300));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r12)*(x4287)))+(((IkReal(-1.00000000000000))*(r11)*(x4286)*(x4287)))+(((IkReal(-1.00000000000000))*(r01)*(x4283)*(x4286)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x4283)))+(((cj0)*(r00)*(x4285)))+(((IkReal(-1.00000000000000))*(x4298)))+(x4299)+(((r10)*(sj0)*(x4285))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4301=((cj5)*(sj4));
IkReal x4302=((r21)*(sj4));
IkReal x4303=((cj5)*(r21));
IkReal x4304=((IkReal(0.707109999985348))*(cj2));
IkReal x4305=((IkReal(0.707103562373095))*(sj2));
IkReal x4306=((IkReal(0.707109999985348))*(sj2));
IkReal x4307=((cj4)*(r22));
IkReal x4308=((IkReal(0.707103562373095))*(cj2));
IkReal x4309=((r20)*(x4304));
IkReal x4310=((sj5)*(x4308));
IkReal x4311=((sj5)*(x4306));
if( IKabs(((gconst38)*(((((r20)*(x4311)))+(((IkReal(-1.00000000000000))*(x4303)*(x4308)))+(((IkReal(-1.00000000000000))*(r20)*(x4310)))+(((x4305)*(x4307)))+(((IkReal(-1.00000000000000))*(x4301)*(x4309)))+(((x4304)*(x4307)))+(((x4303)*(x4306)))+(((IkReal(-1.00000000000000))*(r20)*(x4301)*(x4305)))+(((sj5)*(x4302)*(x4305)))+(((sj5)*(x4302)*(x4304))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst38)*(((((IkReal(-1.00000000000000))*(x4303)*(x4305)))+(((IkReal(-1.00000000000000))*(x4303)*(x4304)))+(((IkReal(-1.00000000000000))*(sj5)*(x4309)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x4305)))+(((x4302)*(x4311)))+(((x4306)*(x4307)))+(((IkReal(-1.00000000000000))*(x4307)*(x4308)))+(((r20)*(x4301)*(x4308)))+(((IkReal(-1.00000000000000))*(r20)*(x4301)*(x4306)))+(((IkReal(-1.00000000000000))*(x4302)*(x4310))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst38)*(((((r20)*(x4311)))+(((IkReal(-1.00000000000000))*(x4303)*(x4308)))+(((IkReal(-1.00000000000000))*(r20)*(x4310)))+(((x4305)*(x4307)))+(((IkReal(-1.00000000000000))*(x4301)*(x4309)))+(((x4304)*(x4307)))+(((x4303)*(x4306)))+(((IkReal(-1.00000000000000))*(r20)*(x4301)*(x4305)))+(((sj5)*(x4302)*(x4305)))+(((sj5)*(x4302)*(x4304)))))), ((gconst38)*(((((IkReal(-1.00000000000000))*(x4303)*(x4305)))+(((IkReal(-1.00000000000000))*(x4303)*(x4304)))+(((IkReal(-1.00000000000000))*(sj5)*(x4309)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x4305)))+(((x4302)*(x4311)))+(((x4306)*(x4307)))+(((IkReal(-1.00000000000000))*(x4307)*(x4308)))+(((r20)*(x4301)*(x4308)))+(((IkReal(-1.00000000000000))*(r20)*(x4301)*(x4306)))+(((IkReal(-1.00000000000000))*(x4302)*(x4310)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4312=IKsin(j1);
IkReal x4313=IKcos(j1);
IkReal x4314=((IkReal(0.707109999985348))*(cj2));
IkReal x4315=((IkReal(1.00000000000000))*(cj0));
IkReal x4316=((IkReal(0.707109999985348))*(sj2));
IkReal x4317=((cj5)*(sj4));
IkReal x4318=((sj4)*(sj5));
IkReal x4319=((IkReal(1.00000000000000))*(sj0));
IkReal x4320=((sj5)*(x4319));
IkReal x4321=((IkReal(0.707103562373095))*(x4313));
IkReal x4322=((IkReal(0.707103562373095))*(x4312));
IkReal x4323=((x4312)*(x4314));
IkReal x4324=((sj2)*(x4322));
IkReal x4325=((x4313)*(x4316));
IkReal x4326=((cj2)*(x4321));
IkReal x4327=((sj2)*(x4321));
IkReal x4328=((cj2)*(x4322));
IkReal x4329=((x4313)*(x4314));
IkReal x4330=((x4312)*(x4316));
IkReal x4331=((x4329)+(x4328)+(x4327));
IkReal x4332=((x4323)+(x4325)+(x4324));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x4331)))+(x4330)+(((r20)*(sj5))));
evalcond[1]=((((r21)*(x4318)))+(((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x4326)))+(x4332)+(((IkReal(-1.00000000000000))*(r20)*(x4317))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x4320)))+(((IkReal(-1.00000000000000))*(x4326)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x4319)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x4315)))+(x4332)+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4315))));
evalcond[3]=((((r10)*(sj0)*(x4317)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x4315)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x4319)))+(((IkReal(-1.00000000000000))*(r01)*(x4315)*(x4318)))+(((IkReal(-1.00000000000000))*(x4330)))+(((IkReal(-1.00000000000000))*(r11)*(x4318)*(x4319)))+(x4331)+(((cj0)*(r00)*(x4317))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x4333=((sj0)*(sj4));
IkReal x4334=((IkReal(1.00000000000000))*(r12));
IkReal x4335=((cj0)*(cj4));
IkReal x4336=((r01)*(sj5));
IkReal x4337=((IkReal(1.00000000000000))*(cj5));
IkReal x4338=((cj4)*(cj5));
IkReal x4339=((IkReal(1.00000000000000))*(cj0));
IkReal x4340=((cj4)*(sj0));
IkReal x4341=((r00)*(sj0));
IkReal x4342=((npy)*(sj5));
IkReal x4343=((IkReal(1.00000000000000))*(cj4));
IkReal x4344=((cj0)*(sj4));
IkReal x4345=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((cj5)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x4339)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x4337)))+(((sj5)*(x4341))));
evalcond[2]=((IkReal(-0.258003287011922))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x4337)))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((sj4)*(x4342)))+(((IkReal(0.165463933124939))*(sj2))));
evalcond[3]=((IkReal(-0.0360035672348961))+(((npx)*(sj5)))+(((IkReal(-0.165463933124939))*(cj2)))+(((cj5)*(npy)))+(((IkReal(-0.207888640466058))*(sj2))));
evalcond[4]=((IkReal(-0.00600000000000000))+(((IkReal(-1.00000000000000))*(x4342)*(x4343)))+(((npz)*(sj4)))+(((npx)*(x4338))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4334)*(x4335)))+(((r02)*(x4340)))+(((IkReal(-1.00000000000000))*(r00)*(x4333)*(x4337)))+(((cj5)*(r10)*(x4344)))+(((x4333)*(x4336)))+(((IkReal(-1.00000000000000))*(sj4)*(x4339)*(x4345))));
evalcond[6]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x4336)*(x4340)))+(((x4335)*(x4345)))+(((x4338)*(x4341)))+(((IkReal(-1.00000000000000))*(r10)*(x4335)*(x4337)))+(((r02)*(x4333)))+(((IkReal(-1.00000000000000))*(x4334)*(x4344))));
evalcond[7]=((((r20)*(x4338)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x4343))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x4333)*(x4334)))+(((IkReal(-1.00000000000000))*(r00)*(x4335)*(x4337)))+(((x4335)*(x4336)))+(((IkReal(-1.00000000000000))*(r10)*(x4337)*(x4340)))+(((x4340)*(x4345)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x4339))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst40;
gconst40=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst41;
gconst41=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4346=((cj5)*(r11));
IkReal x4347=((r10)*(sj0));
IkReal x4348=((IkReal(0.707103562373095))*(cj2));
IkReal x4349=((r20)*(sj5));
IkReal x4350=((IkReal(0.707103562373095))*(sj2));
IkReal x4351=((IkReal(0.707109999985348))*(cj2));
IkReal x4352=((cj0)*(r00));
IkReal x4353=((IkReal(0.707109999985348))*(sj2));
IkReal x4354=((cj5)*(r21));
IkReal x4355=((sj0)*(x4350));
IkReal x4356=((sj5)*(x4351));
IkReal x4357=((cj0)*(cj5)*(r01));
if( IKabs(((gconst41)*(((((IkReal(-1.00000000000000))*(sj5)*(x4350)*(x4352)))+(((x4353)*(x4354)))+(((IkReal(-1.00000000000000))*(x4350)*(x4357)))+(((IkReal(-1.00000000000000))*(x4351)*(x4357)))+(((IkReal(-1.00000000000000))*(x4352)*(x4356)))+(((x4349)*(x4353)))+(((IkReal(-1.00000000000000))*(x4348)*(x4354)))+(((IkReal(-1.00000000000000))*(x4347)*(x4356)))+(((IkReal(-1.00000000000000))*(x4348)*(x4349)))+(((IkReal(-1.00000000000000))*(sj5)*(x4347)*(x4350)))+(((IkReal(-1.00000000000000))*(x4346)*(x4355)))+(((IkReal(-1.00000000000000))*(sj0)*(x4346)*(x4351))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst41)*(((((IkReal(-1.00000000000000))*(x4353)*(x4357)))+(((IkReal(-1.00000000000000))*(sj5)*(x4352)*(x4353)))+(((x4348)*(x4357)))+(((IkReal(-1.00000000000000))*(x4349)*(x4350)))+(((IkReal(-1.00000000000000))*(x4349)*(x4351)))+(((IkReal(-1.00000000000000))*(x4350)*(x4354)))+(((sj5)*(x4347)*(x4348)))+(((IkReal(-1.00000000000000))*(x4351)*(x4354)))+(((sj5)*(x4348)*(x4352)))+(((IkReal(-1.00000000000000))*(sj5)*(x4347)*(x4353)))+(((sj0)*(x4346)*(x4348)))+(((IkReal(-1.00000000000000))*(sj0)*(x4346)*(x4353))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst41)*(((((IkReal(-1.00000000000000))*(sj5)*(x4350)*(x4352)))+(((x4353)*(x4354)))+(((IkReal(-1.00000000000000))*(x4350)*(x4357)))+(((IkReal(-1.00000000000000))*(x4351)*(x4357)))+(((IkReal(-1.00000000000000))*(x4352)*(x4356)))+(((x4349)*(x4353)))+(((IkReal(-1.00000000000000))*(x4348)*(x4354)))+(((IkReal(-1.00000000000000))*(x4347)*(x4356)))+(((IkReal(-1.00000000000000))*(x4348)*(x4349)))+(((IkReal(-1.00000000000000))*(sj5)*(x4347)*(x4350)))+(((IkReal(-1.00000000000000))*(x4346)*(x4355)))+(((IkReal(-1.00000000000000))*(sj0)*(x4346)*(x4351)))))), ((gconst41)*(((((IkReal(-1.00000000000000))*(x4353)*(x4357)))+(((IkReal(-1.00000000000000))*(sj5)*(x4352)*(x4353)))+(((x4348)*(x4357)))+(((IkReal(-1.00000000000000))*(x4349)*(x4350)))+(((IkReal(-1.00000000000000))*(x4349)*(x4351)))+(((IkReal(-1.00000000000000))*(x4350)*(x4354)))+(((sj5)*(x4347)*(x4348)))+(((IkReal(-1.00000000000000))*(x4351)*(x4354)))+(((sj5)*(x4348)*(x4352)))+(((IkReal(-1.00000000000000))*(sj5)*(x4347)*(x4353)))+(((sj0)*(x4346)*(x4348)))+(((IkReal(-1.00000000000000))*(sj0)*(x4346)*(x4353)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4358=IKsin(j1);
IkReal x4359=IKcos(j1);
IkReal x4360=((IkReal(0.707109999985348))*(cj2));
IkReal x4361=((IkReal(1.00000000000000))*(cj0));
IkReal x4362=((IkReal(0.707109999985348))*(sj2));
IkReal x4363=((cj5)*(sj4));
IkReal x4364=((sj4)*(sj5));
IkReal x4365=((IkReal(1.00000000000000))*(sj0));
IkReal x4366=((sj5)*(x4365));
IkReal x4367=((IkReal(0.707103562373095))*(x4359));
IkReal x4368=((IkReal(0.707103562373095))*(x4358));
IkReal x4369=((x4358)*(x4360));
IkReal x4370=((sj2)*(x4368));
IkReal x4371=((x4359)*(x4362));
IkReal x4372=((cj2)*(x4367));
IkReal x4373=((sj2)*(x4367));
IkReal x4374=((cj2)*(x4368));
IkReal x4375=((x4359)*(x4360));
IkReal x4376=((x4358)*(x4362));
IkReal x4377=((x4373)+(x4374)+(x4375));
IkReal x4378=((x4370)+(x4371)+(x4369));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x4377)))+(x4376)+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((r21)*(x4364)))+(((IkReal(-1.00000000000000))*(x4372)))+(((IkReal(-1.00000000000000))*(r20)*(x4363)))+(x4378));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4361)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x4365)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x4361)))+(((IkReal(-1.00000000000000))*(x4372)))+(x4378)+(((IkReal(-1.00000000000000))*(r10)*(x4366))));
evalcond[3]=((((cj0)*(r00)*(x4363)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x4361)))+(((r10)*(sj0)*(x4363)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x4365)))+(((IkReal(-1.00000000000000))*(x4376)))+(((IkReal(-1.00000000000000))*(r11)*(x4364)*(x4365)))+(((IkReal(-1.00000000000000))*(r01)*(x4361)*(x4364)))+(x4377));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4379=((cj5)*(sj4));
IkReal x4380=((r21)*(sj4));
IkReal x4381=((cj5)*(r21));
IkReal x4382=((IkReal(0.707109999985348))*(cj2));
IkReal x4383=((IkReal(0.707103562373095))*(sj2));
IkReal x4384=((IkReal(0.707109999985348))*(sj2));
IkReal x4385=((cj4)*(r22));
IkReal x4386=((IkReal(0.707103562373095))*(cj2));
IkReal x4387=((r20)*(x4382));
IkReal x4388=((sj5)*(x4386));
IkReal x4389=((sj5)*(x4384));
if( IKabs(((gconst40)*(((((IkReal(-1.00000000000000))*(x4379)*(x4387)))+(((IkReal(-1.00000000000000))*(x4381)*(x4386)))+(((x4383)*(x4385)))+(((IkReal(-1.00000000000000))*(r20)*(x4379)*(x4383)))+(((x4381)*(x4384)))+(((x4382)*(x4385)))+(((r20)*(x4389)))+(((sj5)*(x4380)*(x4382)))+(((sj5)*(x4380)*(x4383)))+(((IkReal(-1.00000000000000))*(r20)*(x4388))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst40)*(((((r20)*(x4379)*(x4386)))+(((IkReal(-1.00000000000000))*(sj5)*(x4387)))+(((IkReal(-1.00000000000000))*(x4380)*(x4388)))+(((IkReal(-1.00000000000000))*(x4381)*(x4383)))+(((IkReal(-1.00000000000000))*(x4381)*(x4382)))+(((IkReal(-1.00000000000000))*(r20)*(x4379)*(x4384)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x4383)))+(((x4380)*(x4389)))+(((x4384)*(x4385)))+(((IkReal(-1.00000000000000))*(x4385)*(x4386))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst40)*(((((IkReal(-1.00000000000000))*(x4379)*(x4387)))+(((IkReal(-1.00000000000000))*(x4381)*(x4386)))+(((x4383)*(x4385)))+(((IkReal(-1.00000000000000))*(r20)*(x4379)*(x4383)))+(((x4381)*(x4384)))+(((x4382)*(x4385)))+(((r20)*(x4389)))+(((sj5)*(x4380)*(x4382)))+(((sj5)*(x4380)*(x4383)))+(((IkReal(-1.00000000000000))*(r20)*(x4388)))))), ((gconst40)*(((((r20)*(x4379)*(x4386)))+(((IkReal(-1.00000000000000))*(sj5)*(x4387)))+(((IkReal(-1.00000000000000))*(x4380)*(x4388)))+(((IkReal(-1.00000000000000))*(x4381)*(x4383)))+(((IkReal(-1.00000000000000))*(x4381)*(x4382)))+(((IkReal(-1.00000000000000))*(r20)*(x4379)*(x4384)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x4383)))+(((x4380)*(x4389)))+(((x4384)*(x4385)))+(((IkReal(-1.00000000000000))*(x4385)*(x4386)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4390=IKsin(j1);
IkReal x4391=IKcos(j1);
IkReal x4392=((IkReal(0.707109999985348))*(cj2));
IkReal x4393=((IkReal(1.00000000000000))*(cj0));
IkReal x4394=((IkReal(0.707109999985348))*(sj2));
IkReal x4395=((cj5)*(sj4));
IkReal x4396=((sj4)*(sj5));
IkReal x4397=((IkReal(1.00000000000000))*(sj0));
IkReal x4398=((sj5)*(x4397));
IkReal x4399=((IkReal(0.707103562373095))*(x4391));
IkReal x4400=((IkReal(0.707103562373095))*(x4390));
IkReal x4401=((x4390)*(x4392));
IkReal x4402=((sj2)*(x4400));
IkReal x4403=((x4391)*(x4394));
IkReal x4404=((cj2)*(x4399));
IkReal x4405=((sj2)*(x4399));
IkReal x4406=((cj2)*(x4400));
IkReal x4407=((x4391)*(x4392));
IkReal x4408=((x4390)*(x4394));
IkReal x4409=((x4405)+(x4406)+(x4407));
IkReal x4410=((x4401)+(x4402)+(x4403));
evalcond[0]=((((cj5)*(r21)))+(x4408)+(((IkReal(-1.00000000000000))*(x4409)))+(((r20)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x4395)))+(((cj4)*(r22)))+(x4410)+(((IkReal(-1.00000000000000))*(x4404)))+(((r21)*(x4396))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x4393)))+(x4410)+(((IkReal(-1.00000000000000))*(r10)*(x4398)))+(((IkReal(-1.00000000000000))*(x4404)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4393)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x4397))));
evalcond[3]=((x4409)+(((IkReal(-1.00000000000000))*(r01)*(x4393)*(x4396)))+(((IkReal(-1.00000000000000))*(r11)*(x4396)*(x4397)))+(((cj0)*(r00)*(x4395)))+(((r10)*(sj0)*(x4395)))+(((IkReal(-1.00000000000000))*(x4408)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x4393)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x4397))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x4411=((sj0)*(sj4));
IkReal x4412=((IkReal(1.00000000000000))*(r12));
IkReal x4413=((cj0)*(cj4));
IkReal x4414=((r01)*(sj5));
IkReal x4415=((IkReal(1.00000000000000))*(cj5));
IkReal x4416=((cj4)*(cj5));
IkReal x4417=((IkReal(1.00000000000000))*(cj0));
IkReal x4418=((cj4)*(sj0));
IkReal x4419=((r00)*(sj0));
IkReal x4420=((npy)*(sj5));
IkReal x4421=((IkReal(1.00000000000000))*(cj4));
IkReal x4422=((cj0)*(sj4));
IkReal x4423=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((cj5)*(r01)*(sj0)))+(((sj5)*(x4419)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x4415)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x4417))));
evalcond[2]=((IkReal(-0.258003287011922))+(((sj4)*(x4420)))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x4415)))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((IkReal(0.165463933124939))*(sj2))));
evalcond[3]=((IkReal(0.0240035672348961))+(((npx)*(sj5)))+(((IkReal(0.207888640466058))*(sj2)))+(((cj5)*(npy)))+(((IkReal(0.165463933124939))*(cj2))));
evalcond[4]=((IkReal(0.00600000000000000))+(((npx)*(x4416)))+(((IkReal(-1.00000000000000))*(x4420)*(x4421)))+(((npz)*(sj4))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x4411)*(x4415)))+(((cj5)*(r10)*(x4422)))+(((IkReal(-1.00000000000000))*(x4412)*(x4413)))+(((IkReal(-1.00000000000000))*(sj4)*(x4417)*(x4423)))+(((r02)*(x4418)))+(((x4411)*(x4414))));
evalcond[6]=((IkReal(-1.00000000000000))+(((x4413)*(x4423)))+(((IkReal(-1.00000000000000))*(x4412)*(x4422)))+(((x4416)*(x4419)))+(((IkReal(-1.00000000000000))*(r10)*(x4413)*(x4415)))+(((r02)*(x4411)))+(((IkReal(-1.00000000000000))*(x4414)*(x4418))));
evalcond[7]=((((r22)*(sj4)))+(((r20)*(x4416)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x4421))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r10)*(x4415)*(x4418)))+(((IkReal(-1.00000000000000))*(r00)*(x4413)*(x4415)))+(((x4418)*(x4423)))+(((IkReal(-1.00000000000000))*(x4411)*(x4412)))+(((x4413)*(x4414)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x4417))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst42;
gconst42=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst43;
gconst43=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4424=((cj5)*(r11));
IkReal x4425=((r10)*(sj0));
IkReal x4426=((IkReal(0.707103562373095))*(cj2));
IkReal x4427=((r20)*(sj5));
IkReal x4428=((IkReal(0.707103562373095))*(sj2));
IkReal x4429=((IkReal(0.707109999985348))*(cj2));
IkReal x4430=((cj0)*(r00));
IkReal x4431=((IkReal(0.707109999985348))*(sj2));
IkReal x4432=((cj5)*(r21));
IkReal x4433=((sj0)*(x4428));
IkReal x4434=((sj5)*(x4429));
IkReal x4435=((cj0)*(cj5)*(r01));
if( IKabs(((gconst43)*(((((IkReal(-1.00000000000000))*(x4427)*(x4431)))+(((x4429)*(x4435)))+(((x4428)*(x4435)))+(((sj5)*(x4425)*(x4428)))+(((x4430)*(x4434)))+(((x4426)*(x4427)))+(((x4425)*(x4434)))+(((IkReal(-1.00000000000000))*(x4431)*(x4432)))+(((x4426)*(x4432)))+(((x4424)*(x4433)))+(((sj5)*(x4428)*(x4430)))+(((sj0)*(x4424)*(x4429))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((x4429)*(x4432)))+(((sj5)*(x4430)*(x4431)))+(((x4428)*(x4432)))+(((IkReal(-1.00000000000000))*(sj0)*(x4424)*(x4426)))+(((sj5)*(x4425)*(x4431)))+(((x4427)*(x4428)))+(((x4427)*(x4429)))+(((sj0)*(x4424)*(x4431)))+(((x4431)*(x4435)))+(((IkReal(-1.00000000000000))*(sj5)*(x4426)*(x4430)))+(((IkReal(-1.00000000000000))*(sj5)*(x4425)*(x4426)))+(((IkReal(-1.00000000000000))*(x4426)*(x4435))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst43)*(((((IkReal(-1.00000000000000))*(x4427)*(x4431)))+(((x4429)*(x4435)))+(((x4428)*(x4435)))+(((sj5)*(x4425)*(x4428)))+(((x4430)*(x4434)))+(((x4426)*(x4427)))+(((x4425)*(x4434)))+(((IkReal(-1.00000000000000))*(x4431)*(x4432)))+(((x4426)*(x4432)))+(((x4424)*(x4433)))+(((sj5)*(x4428)*(x4430)))+(((sj0)*(x4424)*(x4429)))))), ((gconst43)*(((((x4429)*(x4432)))+(((sj5)*(x4430)*(x4431)))+(((x4428)*(x4432)))+(((IkReal(-1.00000000000000))*(sj0)*(x4424)*(x4426)))+(((sj5)*(x4425)*(x4431)))+(((x4427)*(x4428)))+(((x4427)*(x4429)))+(((sj0)*(x4424)*(x4431)))+(((x4431)*(x4435)))+(((IkReal(-1.00000000000000))*(sj5)*(x4426)*(x4430)))+(((IkReal(-1.00000000000000))*(sj5)*(x4425)*(x4426)))+(((IkReal(-1.00000000000000))*(x4426)*(x4435)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4436=IKcos(j1);
IkReal x4437=IKsin(j1);
IkReal x4438=((IkReal(0.707109999985348))*(cj2));
IkReal x4439=((IkReal(1.00000000000000))*(cj0));
IkReal x4440=((IkReal(0.707109999985348))*(sj2));
IkReal x4441=((cj5)*(sj4));
IkReal x4442=((sj4)*(sj5));
IkReal x4443=((IkReal(1.00000000000000))*(sj0));
IkReal x4444=((sj5)*(x4443));
IkReal x4445=((IkReal(0.707103562373095))*(x4436));
IkReal x4446=((IkReal(0.707103562373095))*(x4437));
IkReal x4447=((cj2)*(x4445));
IkReal x4448=((x4437)*(x4438));
IkReal x4449=((sj2)*(x4446));
IkReal x4450=((x4436)*(x4440));
IkReal x4451=((sj2)*(x4445));
IkReal x4452=((cj2)*(x4446));
IkReal x4453=((x4436)*(x4438));
IkReal x4454=((x4437)*(x4440));
IkReal x4455=((x4453)+(x4452)+(x4451));
IkReal x4456=((x4448)+(x4449)+(x4450));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x4454)))+(x4455)+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((r21)*(x4442)))+(x4456)+(((IkReal(-1.00000000000000))*(x4447)))+(((IkReal(-1.00000000000000))*(r20)*(x4441))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4456)))+(x4447)+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4439)))+(((IkReal(-1.00000000000000))*(r10)*(x4444)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x4439)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x4443))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4454)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x4439)))+(x4455)+(((IkReal(-1.00000000000000))*(r01)*(x4439)*(x4442)))+(((cj0)*(r00)*(x4441)))+(((r10)*(sj0)*(x4441)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x4443)))+(((IkReal(-1.00000000000000))*(r11)*(x4442)*(x4443))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4457=((cj5)*(sj4));
IkReal x4458=((r21)*(sj4));
IkReal x4459=((cj5)*(r21));
IkReal x4460=((IkReal(0.707109999985348))*(cj2));
IkReal x4461=((IkReal(0.707103562373095))*(sj2));
IkReal x4462=((IkReal(0.707109999985348))*(sj2));
IkReal x4463=((cj4)*(r22));
IkReal x4464=((IkReal(0.707103562373095))*(cj2));
IkReal x4465=((r20)*(x4460));
IkReal x4466=((sj5)*(x4464));
IkReal x4467=((sj5)*(x4462));
if( IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(sj5)*(x4458)*(x4461)))+(((IkReal(-1.00000000000000))*(sj5)*(x4458)*(x4460)))+(((IkReal(-1.00000000000000))*(x4459)*(x4464)))+(((x4459)*(x4462)))+(((r20)*(x4457)*(x4461)))+(((r20)*(x4467)))+(((x4457)*(x4465)))+(((IkReal(-1.00000000000000))*(x4460)*(x4463)))+(((IkReal(-1.00000000000000))*(x4461)*(x4463)))+(((IkReal(-1.00000000000000))*(r20)*(x4466))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*(((((x4458)*(x4466)))+(((IkReal(-1.00000000000000))*(r20)*(x4457)*(x4464)))+(((IkReal(-1.00000000000000))*(x4462)*(x4463)))+(((IkReal(-1.00000000000000))*(x4458)*(x4467)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x4461)))+(((IkReal(-1.00000000000000))*(sj5)*(x4465)))+(((IkReal(-1.00000000000000))*(x4459)*(x4461)))+(((IkReal(-1.00000000000000))*(x4459)*(x4460)))+(((r20)*(x4457)*(x4462)))+(((x4463)*(x4464))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst42)*(((((IkReal(-1.00000000000000))*(sj5)*(x4458)*(x4461)))+(((IkReal(-1.00000000000000))*(sj5)*(x4458)*(x4460)))+(((IkReal(-1.00000000000000))*(x4459)*(x4464)))+(((x4459)*(x4462)))+(((r20)*(x4457)*(x4461)))+(((r20)*(x4467)))+(((x4457)*(x4465)))+(((IkReal(-1.00000000000000))*(x4460)*(x4463)))+(((IkReal(-1.00000000000000))*(x4461)*(x4463)))+(((IkReal(-1.00000000000000))*(r20)*(x4466)))))), ((gconst42)*(((((x4458)*(x4466)))+(((IkReal(-1.00000000000000))*(r20)*(x4457)*(x4464)))+(((IkReal(-1.00000000000000))*(x4462)*(x4463)))+(((IkReal(-1.00000000000000))*(x4458)*(x4467)))+(((IkReal(-1.00000000000000))*(r20)*(sj5)*(x4461)))+(((IkReal(-1.00000000000000))*(sj5)*(x4465)))+(((IkReal(-1.00000000000000))*(x4459)*(x4461)))+(((IkReal(-1.00000000000000))*(x4459)*(x4460)))+(((r20)*(x4457)*(x4462)))+(((x4463)*(x4464)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4468=IKcos(j1);
IkReal x4469=IKsin(j1);
IkReal x4470=((IkReal(0.707109999985348))*(cj2));
IkReal x4471=((IkReal(1.00000000000000))*(cj0));
IkReal x4472=((IkReal(0.707109999985348))*(sj2));
IkReal x4473=((cj5)*(sj4));
IkReal x4474=((sj4)*(sj5));
IkReal x4475=((IkReal(1.00000000000000))*(sj0));
IkReal x4476=((sj5)*(x4475));
IkReal x4477=((IkReal(0.707103562373095))*(x4468));
IkReal x4478=((IkReal(0.707103562373095))*(x4469));
IkReal x4479=((cj2)*(x4477));
IkReal x4480=((x4469)*(x4470));
IkReal x4481=((sj2)*(x4478));
IkReal x4482=((x4468)*(x4472));
IkReal x4483=((sj2)*(x4477));
IkReal x4484=((cj2)*(x4478));
IkReal x4485=((x4468)*(x4470));
IkReal x4486=((x4469)*(x4472));
IkReal x4487=((x4484)+(x4485)+(x4483));
IkReal x4488=((x4480)+(x4481)+(x4482));
evalcond[0]=((((cj5)*(r21)))+(x4487)+(((r20)*(sj5)))+(((IkReal(-1.00000000000000))*(x4486))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x4479)))+(((cj4)*(r22)))+(x4488)+(((r21)*(x4474)))+(((IkReal(-1.00000000000000))*(r20)*(x4473))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x4475)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x4471)))+(x4479)+(((IkReal(-1.00000000000000))*(r10)*(x4476)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4471)))+(((IkReal(-1.00000000000000))*(x4488))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x4474)*(x4475)))+(x4487)+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x4475)))+(((cj0)*(r00)*(x4473)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x4471)))+(((r10)*(sj0)*(x4473)))+(((IkReal(-1.00000000000000))*(r01)*(x4471)*(x4474)))+(((IkReal(-1.00000000000000))*(x4486))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x4489=((sj0)*(sj4));
IkReal x4490=((IkReal(1.00000000000000))*(r12));
IkReal x4491=((cj0)*(cj4));
IkReal x4492=((r01)*(sj5));
IkReal x4493=((IkReal(1.00000000000000))*(cj5));
IkReal x4494=((cj4)*(cj5));
IkReal x4495=((IkReal(1.00000000000000))*(cj0));
IkReal x4496=((cj4)*(sj0));
IkReal x4497=((r00)*(sj0));
IkReal x4498=((npy)*(sj5));
IkReal x4499=((IkReal(1.00000000000000))*(cj4));
IkReal x4500=((cj0)*(sj4));
IkReal x4501=((r11)*(sj5));
evalcond[0]=((IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))))))+(IKabs(((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959)))))));
evalcond[1]=((((cj5)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x4493)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x4495)))+(((sj5)*(x4497))));
evalcond[2]=((IkReal(-0.258003287011922))+(((sj4)*(x4498)))+(((IkReal(-0.207888640466058))*(cj2)))+(((cj4)*(npz)))+(((IkReal(0.165463933124939))*(sj2)))+(((IkReal(-1.00000000000000))*(npx)*(sj4)*(x4493))));
evalcond[3]=((IkReal(0.0240035672348961))+(((npx)*(sj5)))+(((IkReal(0.207888640466058))*(sj2)))+(((cj5)*(npy)))+(((IkReal(0.165463933124939))*(cj2))));
evalcond[4]=((IkReal(0.00600000000000000))+(((npz)*(sj4)))+(((IkReal(-1.00000000000000))*(x4498)*(x4499)))+(((npx)*(x4494))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj4)*(x4495)*(x4501)))+(((r02)*(x4496)))+(((IkReal(-1.00000000000000))*(x4490)*(x4491)))+(((cj5)*(r10)*(x4500)))+(((IkReal(-1.00000000000000))*(r00)*(x4489)*(x4493)))+(((x4489)*(x4492))));
evalcond[6]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x4490)*(x4500)))+(((IkReal(-1.00000000000000))*(r10)*(x4491)*(x4493)))+(((IkReal(-1.00000000000000))*(x4492)*(x4496)))+(((x4491)*(x4501)))+(((r02)*(x4489)))+(((x4494)*(x4497))));
evalcond[7]=((((IkReal(-1.00000000000000))*(r21)*(sj5)*(x4499)))+(((r22)*(sj4)))+(((r20)*(x4494))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x4489)*(x4490)))+(((x4496)*(x4501)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x4495)))+(((IkReal(-1.00000000000000))*(r10)*(x4493)*(x4496)))+(((IkReal(-1.00000000000000))*(r00)*(x4491)*(x4493)))+(((x4491)*(x4492))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst44;
gconst44=IKsign((((sj2)*(sj2))+((cj2)*(cj2))));
dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst45;
gconst45=IKsign(((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj2)*(cj2))))+(((IkReal(-1.00000000000000))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4502=((cj5)*(r11));
IkReal x4503=((r10)*(sj0));
IkReal x4504=((IkReal(0.707103562373095))*(cj2));
IkReal x4505=((r20)*(sj5));
IkReal x4506=((IkReal(0.707103562373095))*(sj2));
IkReal x4507=((IkReal(0.707109999985348))*(cj2));
IkReal x4508=((cj0)*(r00));
IkReal x4509=((IkReal(0.707109999985348))*(sj2));
IkReal x4510=((cj5)*(r21));
IkReal x4511=((sj0)*(x4506));
IkReal x4512=((sj5)*(x4507));
IkReal x4513=((cj0)*(cj5)*(r01));
if( IKabs(((gconst45)*(((((sj5)*(x4503)*(x4506)))+(((x4502)*(x4511)))+(((x4504)*(x4510)))+(((x4503)*(x4512)))+(((sj0)*(x4502)*(x4507)))+(((x4506)*(x4513)))+(((sj5)*(x4506)*(x4508)))+(((x4504)*(x4505)))+(((x4507)*(x4513)))+(((IkReal(-1.00000000000000))*(x4505)*(x4509)))+(((x4508)*(x4512)))+(((IkReal(-1.00000000000000))*(x4509)*(x4510))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst45)*(((((sj5)*(x4503)*(x4509)))+(((IkReal(-1.00000000000000))*(sj0)*(x4502)*(x4504)))+(((IkReal(-1.00000000000000))*(x4504)*(x4513)))+(((sj0)*(x4502)*(x4509)))+(((IkReal(-1.00000000000000))*(sj5)*(x4503)*(x4504)))+(((x4506)*(x4510)))+(((x4505)*(x4506)))+(((x4505)*(x4507)))+(((x4507)*(x4510)))+(((sj5)*(x4508)*(x4509)))+(((IkReal(-1.00000000000000))*(sj5)*(x4504)*(x4508)))+(((x4509)*(x4513))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst45)*(((((sj5)*(x4503)*(x4506)))+(((x4502)*(x4511)))+(((x4504)*(x4510)))+(((x4503)*(x4512)))+(((sj0)*(x4502)*(x4507)))+(((x4506)*(x4513)))+(((sj5)*(x4506)*(x4508)))+(((x4504)*(x4505)))+(((x4507)*(x4513)))+(((IkReal(-1.00000000000000))*(x4505)*(x4509)))+(((x4508)*(x4512)))+(((IkReal(-1.00000000000000))*(x4509)*(x4510)))))), ((gconst45)*(((((sj5)*(x4503)*(x4509)))+(((IkReal(-1.00000000000000))*(sj0)*(x4502)*(x4504)))+(((IkReal(-1.00000000000000))*(x4504)*(x4513)))+(((sj0)*(x4502)*(x4509)))+(((IkReal(-1.00000000000000))*(sj5)*(x4503)*(x4504)))+(((x4506)*(x4510)))+(((x4505)*(x4506)))+(((x4505)*(x4507)))+(((x4507)*(x4510)))+(((sj5)*(x4508)*(x4509)))+(((IkReal(-1.00000000000000))*(sj5)*(x4504)*(x4508)))+(((x4509)*(x4513)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4514=IKcos(j1);
IkReal x4515=IKsin(j1);
IkReal x4516=((IkReal(0.707109999985348))*(cj2));
IkReal x4517=((IkReal(1.00000000000000))*(cj0));
IkReal x4518=((IkReal(0.707109999985348))*(sj2));
IkReal x4519=((cj5)*(sj4));
IkReal x4520=((sj4)*(sj5));
IkReal x4521=((IkReal(1.00000000000000))*(sj0));
IkReal x4522=((sj5)*(x4521));
IkReal x4523=((IkReal(0.707103562373095))*(x4514));
IkReal x4524=((IkReal(0.707103562373095))*(x4515));
IkReal x4525=((cj2)*(x4523));
IkReal x4526=((x4515)*(x4516));
IkReal x4527=((sj2)*(x4524));
IkReal x4528=((x4514)*(x4518));
IkReal x4529=((sj2)*(x4523));
IkReal x4530=((cj2)*(x4524));
IkReal x4531=((x4514)*(x4516));
IkReal x4532=((x4515)*(x4518));
IkReal x4533=((x4530)+(x4531)+(x4529));
IkReal x4534=((x4528)+(x4527)+(x4526));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x4532)))+(x4533)+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(x4525)))+(((r21)*(x4520)))+(x4534)+(((IkReal(-1.00000000000000))*(r20)*(x4519))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4517)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x4517)))+(((IkReal(-1.00000000000000))*(x4534)))+(x4525)+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x4521)))+(((IkReal(-1.00000000000000))*(r10)*(x4522))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x4520)*(x4521)))+(((IkReal(-1.00000000000000))*(x4532)))+(x4533)+(((r10)*(sj0)*(x4519)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x4521)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x4517)))+(((cj0)*(r00)*(x4519)))+(((IkReal(-1.00000000000000))*(r01)*(x4517)*(x4520))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4535=((cj5)*(sj4));
IkReal x4536=((r21)*(sj4));
IkReal x4537=((cj5)*(r21));
IkReal x4538=((IkReal(0.707109999985348))*(cj2));
IkReal x4539=((IkReal(0.707103562373095))*(sj2));
IkReal x4540=((IkReal(0.707109999985348))*(sj2));
IkReal x4541=((cj4)*(r22));
IkReal x4542=((IkReal(0.707103562373095))*(cj2));
IkReal x4543=((r20)*(x4538));
IkReal x4544=((sj5)*(x4542));
IkReal x4545=((sj5)*(x4540));
if( IKabs(((gconst44)*(((((r20)*(x4535)*(x4539)))+(((x4537)*(x4540)))+(((IkReal(-1.00000000000000))*(x4537)*(x4542)))+(((r20)*(x4545)))+(((IkReal(-1.00000000000000))*(r20)*(x4544)))+(((IkReal(-1.00000000000000))*(x4538)*(x4541)))+(((x4535)*(x4543)))+(((IkReal(-1.00000000000000))*(x4539)*(x4541)))+(((IkReal(-1.00000000000000))*(sj5)*(x4536)*(x4538)))+(((IkReal(-1.00000000000000))*(sj5)*(x4536)*(x4539))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst44)*(((((IkReal(-1.00000000000000))*(r20)*(sj5)*(x4539)))+(((r20)*(x4535)*(x4540)))+(((IkReal(-1.00000000000000))*(x4537)*(x4538)))+(((IkReal(-1.00000000000000))*(x4537)*(x4539)))+(((IkReal(-1.00000000000000))*(x4536)*(x4545)))+(((IkReal(-1.00000000000000))*(x4540)*(x4541)))+(((IkReal(-1.00000000000000))*(r20)*(x4535)*(x4542)))+(((x4536)*(x4544)))+(((x4541)*(x4542)))+(((IkReal(-1.00000000000000))*(sj5)*(x4543))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst44)*(((((r20)*(x4535)*(x4539)))+(((x4537)*(x4540)))+(((IkReal(-1.00000000000000))*(x4537)*(x4542)))+(((r20)*(x4545)))+(((IkReal(-1.00000000000000))*(r20)*(x4544)))+(((IkReal(-1.00000000000000))*(x4538)*(x4541)))+(((x4535)*(x4543)))+(((IkReal(-1.00000000000000))*(x4539)*(x4541)))+(((IkReal(-1.00000000000000))*(sj5)*(x4536)*(x4538)))+(((IkReal(-1.00000000000000))*(sj5)*(x4536)*(x4539)))))), ((gconst44)*(((((IkReal(-1.00000000000000))*(r20)*(sj5)*(x4539)))+(((r20)*(x4535)*(x4540)))+(((IkReal(-1.00000000000000))*(x4537)*(x4538)))+(((IkReal(-1.00000000000000))*(x4537)*(x4539)))+(((IkReal(-1.00000000000000))*(x4536)*(x4545)))+(((IkReal(-1.00000000000000))*(x4540)*(x4541)))+(((IkReal(-1.00000000000000))*(r20)*(x4535)*(x4542)))+(((x4536)*(x4544)))+(((x4541)*(x4542)))+(((IkReal(-1.00000000000000))*(sj5)*(x4543)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4546=IKcos(j1);
IkReal x4547=IKsin(j1);
IkReal x4548=((IkReal(0.707109999985348))*(cj2));
IkReal x4549=((IkReal(1.00000000000000))*(cj0));
IkReal x4550=((IkReal(0.707109999985348))*(sj2));
IkReal x4551=((cj5)*(sj4));
IkReal x4552=((sj4)*(sj5));
IkReal x4553=((IkReal(1.00000000000000))*(sj0));
IkReal x4554=((sj5)*(x4553));
IkReal x4555=((IkReal(0.707103562373095))*(x4546));
IkReal x4556=((IkReal(0.707103562373095))*(x4547));
IkReal x4557=((cj2)*(x4555));
IkReal x4558=((x4547)*(x4548));
IkReal x4559=((sj2)*(x4556));
IkReal x4560=((x4546)*(x4550));
IkReal x4561=((sj2)*(x4555));
IkReal x4562=((cj2)*(x4556));
IkReal x4563=((x4546)*(x4548));
IkReal x4564=((x4547)*(x4550));
IkReal x4565=((x4563)+(x4562)+(x4561));
IkReal x4566=((x4558)+(x4559)+(x4560));
evalcond[0]=((((cj5)*(r21)))+(x4565)+(((r20)*(sj5)))+(((IkReal(-1.00000000000000))*(x4564))));
evalcond[1]=((((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x4551)))+(x4566)+(((IkReal(-1.00000000000000))*(x4557)))+(((r21)*(x4552))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4549)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x4553)))+(x4557)+(((IkReal(-1.00000000000000))*(r10)*(x4554)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x4549)))+(((IkReal(-1.00000000000000))*(x4566))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r12)*(x4553)))+(x4565)+(((IkReal(-1.00000000000000))*(r11)*(x4552)*(x4553)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x4549)))+(((IkReal(-1.00000000000000))*(r01)*(x4549)*(x4552)))+(((r10)*(sj0)*(x4551)))+(((cj0)*(r00)*(x4551)))+(((IkReal(-1.00000000000000))*(x4564))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4567=((IkReal(0.707109999985348))*(sj2));
IkReal x4568=((r22)*(sj4));
IkReal x4569=((cj5)*(r20));
IkReal x4570=((r21)*(sj5));
IkReal x4571=((IkReal(0.707109999985348))*(cj2));
IkReal x4572=((cj3)*(r22));
IkReal x4573=((cj3)*(sj4));
IkReal x4574=((IkReal(0.707103562373095))*(cj4)*(sj2));
IkReal x4575=((IkReal(0.707103562373095))*(x4573));
IkReal x4576=((IkReal(0.707103562373095))*(cj2)*(cj4));
if( IKabs(((gconst37)*(((((x4570)*(x4571)*(x4573)))+(((IkReal(-1.00000000000000))*(cj4)*(x4567)*(x4569)))+(((cj4)*(x4567)*(x4570)))+(((sj2)*(x4570)*(x4575)))+(((IkReal(-1.00000000000000))*(x4567)*(x4568)))+(((IkReal(-1.00000000000000))*(x4570)*(x4576)))+(((x4569)*(x4576)))+(((IkReal(-1.00000000000000))*(sj2)*(x4569)*(x4575)))+(((IkReal(0.707103562373095))*(cj2)*(x4568)))+(((IkReal(-1.00000000000000))*(x4569)*(x4571)*(x4573)))+(((x4572)*(x4574)))+(((cj4)*(x4571)*(x4572))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst37)*(((((IkReal(-1.00000000000000))*(cj2)*(x4570)*(x4575)))+(((cj4)*(x4567)*(x4572)))+(((IkReal(-1.00000000000000))*(cj4)*(x4570)*(x4571)))+(((IkReal(-1.00000000000000))*(x4570)*(x4574)))+(((cj4)*(x4569)*(x4571)))+(((cj2)*(x4569)*(x4575)))+(((x4569)*(x4574)))+(((x4568)*(x4571)))+(((IkReal(-1.00000000000000))*(x4572)*(x4576)))+(((IkReal(-1.00000000000000))*(x4567)*(x4569)*(x4573)))+(((x4567)*(x4570)*(x4573)))+(((IkReal(0.707103562373095))*(sj2)*(x4568))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst37)*(((((x4570)*(x4571)*(x4573)))+(((IkReal(-1.00000000000000))*(cj4)*(x4567)*(x4569)))+(((cj4)*(x4567)*(x4570)))+(((sj2)*(x4570)*(x4575)))+(((IkReal(-1.00000000000000))*(x4567)*(x4568)))+(((IkReal(-1.00000000000000))*(x4570)*(x4576)))+(((x4569)*(x4576)))+(((IkReal(-1.00000000000000))*(sj2)*(x4569)*(x4575)))+(((IkReal(0.707103562373095))*(cj2)*(x4568)))+(((IkReal(-1.00000000000000))*(x4569)*(x4571)*(x4573)))+(((x4572)*(x4574)))+(((cj4)*(x4571)*(x4572)))))), ((gconst37)*(((((IkReal(-1.00000000000000))*(cj2)*(x4570)*(x4575)))+(((cj4)*(x4567)*(x4572)))+(((IkReal(-1.00000000000000))*(cj4)*(x4570)*(x4571)))+(((IkReal(-1.00000000000000))*(x4570)*(x4574)))+(((cj4)*(x4569)*(x4571)))+(((cj2)*(x4569)*(x4575)))+(((x4569)*(x4574)))+(((x4568)*(x4571)))+(((IkReal(-1.00000000000000))*(x4572)*(x4576)))+(((IkReal(-1.00000000000000))*(x4567)*(x4569)*(x4573)))+(((x4567)*(x4570)*(x4573)))+(((IkReal(0.707103562373095))*(sj2)*(x4568)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x4577=IKcos(j1);
IkReal x4578=IKsin(j1);
IkReal x4579=((cj0)*(cj4));
IkReal x4580=((r01)*(sj5));
IkReal x4581=((IkReal(1.00000000000000))*(cj4));
IkReal x4582=((IkReal(1.00000000000000))*(r02));
IkReal x4583=((IkReal(0.707109999985348))*(sj3));
IkReal x4584=((IkReal(0.707103562373095))*(sj3));
IkReal x4585=((IkReal(1.00000000000000))*(sj4));
IkReal x4586=((cj5)*(r20));
IkReal x4587=((cj5)*(sj0));
IkReal x4588=((IkReal(1.00000000000000))*(cj0));
IkReal x4589=((r12)*(sj0));
IkReal x4590=((cj2)*(cj3));
IkReal x4591=((IkReal(0.707103562373095))*(cj3));
IkReal x4592=((r21)*(sj5));
IkReal x4593=((IkReal(0.707109999985348))*(cj3));
IkReal x4594=((IkReal(1.00000000000000))*(sj0)*(sj5));
IkReal x4595=((sj2)*(x4577));
IkReal x4596=((cj2)*(x4577));
IkReal x4597=((cj0)*(cj5)*(r00));
IkReal x4598=((IkReal(0.707103562373095))*(x4578));
IkReal x4599=((cj2)*(x4578));
IkReal x4600=((IkReal(0.707109999985348))*(sj2)*(x4578));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x4583)*(x4596)))+(((sj2)*(x4578)*(x4583)))+(((IkReal(-1.00000000000000))*(x4584)*(x4599)))+(((IkReal(-1.00000000000000))*(x4584)*(x4595)))+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((sj4)*(x4592)))+(((IkReal(0.707109999985348))*(x4599)))+(((IkReal(0.707109999985348))*(x4595)))+(((sj2)*(x4598)))+(((IkReal(-1.00000000000000))*(x4585)*(x4586)))+(((IkReal(-0.707103562373095))*(x4596))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj2)*(x4578)*(x4593)))+(((IkReal(0.707109999985348))*(x4577)*(x4590)))+(((x4590)*(x4598)))+(((cj4)*(x4586)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(x4581)*(x4592)))+(((x4591)*(x4595))));
evalcond[3]=((((sj2)*(x4578)*(x4584)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x4588)))+(((x4583)*(x4595)))+(((x4583)*(x4599)))+(((IkReal(-1.00000000000000))*(r10)*(x4594)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4588)))+(((IkReal(-1.00000000000000))*(x4584)*(x4596)))+(((IkReal(-1.00000000000000))*(r11)*(x4587))));
evalcond[4]=((((r10)*(sj4)*(x4587)))+(((IkReal(-1.00000000000000))*(x4579)*(x4582)))+(((IkReal(-1.00000000000000))*(x4600)))+(((IkReal(-1.00000000000000))*(cj0)*(x4580)*(x4585)))+(((sj4)*(x4597)))+(((IkReal(-1.00000000000000))*(x4581)*(x4589)))+(((IkReal(0.707109999985348))*(x4596)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj5)*(x4585)))+(((IkReal(0.707103562373095))*(x4595)))+(((cj2)*(x4598))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj2)*(x4578)*(x4591)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x4579)))+(((x4579)*(x4580)))+(((IkReal(-1.00000000000000))*(x4593)*(x4595)))+(((cj4)*(r11)*(sj0)*(sj5)))+(((IkReal(0.707103562373095))*(x4577)*(x4590)))+(((IkReal(-1.00000000000000))*(cj0)*(sj4)*(x4582)))+(((IkReal(-1.00000000000000))*(r10)*(x4581)*(x4587)))+(((IkReal(-1.00000000000000))*(x4585)*(x4589)))+(((IkReal(-0.707109999985348))*(x4578)*(x4590))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4601=((sj2)*(sj3));
IkReal x4602=((cj4)*(r22));
IkReal x4603=((r20)*(sj5));
IkReal x4604=((IkReal(0.707103562373095))*(cj2));
IkReal x4605=((IkReal(0.707109999985348))*(sj2));
IkReal x4606=((IkReal(0.707109999985348))*(cj2));
IkReal x4607=((cj5)*(r21));
IkReal x4608=((IkReal(0.707103562373095))*(sj2));
IkReal x4609=((r21)*(sj4)*(sj5));
IkReal x4610=((cj5)*(r20)*(sj4));
if( IKabs(((gconst36)*(((((x4605)*(x4607)))+(((IkReal(-1.00000000000000))*(x4603)*(x4604)))+(((IkReal(-0.707103562373095))*(x4601)*(x4610)))+(((x4603)*(x4605)))+(((sj3)*(x4606)*(x4609)))+(((IkReal(0.707103562373095))*(x4601)*(x4609)))+(((IkReal(0.707103562373095))*(x4601)*(x4602)))+(((IkReal(-1.00000000000000))*(x4604)*(x4607)))+(((sj3)*(x4602)*(x4606)))+(((IkReal(-1.00000000000000))*(sj3)*(x4606)*(x4610))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((sj3)*(x4604)*(x4610)))+(((IkReal(-1.00000000000000))*(x4603)*(x4608)))+(((IkReal(-1.00000000000000))*(x4603)*(x4606)))+(((IkReal(-1.00000000000000))*(x4606)*(x4607)))+(((IkReal(-1.00000000000000))*(sj3)*(x4604)*(x4609)))+(((IkReal(0.707109999985348))*(x4601)*(x4609)))+(((IkReal(0.707109999985348))*(x4601)*(x4602)))+(((IkReal(-0.707109999985348))*(x4601)*(x4610)))+(((IkReal(-1.00000000000000))*(sj3)*(x4602)*(x4604)))+(((IkReal(-1.00000000000000))*(x4607)*(x4608))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst36)*(((((x4605)*(x4607)))+(((IkReal(-1.00000000000000))*(x4603)*(x4604)))+(((IkReal(-0.707103562373095))*(x4601)*(x4610)))+(((x4603)*(x4605)))+(((sj3)*(x4606)*(x4609)))+(((IkReal(0.707103562373095))*(x4601)*(x4609)))+(((IkReal(0.707103562373095))*(x4601)*(x4602)))+(((IkReal(-1.00000000000000))*(x4604)*(x4607)))+(((sj3)*(x4602)*(x4606)))+(((IkReal(-1.00000000000000))*(sj3)*(x4606)*(x4610)))))), ((gconst36)*(((((sj3)*(x4604)*(x4610)))+(((IkReal(-1.00000000000000))*(x4603)*(x4608)))+(((IkReal(-1.00000000000000))*(x4603)*(x4606)))+(((IkReal(-1.00000000000000))*(x4606)*(x4607)))+(((IkReal(-1.00000000000000))*(sj3)*(x4604)*(x4609)))+(((IkReal(0.707109999985348))*(x4601)*(x4609)))+(((IkReal(0.707109999985348))*(x4601)*(x4602)))+(((IkReal(-0.707109999985348))*(x4601)*(x4610)))+(((IkReal(-1.00000000000000))*(sj3)*(x4602)*(x4604)))+(((IkReal(-1.00000000000000))*(x4607)*(x4608)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x4611=IKcos(j1);
IkReal x4612=IKsin(j1);
IkReal x4613=((cj0)*(cj4));
IkReal x4614=((r01)*(sj5));
IkReal x4615=((IkReal(1.00000000000000))*(cj4));
IkReal x4616=((IkReal(1.00000000000000))*(r02));
IkReal x4617=((IkReal(0.707109999985348))*(sj3));
IkReal x4618=((IkReal(0.707103562373095))*(sj3));
IkReal x4619=((IkReal(1.00000000000000))*(sj4));
IkReal x4620=((cj5)*(r20));
IkReal x4621=((cj5)*(sj0));
IkReal x4622=((IkReal(1.00000000000000))*(cj0));
IkReal x4623=((r12)*(sj0));
IkReal x4624=((cj2)*(cj3));
IkReal x4625=((IkReal(0.707103562373095))*(cj3));
IkReal x4626=((r21)*(sj5));
IkReal x4627=((IkReal(0.707109999985348))*(cj3));
IkReal x4628=((IkReal(1.00000000000000))*(sj0)*(sj5));
IkReal x4629=((sj2)*(x4611));
IkReal x4630=((cj2)*(x4611));
IkReal x4631=((cj0)*(cj5)*(r00));
IkReal x4632=((IkReal(0.707103562373095))*(x4612));
IkReal x4633=((cj2)*(x4612));
IkReal x4634=((IkReal(0.707109999985348))*(sj2)*(x4612));
evalcond[0]=((((cj5)*(r21)))+(((IkReal(-1.00000000000000))*(x4617)*(x4630)))+(((IkReal(-1.00000000000000))*(x4618)*(x4629)))+(((sj2)*(x4612)*(x4617)))+(((IkReal(-1.00000000000000))*(x4618)*(x4633)))+(((r20)*(sj5))));
evalcond[1]=((((cj4)*(r22)))+(((IkReal(0.707109999985348))*(x4633)))+(((IkReal(0.707109999985348))*(x4629)))+(((IkReal(-1.00000000000000))*(x4619)*(x4620)))+(((sj2)*(x4632)))+(((IkReal(-0.707103562373095))*(x4630)))+(((sj4)*(x4626))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj2)*(x4612)*(x4627)))+(((r22)*(sj4)))+(((x4624)*(x4632)))+(((cj4)*(x4620)))+(((IkReal(0.707109999985348))*(x4611)*(x4624)))+(((x4625)*(x4629)))+(((IkReal(-1.00000000000000))*(x4615)*(x4626))));
evalcond[3]=((((sj2)*(x4612)*(x4618)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x4622)))+(((x4617)*(x4633)))+(((IkReal(-1.00000000000000))*(x4618)*(x4630)))+(((IkReal(-1.00000000000000))*(r11)*(x4621)))+(((x4617)*(x4629)))+(((IkReal(-1.00000000000000))*(r10)*(x4628)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4622))));
evalcond[4]=((((sj4)*(x4631)))+(((IkReal(0.707103562373095))*(x4629)))+(((IkReal(-1.00000000000000))*(x4634)))+(((IkReal(-1.00000000000000))*(cj0)*(x4614)*(x4619)))+(((IkReal(0.707109999985348))*(x4630)))+(((r10)*(sj4)*(x4621)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(sj5)*(x4619)))+(((cj2)*(x4632)))+(((IkReal(-1.00000000000000))*(x4615)*(x4623)))+(((IkReal(-1.00000000000000))*(x4613)*(x4616))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj2)*(x4612)*(x4625)))+(((IkReal(-1.00000000000000))*(x4627)*(x4629)))+(((IkReal(0.707103562373095))*(x4611)*(x4624)))+(((cj4)*(r11)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(cj0)*(sj4)*(x4616)))+(((IkReal(-1.00000000000000))*(r10)*(x4615)*(x4621)))+(((IkReal(-1.00000000000000))*(x4619)*(x4623)))+(((IkReal(-0.707109999985348))*(x4612)*(x4624)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x4613)))+(((x4613)*(x4614))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-5*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - armadillo_arm_urdf (0441215a9dbfd0cdd2b1453a38e101c8)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif

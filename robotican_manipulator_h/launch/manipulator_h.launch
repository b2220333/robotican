<launch>
	<arg name="world_name" default="$(find robotican_common)/worlds/objects_on_table.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
	<arg name="gazebo" default="false" />
	<arg name="paused" default="false"/>
	<arg name="use_sim_time" default="true"/>
	<arg name="gui" default="true"/>
	<arg name="headless" default="false"/>
	<arg name="debug" default="false"/> 
	<arg name="moveit" default="true"/>
	<arg name="x" default="0.0"/>
	<arg name="y" default="0.0"/>
	<arg name="z" default="0.0"/>
	<arg name="R" default="0.0" />
	<arg name="P" default="0.0" />
	<arg name="Y" default="0.0" />
	
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>
	
	<group if="$(arg gazebo)">
		
		<env name="GAZEBO_MODEL_PATH" value="$(find robotican_common)/models:$(optenv GAZEBO_MODEL_PATH)"/>
		<param name="robot_description" command="$(find xacro)/xacro.py '$(find robotican_manipulator_h)/models/manipulator_h_gazebo.xacro'" />

		<include file="$(find gazebo_ros)/launch/empty_world.launch">
			<arg name="world_name" value="$(arg world_name)"/>
			<!-- <arg name="world_name" value="$(find robotican_common)/worlds/UPlat.sdf"/> -->
			<arg name="debug" value="$(arg debug)" />
			<arg name="gui" value="$(arg gui)" />
			<arg name="paused" value="$(arg paused)"/>
			<arg name="use_sim_time" value="$(arg use_sim_time)"/>
			<arg name="headless" value="$(arg headless)"/>
    	</include>
	    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
			args="-urdf -model komodo -param robot_description -x 2.010867 -y -0.689194 -z 0.659883 -R -0.0 -P -0.0 -Y 1.5707"/> 
		
	</group>

	<group unless="$(arg gazebo)">
		<node pkg="tf" type="static_transform_publisher" name="map_odom_broadcaster" args="0 0 0 0 0 0 /map /base_arm_link 20" />
		<param name="robot_description" command="$(find xacro)/xacro.py '$(find robotican_manipulator_h)/models/manipulator_h.xacro'" />
		<rosparam command="load" file="$(find robotican_manipulator_h)/config/gripper.yaml" />
		<node name="arm_node" pkg="robotican_manipulator_h" type="arm_node" output="screen" >
			<rosparam command="load" file="$(find robotican_manipulator_h)/config/arm_config.yaml" />
		</node>

		<node name="dynamixel_manager" pkg="dynamixel_controllers" type="controller_manager.py" required="true" output="screen">          
		  <rosparam>
                namespace: dxl_manager
                serial_ports:
                 gripper_port:
                  port_name: "/dev/ttyUSB0"
                  baud_rate: 57142
                  min_motor_id: 1
                  max_motor_id: 2
                  update_rate: 20
                </rosparam>
		</node>
				<node name="arm_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
		  args="--manager=dxl_manager
				--port=gripper_port
		left_finger_controller
		right_finger_controller"
				output="screen"/>

	</group>

	 <rosparam file="$(find robotican_manipulator_h)/config/controllers.yaml" command="load"/>
	 <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="	  
      robot_state_controller
      arm_trajectory_controller
      gripper_controller
	  " />

  	<group if="$(arg moveit)">
		<include file="$(find robotican_manipulator_h_moveit_config)/launch/move_group.launch" >
		</include>
	</group>
</launch>
